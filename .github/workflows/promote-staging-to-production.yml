
# Terraform Action to promote content and redirects from staging to production
name: Promote Docs Staging to Production
on:
  workflow_dispatch:

jobs:
  content:
    runs-on: ubuntu-22.04
    permissions: write-all
    defaults:
      run:
        working-directory: scripts/redirect_creation
    steps:
      - uses: actions/checkout@v5

      - name: Configure AWS credentials for vault access
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.LIQUIBASE_VAULT_OIDC_ROLE_ARN }}
          aws-region: us-east-1

      - name: Get secrets from vault
        id: vault-secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            ,/vault/liquibase
          parse-json-secrets: true

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ADMIN_GITHUB_OIDC_ROLE_ARN_DOCS }}
          aws-region: us-east-1

      - name: Promote Staging Content to Production
        run:
          aws s3 sync s3://stage-docsstageliquibasecom-origin/ s3://prod-docsliquibasecom-origin/ --delete --exclude "robots.txt"
          
  redirects:
    runs-on: ubuntu-22.04
    permissions: write-all
    env:
      TF_VAR_env: "prod"
    defaults:
      run:
        working-directory: scripts/redirect_creation
    steps:
      - uses: actions/checkout@v5

      - name: Configure AWS credentials for vault access
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.LIQUIBASE_VAULT_OIDC_ROLE_ARN }}
          aws-region: us-east-1

      - name: Get secrets from vault
        id: vault-secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            ,/vault/liquibase
          parse-json-secrets: true

      - name: Install spacectl
        uses: spacelift-io/setup-spacectl@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SPACELIFT_API_KEY_ENDPOINT: ${{ env.SPACELIFT_API_KEY_ENDPOINT }}
          SPACELIFT_API_KEY_ID: ${{ env.SPACELIFT_API_KEY_ID }}
          SPACELIFT_API_KEY_SECRET: ${{ env.SPACELIFT_API_KEY_SECRET }}
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ADMIN_GITHUB_OIDC_ROLE_ARN_DOCS }}
          aws-region: us-east-1

      - name: Deploy infrastructure
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SPACELIFT_API_KEY_ENDPOINT: ${{ env.SPACELIFT_API_KEY_ENDPOINT }}
          SPACELIFT_API_KEY_ID: ${{ env.SPACELIFT_API_KEY_ID }}
          SPACELIFT_API_KEY_SECRET: ${{ env.SPACELIFT_API_KEY_SECRET }}
        run: |
          spacectl stack set-current-commit --id liquibase-docs-prod --sha ${{ github.sha }}
          spacectl stack deploy --id liquibase-docs-prod --auto-confirm 
