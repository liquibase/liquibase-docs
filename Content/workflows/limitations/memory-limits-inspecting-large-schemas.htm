<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:searchable="False">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/workflows/limitations/memory-limits-inspecting-large-schemas.html" />
        <meta name="description" content="This page explains solutions to performance limitations of Liquibase database inspection commands when using a database schema with a large number of objects." />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
    </head>
    <body>
        <h1>Memory Limits of Inspecting Large Schemas</h1>
        <p>When your database contains a very large number of complex objects, <MadCap:variable name="General.Liquibase" /> may not be able to successfully execute database inspection use-cases, such as <a href="../../tools-integrations/observability/operation-reports-drift-report.htm">drift detection</a>. This includes commands like <code><MadCap:xref href="../../commands/inspection/diff.htm">diff</MadCap:xref></code>, <code><MadCap:xref href="../../commands/inspection/diff-changelog.html">diff-changelog</MadCap:xref></code>, <code><MadCap:xref href="../../commands/inspection/generate-changelog.html">generate-changelog</MadCap:xref></code>, <code><MadCap:xref href="../../commands/inspection/snapshot.html">snapshot</MadCap:xref></code>, and <code><MadCap:xref href="../../commands/inspection/snapshot-reference.html">snapshot-reference</MadCap:xref></code>.</p>
        <h2>Causes</h2>
        <p>You may experience <MadCap:variable name="General.Liquibase" /> execution failures if you run resource-intensive commands on a database containing several thousand objects. This is because <MadCap:variable name="General.Liquibase" /> commands like <code class="language-text">diff</code> store a model of database objects in system memory before writing it to disk. If your database is very large, the memory heap reaches capacity before <MadCap:variable name="General.Liquibase" /> can finish running the command. As a result, Java throws the <code class="language-text">OutOfMemoryError</code> exception.</p>
        <p>This may be more likely to occur in databases containing tens of thousands, hundreds of thousands, or millions of objects. However, the exact limit depends on the quantity, type, and complexity of objects in your database. It also depends on your database's engine technology, custom schemas, and your machine's processing power and RAM (random access memory).</p>
        <p class="tip" MadCap:autonum="&lt;b&gt;Tip: &lt;/b&gt;">You may never experience these performance limitations. To estimate the point they could impact your workflow, create a test database with a large, complex schema. Then run <MadCap:variable name="General.Liquibase" /> commands and observe your database's behavior.</p>
        <h2>Solutions</h2>
        <h3><code>--snapshot-filters</code> parameter</h3>
        <MadCap:snippetBlock src="../../Z_Resources/Snippets/text/command-snapshot-filters-uses.flsnp" />
        <p> For example, when you run the <code class="language-text">snapshot</code> command in your command line, you can include only a few important objects:</p><pre><code class="language-text">liquibase snapshot --snapshot-filters=table,view</code></pre>
        <p>This includes only tables and views in the snapshot. For more information, see <code><MadCap:xref href="../../commands/inspection/snapshot.html">snapshot</MadCap:xref></code>.</p>
        <h3>Java Virtual Machine settings</h3>
        <p>The Java Virtual Machine (JVM) enables your computer to run Java programs like <MadCap:variable name="General.Liquibase" />. You can use the <MadCap:xref href="../../concepts/connections/java-opts-environment-variable.htm">JAVA_OPTS Environment Variable</MadCap:xref> to modify <a href="https://docs.oracle.com/javase/8/docs/technotes/tools/windows/java.html">JVM settings</a> that affect <MadCap:variable name="General.Liquibase" /> commands.</p>
        <p>To increase the <b>maximum memory heap size</b> of the JVM, specify a new value for the JVM option <code class="language-text">-Xmx</code>. This controls memory managed by the JVM garbage collector. Use the format <code class="language-text">-Xmx&lt;value&gt;&lt;unit&gt;</code>. For example, the following command sets maximum heap memory to 1 GB:</p>
        <ul>
            <li>Mac/Linux syntax:</li><pre><code class="language-shell">$ JAVA_OPTS="-Xmx1g"</code></pre><pre><code class="language-shell">$ liquibase generate-changelog --changelog-file=newChangeLog.xml</code></pre>
            <li>Windows syntax:</li><pre><code class="language-shell">$ set JAVA_OPTS="-Xmx1g"</code></pre><pre><code class="language-shell">$ set liquibase generate-changelog --changelog-file=newChangeLog.xml</code></pre>
        </ul>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">In addition to <code class="language-text">-Xmx</code> (maximum heap size), you may also want to try using <code class="language-text">-Xmn</code> (initial and maximum heap size) and <code class="language-text">-Xmn</code> (minimum and initial heap size). See <a href="https://docs.oracle.com/javase/8/docs/technotes/tools/windows/java.html#BABHDABI">Java: Non-Standard Options</a> and the <a href="https://docs.oracle.com/javase/8/docs/technotes/guides/vm/gctuning/sizing.html">Java Standard Edition HotSpot Virtual Machine Garbage Collection Tuning Guide</a>.</p>
        <p class="warning" MadCap:autonum="&lt;b&gt;Warning: &lt;/b&gt;">If you set the JVM's maximum heap memory usage too high, <MadCap:variable name="General.Liquibase" /> may compete for resources with other applications on your system.</p>
        <h3>Hardware upgrades</h3>
        <p>If necessary, you can also upgrade your system RAM. If the&#160;JVM can access more physical memory, <MadCap:variable name="General.Liquibase" /> can successfully run more resource-intensive commands.</p>
        <p>To determine <b>approximately</b> how much more RAM you need to run a particular command, estimate your current memory limit:</p>
        <ol>
            <li>Compare your current schema to smaller schemas with similarly complex objects.</li>
            <li>Run a <MadCap:variable name="General.Liquibase" /> database inspection command like <code class="language-text">snapshot</code> on the smaller schemas.</li>
            <li>If it succeeds on a small schema but fails on a slightly larger schema, the memory limit must be somewhere in between.</li>
            <li>Use a hardware monitoring tool to see how much RAM <MadCap:variable name="General.Liquibase" /> uses when running the command on each schema.</li>
        </ol>
        <p>For example, assume <code class="language-text">big-schema</code> has 1 million objects of a given amount of complexity, and <code class="language-text">snapshot</code> always returns an <code class="language-text">OutOfMemoryError</code>. If you can successfully run <code class="language-text">snapshot</code> on <code class="language-text">small-schema</code> (containing 700,000 <b>similar</b> objects) but not <code class="language-text">medium-schema</code> (containing 800,000 <b>similar</b> objects), your memory limit for <code class="language-text">snapshot</code> is approximately 750,000 objects. In this case, you would need ~33% more RAM to run <code class="language-text">snapshot</code> on <code class="language-text">big-schema</code>.</p>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">This method may be inaccurate if your test schemas do not have similar objects and architectures. It may also be inaccurate if you compare test results from different databases or machines.</p>
        <h2>Related links</h2>
        <ul>
            <li>
                <MadCap:xref href="../../start/install/liquibase-requirements.htm">Requirements</MadCap:xref>
            </li>
        </ul>
    </body>
</html>