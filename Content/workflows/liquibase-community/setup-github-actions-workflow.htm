<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:searchable="False" MadCap:conditions="Default.EXCLUDE">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/workflows/liquibase-community/setup-github-actions-workflow.html" />
        <meta name="description" content="Reference information on how to use GitHub Actions for Liquibase." />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
    </head>
    <body>
        <h1>GitHub Actions Workflow Setup</h1>
        <p>If you don't want to install <MadCap:variable name="General.Liquibase" /> locally on your laptop or use a <a href="https://www.pcmag.com/encyclopedia/term/remote-host">remote host</a> that will run the software for you, you can try the <MadCap:variable name="General.Liquibase" /> GitHub Actions workflow.</p>
        <p><a href="https://docs.github.com/en/free-pro-team@latest/actions">GitHub Actions</a> is a way to automate, customize, and execute your software development workflows in a repository. You can create and share actions to perform any job, including CI/CD, and combine actions in a customized workflow.</p>
        <ul>
            <li>A <b>workflow</b> is an automated procedure that you add to your repository. Workflows are made up of one or more jobs and can be scheduled or triggered by an event. The workflow can be used to build, test, package, release, or deploy a project on GitHub.</li>
            <li>A <b>job</b> is a set of steps that is executed on the same runner.</li>
        </ul>
        <h2>Prerequisites</h2>
        <p>Ensure that you have a <a href="https://github.com/">GitHub account</a>. For more information, see <a href="https://docs.github.com/en/free-pro-team@latest/github/getting-started-with-github/signing-up-for-github">Signing Up for GitHub</a>.</p>
        <h2>Using the <MadCap:variable name="General.Liquibase" /> GitHub Action plugin</h2>
        <p>Using GitHub Actions, you can set the type of <a href="https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners">VM instance</a> you want to run and the actions you want to perform during a job in a <a href="https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions">workflow</a>.</p>
        <p><a href="https://github.com/liquibase/liquibase-github-action"><MadCap:variable name="General.Liquibase" /> GitHub Action</a> is the official <MadCap:variable name="General.Liquibase" /> plugin for <a href="https://docs.github.com/en/actions">GitHub Actions</a>. The plugin launches a Docker container with <MadCap:variable name="General.Liquibase" /> tools on an ephemeral server hosted at GitHub. It allows you to automate and execute your workflows in a repository and run <MadCap:variable name="General.Liquibase" /> commands. You can use the <a href="https://github.com/liquibase/liquibase-github-action-example"><MadCap:variable name="General.Liquibase" /> GitHub Actions example</a> repository with the setup workflows. This repository contains a <a href="https://github.com/liquibase/liquibase-github-action-example/blob/main/README.md">README file</a> with instructions to follow, <MadCap:variable name="General.Liquibase" /> projects, and an H2 database with GitHub Actions workflows for the following setups:</p>
        <ul>
            <li><MadCap:variable name="General.Liquibase" /> Command Line Interface (CLI)</li>
            <li><MadCap:variable name="General.Liquibase" /> Maven commands with Spring Boot</li>
            <li><MadCap:variable name="General.Liquibase" /> Gradle commands</li>
            <li><MadCap:variable name="General.Liquibase" /> NodeJS commands</li>
            <li><MadCap:variable name="General.Liquibase" /> running in Docker</li>
        </ul>
        <p>There are corresponding files for each project in the repository:</p>
        <table>
            <col style="width: 600px;" />
            <col style="width: 600px;" />
            <col style="width: 600px;" />
            <thead>
                <tr>
                    <th>Project</th>
                    <th>Folder</th>
                    <th>Files</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><MadCap:variable name="General.Liquibase" /> CLI commands</td>
                    <td><code>example/changelogs</code>
                    </td>
                    <td>The <MadCap:variable name="General.changelog" /> files</td>
                </tr>
                <tr>
                    <td>Gradle</td>
                    <td><code>extra/Gradle_h2</code>
                    </td>
                    <td>The <code>build.gradle</code> and <MadCap:variable name="General.changelog" /> files</td>
                </tr>
                <tr>
                    <td>Maven</td>
                    <td><code>extra/SalesManager_h2_version</code>
                    </td>
                    <td>The <code>pom.xml</code> and <code>application.properties</code> Spring Boot class Java files</td>
                </tr>
                <tr>
                    <td>Docker</td>
                    <td><code>extra/Docker</code>
                    </td>
                    <td>The <MadCap:variable name="General.changelog" /> file</td>
                </tr>
                <tr>
                    <td>NodeJS</td>
                    <td><code>extra/NodeJS</code>
                    </td>
                    <td>The <code>.js</code> configuration files</td>
                </tr>
            </tbody>
        </table>
        <p>The plugin supports the following <MadCap:variable name="General.Liquibase" /> commands for automation:</p>
        <ul>
            <li>update</li>
            <li>update-sql</li>
            <li>update-count</li>
            <li>tag</li>
            <li>update-to-tag</li>
            <li>rollback</li>
            <li>rollback-count</li>
            <li>rollback-to-date</li>
            <li>future-rollback-sql</li>
            <li>status</li>
            <li>history</li>
            <li>diff</li>
        </ul>
        <h2>Running <MadCap:variable name="General.Liquibase" /> GitHub Actions </h2>
        <p>The steps in this section are based on the example files and an H2 database.</p>
        <p class="tip" MadCap:autonum="&lt;b&gt;Tip: &lt;/b&gt;">If you want to try GitHub Actions with your <MadCap:variable name="General.changelog" /> and database, you can make a pull request against the <a href="https://github.com/liquibase/liquibase-github-action">liquibase-github-action</a> repository with your operations, <MadCap:variable name="General.changelog" />, database username, password, and JDBC URL. To use the official <MadCap:variable name="General.Liquibase" /> GitHub Action in your project, add a new <code>uses:</code> tag to your workflow YAML file that references <code>liquibase/liquibase-github-action</code>. Modify the <code>with:</code> tag to define the needed <MadCap:variable name="General.Liquibase" /> command and other parameters. The <a href="https://github.com/liquibase/liquibase-github-action/blob/main/README.md">README file</a> provides two examples as well as the information on required and optional inputs.</p>
        <ol>
            <li>Fork the <a href="https://github.com/liquibase/liquibase-github-action-example">liquibase-github-action-example</a> repository by selecting the <b>Fork</b> button at the upper-right corner of the <code>liquibase-github-action-example</code> page.</li>
            <li>Clone the <code>liquibase-github-action-example</code> repository by running the following in the CLI:</li><pre xml:space="preserve"><code class="language-text">git clone git@github.com:&lt;YOURFORK&gt;/liquibase/liquibase-github-action-example.git</code></pre>
            <li>Create a new git branch for your changes:</li><pre xml:space="preserve"><code class="language-text">git checkout -b &lt;your_branch_name&gt;</code></pre>
        </ol>
        <ol start="4">
            <li>Edit <code>example/changelogs/samplechangelog.h2.sql</code> to add a new <MadCap:variable name="General.changeset" />. Replace <code>yourname</code> with a unique identifier:</li><pre xml:space="preserve"><code class="language-sql">--changeset yourname:yourname1
--rollback DROP TABLE yourname;
CREATE TABLE yourname (
id int primary key,
name varchar(50) not null,
)</code></pre>
            <li>Add the database username, password, and URL to your <a href="https://docs.github.com/en/actions/reference/encrypted-secrets">GitHub Secrets</a>. The values to use are in <code>example/changelogs/configurationValues.txt</code>. It is a good practice to protect your database credentials with Github Secrets, which will be used in the examples.</li>
            <li>Add, commit, and then push your changes to GitHub:</li><pre xml:space="preserve"><code class="language-text">git add example/changelogs/samplechangelog.h2.sql
git commit -m "yourname: Adding new changeset for example"
git push origin &lt;your_branch_name&gt;</code></pre>
        </ol>
        <p>Your commit triggers a build in GitHub and executes a <MadCap:variable name="General.Liquibase" /> update.</p>
        <p>To execute other commands, choose the command that you need from the list below. Then, update a code snippet example in the <code>example.yml</code> file located in <code>.github/workflows</code> before pushing your changes to GitHub.</p>
        <p>To add and change a <MadCap:variable name="General.changelog" /> or the <a href="https://docs.liquibase.com/workflows/liquibase-community/creating-config-properties.html"><MadCap:variable name="General.Liquibase" /> properties file</a>, modify it in the repository and commit the changes without installing the files locally.</p>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><code>update-sql</code>
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-text">steps:
- uses: actions/checkout@v2
- uses: liquibase/liquibase-github-action@v1
  with:
	operation: 'update-sql'
	classpath: 'example/changelogs'
	changelog-file: 'samplechangelog.h2.sql'
	username: ${{ secrets.USERNAME }}
	password: ${{ secrets.PASSWORD }}
	url: ${{ secrets.URL }}</code></pre>
                <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">For more information about the command, see the <MadCap:xref href="../../commands/update/update-sql.htm">update-sql</MadCap:xref> command.</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><code>update-count</code>
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-text">steps:
- uses: actions/checkout@v2
- uses: liquibase/liquibase-github-action@v1
  with:
	operation: 'update-count'
	classpath: 'example/changelogs'
	changelog-file: 'samplechangelog.h2.sql'
	username: ${{ secrets.USERNAME }}
	password: ${{ secrets.PASSWORD }}
	url: ${{ secrets.URL }}
	count: 2</code></pre>
                <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">	For more information about the command, see the <MadCap:xref href="../../commands/update/update-count.htm">update-count</MadCap:xref> command.</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><code>tag</code>
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-text">steps:
- uses: actions/checkout@v2
- uses: liquibase/liquibase-github-action@v1
  with:
	operation: 'tag'
	username: ${{ secrets.USERNAME }}
	password: ${{ secrets.PASSWORD }}
	url: ${{ secrets.URL }}
	tag: version1</code></pre>
                <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">For more information about the command, see the <MadCap:xref href="../../commands/utility/tag.html">tag</MadCap:xref> command.</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><code>update-to-tag</code>
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-text">steps:
- uses: actions/checkout@v2
- uses: liquibase/liquibase-github-action@v1
  with:
	operation: 'update-to-tag'
	classpath: 'example/changelogs'
	changelog-file: 'samplechangelog.h2.sql'
	username: ${{ secrets.USERNAME }}
	password: ${{ secrets.PASSWORD }}
	url: ${{ secrets.URL }}
	tag: version1</code></pre>
                <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">For more information about the command, see the <MadCap:xref href="../../commands/update/update-to-tag.html">update-to-tag</MadCap:xref> command.</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><code>rollback</code>
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-text">steps:
- uses: actions/checkout@v2
- uses: liquibase/liquibase-github-action@v1
  with:
	operation: 'rollback'
	classpath: 'example/changelogs'
	changelog-file: 'samplechangelog.h2.sql'
	username: ${{ secrets.USERNAME }}
	password: ${{ secrets.PASSWORD }}
	url: ${{ secrets.URL }}
	tag: version1</code></pre>
                <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">For more information about the command, see the <MadCap:xref href="../../commands/rollback/rollback-by-tag.htm">rollback</MadCap:xref> command.</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><code>rollback-count</code>
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-text">steps:
- uses: actions/checkout@v2
- uses: liquibase/liquibase-github-action@v1
  with:
	operation: 'rollback-count'
	classpath: 'example/changelogs'
	changelog-file: 'samplechangelog.h2.sql'
	username: ${{ secrets.USERNAME }}
	password: ${{ secrets.PASSWORD }}
	url: ${{ secrets.URL }}
	count: 2</code></pre>
                <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">For more information about the command, see the <MadCap:xref href="../../commands/rollback/rollback-count.htm">rollback-count</MadCap:xref> command.</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><code>rollback-to-date</code>
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-text">steps:
- uses: actions/checkout@v2
- uses: liquibase/liquibase-github-action@v1
  with:
	operation: 'rollback-to-date'
	classpath: 'example/changelogs'
	changelog-file: 'samplechangelog.h2.sql'
	username: ${{ secrets.USERNAME }}
	password: ${{ secrets.PASSWORD }}
	url: ${{ secrets.URL }}
	date: 2020-05-07</code></pre>
                <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">There are several ways to revert your changes with the <code>rollback-to-date</code> command. You can use the <code>YYYY-MM-DD</code>, <code>HH:MM:SS</code>, or <code>YYYY-MM-DD'T'HH:MM:SS</code> formats to specify date, time, or both. Also, you can specify the date or time only. For more information about the command, see the <MadCap:xref href="../../commands/rollback/rollback-to-date.htm">rollback-to-date</MadCap:xref> command.</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><code>future-rollback-sql</code>
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-text">steps:
- uses: actions/checkout@v2
- uses: liquibase/liquibase-github-action@v1
  with:
	operation: 'future-rollback-sql'
	classpath: 'example/changelogs'
	changelog-file: 'samplechangelog.h2.sql'
	username: ${{ secrets.USERNAME }}
	password: ${{ secrets.PASSWORD }}
	url: ${{ secrets.URL }}</code></pre>
                <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">For more information about the command, see the <MadCap:xref href="../../commands/rollback/future-rollback-sql.htm">future-rollback-sql</MadCap:xref> command.</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><code>status</code>
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-text">steps:
- uses: actions/checkout@v2
- uses: liquibase/liquibase-github-action@v1
  with:
	operation: 'status'
	classpath: 'example/changelogs'
	changelog-file: 'samplechangelog.h2.sql'
	username: ${{ secrets.USERNAME }}
	password: ${{ secrets.PASSWORD }}
	url: ${{ secrets.URL }}</code></pre>
                <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">For more information about the command, see the <MadCap:xref href="../../commands/change-tracking/status.htm">status</MadCap:xref> command.</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><code>history</code>
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-text">steps:
- uses: actions/checkout@v2
- uses: liquibase/liquibase-github-action@v1
  with:
	operation: 'history'
	classpath: 'example/changelogs'
	changelog-file: 'samplechangelog.h2.sql'
	username: ${{ secrets.USERNAME }}
	password: ${{ secrets.PASSWORD }}
	url: ${{ secrets.URL }}</code></pre>
                <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">For more information about the command, see the <MadCap:xref href="../../commands/change-tracking/history.html">history</MadCap:xref> command.</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><code>diff</code>
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-text">steps:
- uses: actions/checkout@v2
- uses: liquibase/liquibase-github-action@v1
  with:
	operation: 'diff'
	classpath: 'example/changelogs'
	changelog-file: 'samplechangelog.h2.sql'
	username: ${{ secrets.USERNAME }}
	password: ${{ secrets.PASSWORD }}
	url: ${{ secrets.URL }}
	referenceUrl: 'jdbc:oracle:thin:@&lt;IP OR HOSTNAME&gt;:&lt;PORT&gt;:&lt;SERVICE NAME OR SID&gt;'</code></pre>
                <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">For more information about the command, see the <MadCap:xref href="../../commands/inspection/diff.htm">diff</MadCap:xref> command.</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <h2>Additional Examples</h2>
        <p>In addition to the default examples included in the <code>example</code> folder, the <a href="https://github.com/liquibase/liquibase-github-action-example">liquibase-github-action-example</a> repository also contains other examples in the <code>extra</code> folder. There are non-Docker build systems such as Gradle, NodeJS, and Maven and a Docker example that does not use the official <MadCap:variable name="General.Liquibase" /> action. While the official GitHub Action is the preferred way of implementing Docker-based workflows, there may be cases requiring custom container images from custom registries. The extra Docker example illustrates how you can do this.</p>
        <p>You can find the corresponding GitHub Action workflow (.yml) files for all extra examples in the <code>.github/workflows</code> directory.</p>
        <h2>Troubleshooting</h2>
        <p>If your build fails due to a validation error, verify that your <MadCap:variable name="General.changeset" />'s <code>author</code> and <code>id</code> are unique in the <MadCap:variable name="General.changelog" /> file. If <MadCap:variable name="General.Liquibase" /> update fails, verify that your table name is unique in the <MadCap:variable name="General.changelog" />.</p>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">For more information, see <MadCap:xref href="../../concepts/changelogs/home.html">Changelog</MadCap:xref> and <MadCap:xref href="../../concepts/changelogs/changeset.html">Changeset</MadCap:xref>.</p>
        <h2>Related Links</h2>
        <ul>
            <li>
                <MadCap:xref href="../../commands/home.htm">[%=General.Liquibase%] Commands</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="../../concepts/home.htm">Concepts</MadCap:xref>
            </li>
            <li><a href="https://docs.github.com/en/actions/learn-github-actions/introduction-to-github-actions">Introduction to GitHub Actions</a>
            </li>
        </ul>
    </body>
</html>