<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:searchable="False">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/workflows/liquibase-community/using-rollback.html" />
        <meta name="description" content="This page explains the rollback workflows in Liquibase." />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
    </head>
    <body>
        <h1><MadCap:variable name="General.Liquibase" /> Rollback Workflow</h1>
        <p><MadCap:variable name="General.Liquibase" /> provides commands to allow you to undo changes you have made to your database, either automatically or with a custom rollback command. The intention of a rollback script is to return the database to a previous specified point in time.</p>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">Rollback support is available in command line, Ant, and Maven.</p>
        <h2>Rollback commands</h2>
        <p>There are three <b>rollback modes</b>:</p>
        <table style="width: auto;">
            <thead>
                <tr>
                    <th>Command</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        <MadCap:xref href="../../commands/rollback/rollback-by-tag.htm">rollback</MadCap:xref>                    </td>
                    <td>This command will revert all changes made to the database after the specified tag.

It is used when you want to undo a series of changes related to a specific tag such as a numbered release.
</td>
                </tr>
                <tr>
                    <td>
                        <MadCap:xref href="../../commands/rollback/rollback-to-date.htm">rollback-to-date</MadCap:xref>                    </td>
                    <td>
                        <p>This command is used to revert all changes made to the database from the current date to the date and time you specify. 

There are several ways to revert your changes with the <code>rollback-to-date</code> command.</p>
                        <p><b>There are three options:</b>
You can use <code>YYYY-MM-DD</code>, <code>HH:MM:SS</code>, or <code>YYYY-MM-DD'T'HH:MM:SS</code> formats to specify the rollback date, time, or date + time. 
You can also specify date or time only.</p>
                        <p><u style="font-weight: bold;">Examples</u>:
<code>rollback-to-date YYYY-MM-DD</code>, <code>rollback-to-date HH:MM:SS</code>, or <code>rollback-to-date YYYY-MM-DD’T’HH:MM:SS</code></p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <MadCap:xref href="../../commands/rollback/rollback-count.htm">rollback-count</MadCap:xref>                    </td>
                    <td>This command is used to roll back a specified number of <MadCap:variable name="General.changeset" />s, where <code>&lt;value&gt;</code> is the number of <MadCap:variable name="General.changeset" />s you want to revert sequentially on your database.

The command will rollback the changes sequentially starting with the most recent changes.
</td>
                </tr>
            </tbody>
        </table>
        <h2><MadCap:variable name="General.LBPro" /> rollback commands</h2>
        <p><MadCap:variable name="General.LBPro" /> contains additional built in commands that allow you to perform <b>targeted rollback tasks</b>.</p>
        <table style="width: auto;">
            <thead>
                <tr>
                    <th>Command</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        <MadCap:xref href="../../commands/rollback/rollback-one-changeset.html">rollback-one-changeset</MadCap:xref><![CDATA[                    ]]></td>
                    <td>This command will revert <b>one</b> non-sequential <MadCap:variable name="General.changeset" /> made during a previous change to the database without affecting any other changes made to your database.</td>
                </tr>
                <tr>
                    <td>
                        <MadCap:xref href="../../commands/rollback/rollback-one-update.html">rollback-one-update</MadCap:xref><![CDATA[                    ]]></td>
                    <td>This command will revert <b>all</b> <MadCap:variable name="General.changeset" />s related to a specific <code>deploymentId</code> that was made during a previous database change.
The command will undo a series of changes made to the database during a specific deployment and revert those <MadCap:variable name="General.changeset" />s to their previous state without affecting any other changes made to the database.
</td>
                </tr>
            </tbody>
        </table>
        <h3>Rollback on error</h3>
        <p>In <MadCap:variable name="General.LBPro" /> 4.18.0 and later, you can use the command parameter <code>--rollback-on-error</code> with the following commands:&#160;<code><MadCap:xref href="../../commands/update/update.html">update</MadCap:xref></code>, <code><MadCap:xref href="../../commands/update/update-count.htm">update-count</MadCap:xref></code>, <code><MadCap:xref href="../../commands/update/update-one-changeset.htm">update-one-changeset</MadCap:xref></code>, <code><MadCap:xref href="../../commands/update/update-testing-rollback.htm">update-testing-rollback</MadCap:xref></code>, and <code><MadCap:xref href="../../commands/update/update-to-tag.html">update-to-tag</MadCap:xref></code>. If you set <code>--rollback-on-error</code> to <code>true</code>, then <MadCap:variable name="General.Liquibase" /> automatically rolls back any <MadCap:variable name="General.changeset" />s that cause errors when you try to deploy them. See also:&#160;<code><MadCap:xref href="../../concepts/changelogs/attributes/fail-on-error.htm">failOnError</MadCap:xref></code>.</p>
        <h2>Validating rollbacks</h2>
        <p>Rollback scripts are one of the most difficult aspects of application development to create and maintain, especially when data is modified.</p>
        <ul>
            <li>If the database change is simple such as adding a new index, or an update to a stored procedure, then the rollback is straight forward.</li>
            <li>Rolling back complex changes that involve structural changes and data migrations are much more difficult.</li>
        </ul>
        <p>So before performing a rollback, it is important to validate the changes <MadCap:variable name="General.Liquibase" /> will run prior to making the change to the database. These <b>two</b> commands help in validating and testing rollbacks.</p>
        <table style="width: auto;">
            <thead>
                <tr>
                    <th>Command</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        <MadCap:xref href="../../commands/update/update-testing-rollback.htm">update-testing-rollback</MadCap:xref>                    </td>
                    <td>This command is used to test rollback functionality when deploying <MadCap:variable name="General.changeset" />s in your <MadCap:variable name="General.changelog" /> sequentially. 
It tests the rollback by deploying all pending <MadCap:variable name="General.changeset" />s, executing a sequential rollback in reverse order for the <MadCap:variable name="General.changeset" />s that were deployed, then running the update again.
</td>
                </tr>
                <tr>
                    <td>
                        <MadCap:xref href="../../commands/rollback/future-rollback-sql.htm">future-rollback-sql</MadCap:xref>                    </td>
                    <td>This command produces the raw SQL <MadCap:variable name="General.Liquibase" /> would use to revert changes associated with undeployed <MadCap:variable name="General.changeset" />s.
Used when auditors need to verify that all database changes have a rollback.
</td>
                </tr>
            </tbody>
        </table>
        <p>Rollbacks are also validated with the help of <b>SQL helper commands</b>:</p>
        <table style="width: auto;">
            <thead>
                <tr>
                    <th>Command</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        <MadCap:xref href="../../commands/rollback/rollback-sql.htm">rollback-sql</MadCap:xref>                    </td>
                    <td>This helper command is used in conjunction with the <code>rollback&lt;tag&gt;</code> command to inspect the SQL <MadCap:variable name="General.Liquibase" /> will use to revert changes associated with the tag you specify.</td>
                </tr>
                <tr>
                    <td>
                        <MadCap:xref href="../../commands/rollback/future-rollback-from-tag-sql.htm">future-rollback-from-tag-sql</MadCap:xref>                    </td>
                    <td>This helper command produces the raw SQL <MadCap:variable name="General.Liquibase" /> would need to roll back all undeployed changes made up to the specified tag.</td>
                </tr>
                <tr>
                    <td>
                        <MadCap:xref href="../../commands/rollback/rollback-to-date-sql.htm">rollback-to-date-sql</MadCap:xref>                    </td>
                    <td>This helper command is used in conjunction with the <code>rollback-to-date</code> command to inspect the SQL that <MadCap:variable name="General.Liquibase" /> will run when using the <code>rollback-to-date</code> command.</td>
                </tr>
                <tr>
                    <td>
                        <MadCap:xref href="../../commands/update/update-count-sql.html">update-count-sql</MadCap:xref>                    </td>
                    <td>This helper command is used in conjunction with the <code>rollback-count &lt;value&gt;</code> command to inspect the SQL <MadCap:variable name="General.Liquibase" /> will use to rollback changes based on the value specified.</td>
                </tr>
            </tbody>
        </table>
        <table style="width: auto;">
            <thead>
                <tr>
                    <th>Pro Command</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        <MadCap:xref href="../../commands/rollback/rollback-one-changeset-sql.html">rollback-one-changeset-sql</MadCap:xref>                    </td>
                    <td>This helper command is used in conjunction with the <code>rollback-one-changeset</code> command to inspect the SQL <MadCap:variable name="General.Liquibase" /> will use to rollback changes based on the specified <MadCap:variable name="General.changeset" />.</td>
                </tr>
                <tr>
                    <td>
                        <MadCap:xref href="../../commands/rollback/rollback-one-update-sql.html">rollback-one-update-sql</MadCap:xref>                    </td>
                    <td>This helper command is used in conjunction with the <code>rollback-one-update</code> command to inspect the SQL <MadCap:variable name="General.Liquibase" /> will run to revert all <MadCap:variable name="General.changeset" />s associated with the <code>deploymentId</code> specified in the <code>rollback-one-update</code> command.</td>
                </tr>
            </tbody>
        </table>
        <h2>Rollback test cycle</h2>
        <p>Rollback scripts need to be tested just like application code so we know they work as designed.</p>
        <p>You will need to carefully test your rollback scripts. This includes determining who will test the rollback script, how and when they will be tested.</p>
        <p><b>A complete test cycle should include</b>:</p>
        <ol>
            <li>Deploying all changes to the database and validating that they were deployed.</li>
            <li>Rolling back all changes to the database, validating that all changes were reversed, and verification that the database was brought back to the previous state.</li>
            <li>Redeploying all changes to the database. This is required to verify that the rollback did not miss any changes that could impact a future deployment.</li>
        </ol>
        <h2>Creating rollback statements</h2>
        <p>Many <MadCap:variable name="General.changetypes" />s such as <b>create table</b>, <b>rename column</b>, and <b>add column</b> can automatically create rollback statements. If your <MadCap:variable name="General.changelog" /> contains only statements that fit into this category, your rollback commands will be generated automatically.</p>
        <p>Other <MadCap:variable name="General.changetypes" />s such as <b>drop table</b> and <b>insert data</b> have no corresponding rollback commands that can be automatically generated. <MadCap:variable name="General.Liquibase" /> also cannot automatically generate rollback statements for formatted SQL&#160;<MadCap:variable name="General.changeset" />s. In these cases, and cases where you want to override the default generated rollback commands, you can specify the rollback commands via the tag within the <MadCap:variable name="General.changeset" /> tag.</p>
        <p>To determine if <MadCap:variable name="General.Liquibase" /> can automatically roll back a specific <MadCap:variable name="General.changetypes" /> and see the examples of the rollback tag, see <MadCap:xref href="automatic-custom-rollbacks.htm">Automatic and Custom Rollbacks</MadCap:xref>. You can also check the <MadCap:xref href="../../change-types/home.html">[%=General.Liquibase%] [%=General.changetypes%]s</MadCap:xref> documentation. Go to the <b>Database Support</b> section to determine whether auto rollback is available for your database platform.</p>
        <MadCap:snippetBlock src="../../Z_Resources/Snippets/code/command-rollback-custom.flsnp" />
    </body>
</html>