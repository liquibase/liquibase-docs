<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:searchable="False">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/workflows/liquibase-community/using-liquibase-and-docker-with-titan.html" />
		<meta name="description" content="This page explains how to use Liquibase and Docker with Titan." />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
    </head>
    <body>
        <h1>Using <MadCap:variable name="General.Liquibase" /> and Docker with Titan</h1>
        <p><a href="https://titan-data.io/">Titan</a> solves the problem of database delivery and speeds up development workflows. It’s as simple as cloning an existing database locally, making changes, and saving those changes for others to use. If you use Titan, you can run your database in a docker container on your laptop or in Kubernetes, versioning the underlying data.</p>
        <p>To get the structural changes such as DDL for new tables and columns to your later environments, you must evolve your database structure so you do not lose production data. By using <MadCap:variable name="General.Liquibase" /> and Titan, you can accelerate your software delivery to test, production, and all stages in between, decrease the time setting up databases for development (Titan), and store your database changes in source code control (<MadCap:variable name="General.Liquibase" />).</p>
        <p>To use <MadCap:variable name="General.Liquibase" /> and Docker with Titan, follow these steps:</p>
        <ol>
            <li>Install Docker and Titan by referring to <a href="https://titan-data.io/docs/version/0.5.0/lifecycle/install.html#lifecycle-install">Installation and Configuration</a>. Here is an example of installing Titan and running the data found in the <code>hello-world postgres</code> repository:</li><pre><code class="language-text">titan install
titan clone s3://titan-data-demo/hello-world/postgres hello-world
titan ls</code></pre>
            <li>Create directories for the PostgreSQL JDBC jar and <MadCap:variable name="General.changelog" /> locally. For example: <code>/home/app/jdbc</code> and <code>/home/app/changelog</code>.</li>
            <li>Run docker network inspect bridge to find the IP address of your Titan PostgreSQL container. For example: <code>172.17.0.3</code>.</li>
            <li>Create an alias to avoid lengthy arguments. Ensure to set <code>update ${JAR}</code>.</li><pre xml:space="preserve"><code class="language-text">alias liquibase="docker run -v /home/app/jdbc:/liquibase/jdbc -v 
/home/app/changelog:/liquibase/changelog liquibase/liquibase 
--driver=org.postgresql.Driver --classpath=/liquibase/jdbc/${JAR} 
--url="jdbc:postgresql://172.17.0.3:5432/postgres" 
--changelog-file=/liquibase/changelog/changelog.xml 
--username=postgres --password=postgres"</code></pre>
            <li>Generate the <MadCap:variable name="General.changelog" /> file for your Titan-provided PostgreSQL database by running:</li><pre><code class="language-text">liquibase generate-changelog --changelog-file=changelog.xml</code></pre>
            <p>The command will create a <code>changelog.xml</code> file that is the baseline of your database. You can find it on your local system in the <code><MadCap:variable name="General.changelog" /></code> folder.</p>
            <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">If you want to create an SQL <MadCap:variable name="General.changelog" /> file, add your database type name when specifying the <MadCap:variable name="General.changelog" /> file: <code>liquibase generate-changelog --changelog-file=changelog.oracle.sql</code>. Replace <code>.oracle.sql</code> with your database type. <MadCap:variable name="General.Liquibase" /> also supports JSON and YAML formats. When in doubt about your database type name, check <a href="https://www.liquibase.org/get-started/databases">Supported Databases</a>.</p>
            <li>Run the following command to synchronize the <MadCap:variable name="General.changelog" /> file with a schema.</li><pre><code class="language-text">liquibase changelog-sync</code></pre>
            <li>Examine the <MadCap:variable name="General.databasechangelog" /> table, which is created by <MadCap:variable name="General.Liquibase" />:</li><pre><code class="language-text">psql postgres://postgres:postgres@localhost/postgres -t -c 'SELECT * FROM DATABASECHANGELOG;'</code></pre>
            <li>Commit the updated database to the Titan server and check in the <code>changelog.xml</code> file into the same source code repository as your application.</li><pre><code class="language-text">titan commit -m "baselined with Liquibase" hello-world</code></pre>
            <li>Add a new <MadCap:variable name="General.changeset" /> to the <MadCap:variable name="General.changelog" /> file:</li><pre><code class="language-text">&lt;changeSet author="liquibase_docker" id="1"&gt;
	&lt;createTable tableName="newtable"&gt;
		&lt;column name="colname" type="VARCHAR(255)"/&gt;
	&lt;/createTable&gt;
&lt;/changeSet&gt;</code></pre>
            <li>Save your file and run the following command to make sure you have updated the file correctly:</li><pre><code class="language-text">liquibase validate</code></pre>
            <li>Check the SQL that will be run on the server:</li><pre><code class="language-text">liquibase update-sql</code></pre>
            <li>Deploy your new table to the database:</li><pre><code class="language-text">liquibase update</code></pre>
            <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">You can verify that the table was created by running<br /><code>psql postgres://postgres:postgres@localhost/postgres -t -c ‘\d newtable;’</code>.</p>
            <li>Commit your data changes to Titan and your updated changelog to source code control.</li><pre><code class="language-text">titan commit -m "Created table newtable with Liquibase." hello-world</code></pre>
        </ol>
        <p>Now, you can use <MadCap:variable name="General.Liquibase" /> to update database schema change in non-development environments.</p>
        <h2>Related Links</h2>
        <ul>
            <li>
                <MadCap:xref href="../../commands/home.htm">Liquibase Commands</MadCap:xref>
            </li>
            <li><a href="https://titan-data.io/docs/">Titan Documentation</a>
            </li>
            <li><a href="https://titan-data.io/docs/version/latest/lifecycle/docker.html">Titan with Docker</a>
            </li>
        </ul>
    </body>
</html>