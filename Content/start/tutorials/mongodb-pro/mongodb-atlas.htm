<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:searchable="False">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/start/tutorials/mongodb/mongodb-atlas-config.html" />
        <meta name="description" content="This page covers two ways to authenticate a MongoDB Atlas instance with Liquibase." />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
    </head>
    <body>
        <h1>Using Liquibase MongoDB Pro with MongoDB Atlas</h1>
        <p><a href="https://www.mongodb.com/docs/atlas/">MongoDB Atlas</a> is a fully managed cloud database service provided by MongoDB, Inc. It allows users to deploy, manage, and scale MongoDB databases without the need to handle the underlying infrastructure.</p>
        <h2>Verified database versions</h2>
        <MadCap:snippetBlock src="../../../Z_Resources/Snippets/text/database-tutorials/verified-versions/mongodb-pro.flsnp" />
        <MadCap:snippetBlock src="../../../Z_Resources/Snippets/text/database-tutorials/database-mongodb-versions-table.flsnp" />
        <h2>Prerequisites</h2>
        <ol>
            <li>
                <p>Download the latest version of the Liquibase MongoDB Pro Extension <a href="https://mvnrepository.com/artifact/org.liquibase.ext/liquibase-commercial-mongodb">here</a>.</p>
            </li>
            <li>
                <p>Confirm that you have a valid Liquibase Pro license key.</p>
            </li>
            <li><a href="https://www.mongodb.com/docs/atlas/tutorial/create-atlas-account/">Create a MongDB Atlas Account</a>
            </li>
            <li><a href="https://www.mongodb.com/docs/atlas/tutorial/deploy-free-tier-cluster/">Deploy a Free Cluster</a>
            </li>
            <li><a href="https://www.mongodb.com/docs/atlas/security/add-ip-address-to-list/">Add Your Connection IP Address to Your IP Access List</a>
            </li>
        </ol>
        <MadCap:snippetBlock src="../../../Z_Resources/Snippets/text/database-mongodb-configure-prerequisites.flsnp" />
        <h2>Install drivers</h2>
        <h3>CLI users</h3>
        <p>Pro extension users do not need to install drivers as long as you have placed the <code>liquibase-commercial-mongodb-&lt;version&gt;. jar</code> file in the <code>liquibase/lib</code> directory.</p>
        <p>To use Liquibase  Pro and Amazon DocumentDB (with MongoDB compatibility), you <b>should not</b> specify a driver in the liquibase.properties file so that Liquibase recognizes the correct one.</p>
        <h3>Maven users</h3>
        <p>Include the <code>liquibase-commercial-mongodb-&lt;version&gt;. jar</code> file as a dependency in your pom.xml file. Using this information, Maven automatically downloads any required JAR files from Maven Central when you build your project.</p><pre xml:space="preserve"><code class="language-xml">&lt;dependency&gt;
    &lt;groupId&gt;org.liquibase.ext&lt;/groupId&gt;
    &lt;artifactId&gt;liquibase-commercial-mongodb&lt;/artifactId&gt;
    &lt;version&gt;<MadCap:variable name="software-versions.latest-liquibase-mongodb-pro" />&lt;/version&gt;
&lt;/dependency&gt;</code></pre>
        <h2>Configure connection</h2>
        <ol>
            <li>Ensure your MongoDB database is configured. See <a href="https://www.mongodb.com/docs/manual/installation/">Install MongoDB</a> for more information.</li>
            <li>
                <MadCap:snippetBlock src="../../../Z_Resources/Snippets/text/database-tutorials/database-license-key.flsnp">
                </MadCap:snippetBlock>
            </li>
            <li>
                <p>Choose an authentication method. This guide includes SCRAM (username/password), X.509 Certificate, AWS IAM, and OIDC.</p>
            </li>
            <div class="js-tabs">
                <ul class="js-tablist" data-existing-hx="h3">
                    <li class="js-tablist__item"><a href="#scram_example" id="label_scram_example" class="js-tablist__link">SCRAM example</a>
                    </li>
                    <li class="js-tablist__item"><a href="#x509_certificate_example" id="label_x509_certificate_example" class="js-tablist__link">X.509 certificate example</a>
                    </li>
                    <li class="js-tablist__item"><a href="#aws_iam_example" id="label_aws_iam_example" class="js-tablist__link">AWS IAM example</a>
                    </li>
                    <li class="js-tablist__item"><a href="#oidc_example" id="label_oidc_example" class="js-tablist__link">OIDC example</a>
                    </li>
                </ul>
                <div id="scram_example" class="js-tabcontent">
                    <p>Users may prefer the SCRAM method because of simplicity and increased security. The server stores passwords in a iterated hash format. This makes offline attacks harder, and decreases the impact of database breaches.</p>
                    <h3>MongoDB Atlas configuration</h3>
                    <ol>
                        <li><a href="https://www.mongodb.com/docs/atlas/tutorial/create-mongodb-user-for-cluster/">Create a Database User for Your Cluster</a>
                        </li>
                        <li>Add or change Database User role to <b>Atlas admin</b> (Security &gt; Database Access &gt; Edit &gt; Database User Privileges &gt; Built-in Role)</li>
                        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">Learn more about database users and built in roles here: <a href="https://www.mongodb.com/docs/atlas/security-add-mongodb-users/#modify-database-users">Modify Database Users</a> and <a href="https://www.mongodb.com/docs/atlas/security-add-mongodb-users/#built-in-roles">Built In Roles</a>.</p>
                    </ol>
                    <h3>Liquibase configuration</h3>
                    <p>Once MongoDB Atlas is configured, you must then configure Liquibase.</p>
                    <ol>
                        <li>Add the <code>liquibase.command.url</code> property to the properties file, environment variables, or command line options in the following format:</li><pre><code class="language-text">liquibase.command.url: mongodb+srv://cluster0.abcd123.mongodb.net/lbcat</code></pre>
                        <li>Add the <code>liquibase.command.username</code> and <code>liquibase.command.password</code> properties to the same configuration file, environment variables, or command line. These are the same credentials entered in Step 1 above titled: <a href="https://www.mongodb.com/docs/atlas/tutorial/create-mongodb-user-for-cluster/">Create a Database User for Your Cluster</a></li>
                    </ol>
                </div>
                <div id="x509_certificate_example" class="js-tabcontent">
                    <p>This authorization mechanism allows system administrators to configure certificates for users within their organization. It also does not require you to memorize a password.</p>
                    <h3>MongoDB Atlas configuration</h3>
                    <ol>
                        <li><a href="https://www.mongodb.com/docs/atlas/security-add-mongodb-users/#add-database-users">Add Database Users</a> for X.509 Certificates</li>
                        <li>Add or change Database User role to <b>Atlas admin</b> (Security &gt; Database Access &gt; Edit &gt; Database User Privileges &gt; Built-in Role)</li>
                        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">Learn more about database users and built in roles here: <a href="https://www.mongodb.com/docs/atlas/security-add-mongodb-users/#modify-database-users">Modify Database Users</a> and <a href="https://www.mongodb.com/docs/atlas/security-add-mongodb-users/#built-in-roles">Built In Roles</a>.</p>
                    </ol>
                    <h3>Java configuration</h3>
                    <p>Java Truststore is a Java mechanism that stores Certificates. It is used only by Java applications. The below command creates the <code>CA.p12</code> Truststore file that contains the certificate which was pulled from MongoDB Atlas above in Step 4.</p>
                    <ol>
                        <li>Create the Truststore file by running the following in the CLI:</li><pre><code class="language-text">openssl pkcs12 -export -in X509-cert-137983036943191321.pem -name mongoAtlas -caname CA -out CA.p12 -passout pass:qwerty123</code></pre>
                    </ol>
                    <p>The <code>CA.p12</code> Truststore file that contains the certificate can now be used by <MadCap:variable name="General.Liquibase"></MadCap:variable> to connect to MongoDB Atlas.</p>
                    <h3><MadCap:variable name="General.Liquibase"></MadCap:variable> configuration</h3>
                    <p>Once MongoDB Atlas and Java are configured, you must then configure <MadCap:variable name="General.Liquibase"></MadCap:variable>.</p>
                    <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">Your connection to MongoDB&#160;Atlas must be TLS&#160;and SSL&#160;encrypted.</p>
                    <ol>
                        <li>Add the <code>liquibase.command.url</code> property to the properties file, environment variables, or command line options in the following format:</li><pre><code class="language-text">liquibase.command.url: mongodb+srv://cluster0.xtsabc123.mongodb.net/lbcat?authSource=%24external&amp;authMechanism=MONGODB-X509&amp;&amp;tlsCertificateKeyFile=X509-cert-137983036943191321.pem</code></pre>
                        <li>Add the following to the environment variables before running Liquibase commands:</li><pre><code class="language-shell">JAVA_OPTS="-Djavax.net.ssl.keyStoreType=pkcs12 -Djavax.net.ssl.keyStore=CA.p12 -Djavax.net.ssl.keyStorePassword=qwerty123"</code></pre>
                    </ol>
                </div>
                <div id="aws_iam_example" class="js-tabcontent">
                    <p>AWS lets you configure credentials using IAM (Identity and Access Management) roles, which can offer better security and simplify your credential management process.</p>
                    <h3>MongoDB Atlas configuration</h3>
                    <p>Follow the steps in the MongoDB documentation <a href="https://www.mongodb.com/docs/atlas/security/aws-iam-authentication/">Set Up Authentication with AWS IAM</a>:</p>
                    <ol>
                        <li><a href="https://www.mongodb.com/docs/atlas/security/aws-iam-authentication/#set-up-authentication-with-aws-iam-roles">Set Up Authentication with AWS IAM Roles</a>
                        </li>
                        <li><a href="https://www.mongodb.com/docs/atlas/security/aws-iam-authentication/#grant-database-access-to-aws-iam-roles">Grant Database Access to AWS IAM Roles</a>
                        </li>
                        <li><a href="https://www.mongodb.com/docs/atlas/security/aws-iam-authentication/#connect-to-service-cluster-using-aws-iam">Connect to Atlas Cluster Using AWS IAM</a>
                        </li>
                    </ol>
                    <h3><MadCap:variable name="General.Liquibase"></MadCap:variable> configuration</h3>
                    <ol>
                        <li>
                            <MadCap:snippetBlock src="../../../Z_Resources/Snippets/text/database-tutorials/database-license-key.flsnp" />
                        </li>
                        <li>Configure your properties file, environment variables, or command line options in the following format:</li><pre xml:space="preserve"><code class="language-text">liquibase.command.url=mongodb+srv://&lt;atlas-host-name&gt;/test?authSource=%24external&amp;authMechanism=MONGODB-AWS
liquibase.command.username=&lt;AWS_ACCESS_KEY_ID&gt; # optional
liquibase.command.password=&lt;AWS_SECRET_ACCESS_KEY&gt; # optional</code></pre>
                    </ol>
                </div>
                <div id="oidc_example" class="js-tabcontent">
                    <p>OIDC is a type of federated authentication that provides a secure, scalable, and user-friendly identity solution with Single Sign-On (SSO) capabilities and seamless integration across diverse applications.</p>
                    <p>In the <MadCap:variable name="General.LBPro" /> MongoDB extension version 1.5.0 and later, you can authenticate using OIDC through <a href="https://learn.microsoft.com/en-us/entra/identity/">Microsoft Entra ID</a> (formerly called Azure Active Directory) in an Azure environment. For more information, see <a href="https://www.mongodb.com/docs/drivers/java/sync/current/fundamentals/enterprise-auth/#std-label-mongodb-oidc">MongoDB: Enterprise Authentication Mechanisms</a>.</p>
                    <h3>Prerequisites</h3>
                    <ul>
                        <li>A running MongoDB Atlas cluster (version 7 or newer)</li>
                        <li>An active Azure subscription with administrative access</li>
                        <li>Java Development Kit (JDK) 8 or later installed</li>
                        <li>MongoDB Java driver version 5.2.0 or later, which includes OIDC support</li>
                    </ul>
                    <h3>Microsoft Azure configuration</h3>
                    <ol>
                        <li><b>Register your application</b> in Azure Entra ID from the <a href="https://portal.azure.com/">Azure portal</a>. For more information, see <a href="https://learn.microsoft.com/en-us/entra/identity-platform/quickstart-register-app">Quickstart: Register an application with the Microsoft identity platform</a>.</li>
                        <li><b>Retrieve your application ID URI</b> so that you can provide it to Liquibase later in this tutorial. For more information, see <a href="https://learn.microsoft.com/en-us/entra/identity-platform/quickstart-configure-app-expose-web-apis">Quickstart: Configure an application to expose a web API</a>.</li>
                        <li><b>Configure a user-managed or system-managed identity.</b> Retrieve the Object (principal) ID so that you can provide it to MongoDB&#160;Atlas later in this tutorial. For more information, see <a href="https://learn.microsoft.com/en-us/entra/identity/managed-identities-azure-resources/how-to-configure-managed-identities">Configure managed identities on Azure virtual machines (VMs)</a>.</li>
                        <li>(Optional) If you have a user-managed identity, <b>retrieve your Client ID</b> so that you can provide it to Liquibase later in this tutorial. This is the unique identifier of your user-assigned managed identity (it is different than your overall application ID). For more information, see <a href="https://learn.microsoft.com/en-us/entra/identity/managed-identities-azure-resources/how-manage-user-assigned-managed-identities">Manage user-assigned managed identities</a>.</li>
                    </ol>
                    <h3>MongoDB Atlas configuration</h3>
                    <ol>
                        <li><b>Enable Workforce Identity Provider</b> for your organization. Follow the steps in <a href="https://www.mongodb.com/docs/atlas/workforce-oidc/#std-label-configure-oidc">§ Configure Workforce Identity Federation Authentication</a>.</li>
                        <li><b>Register your Azure identity</b> by adding it to a new database user in MongoDB Atlas. Follow the steps in <a href="https://www.mongodb.com/docs/atlas/workforce-oidc/#add-a-database-user-using-workforce-authentication">§ Add a Database User using Workforce Authentication</a>. While you configure the database user, ensure that:<ul><li>For "Select Identity Provider," select "Liquibase OIDC config for Applications."</li><li>For "User Identifier," specify the Object ID you retrieved earlier (not the application ID).</li></ul></li>
                    </ol>
                    <h3><MadCap:variable name="General.Liquibase"></MadCap:variable> configuration</h3>
                    <ol>
                        <li>
                            <MadCap:snippetBlock src="../../../Z_Resources/Snippets/text/database-tutorials/database-license-key.flsnp" />
                        </li>
                        <li>Configure your properties file, environment variables, or command line options in the following format:</li><pre xml:space="preserve"><code class="language-text">url=mongodb+srv://dat-18611.cn9br.mongodb.net/demo
liquibase.mongodb.oidc.authenticationMechanism=MONGODB-OIDC
liquibase.mongodb.oidc.environment=azure
liquibase.mongodb.oidc.oidcApplicationIDURI=api://8d719796-c744-4352-aab9-47a52c363907
liquibase.mongodb.oidc.oidcClientID=&lt;optional-user-assigned-client-id&gt;</code></pre>
                        <p>For more information about MongoDB Atlas OIDC parameters, see <MadCap:xref href="../../../parameters/mongodb/home.htm">[%=General.Liquibase%] Parameters for MongoDB</MadCap:xref>.</p>
                    </ol>
                    <p class="warning" MadCap:autonum="&lt;b&gt;Warning: &lt;/b&gt;">In the MongoDB&#160;extension version 1.5.0, Liquibase MongoDB Atlas OIDC authentication is not compatible with the <code class="language-text">mongosh</code> native executor. If you want to use OIDC&#160;authentication in this version, you must use a YAML, JSON, or XML <MadCap:variable name="General.changelog" />. You cannot use the <code><MadCap:xref href="../../../change-types/mongodb/mongo.htm">mongo</MadCap:xref></code> and <code><MadCap:xref href="../../../change-types/mongodb/mongo-file.htm">mongoFile</MadCap:xref></code>&#160;<MadCap:xref href="../../../change-types/home.html">[%=General.changetypes%]s</MadCap:xref> since they require <code class="language-text">mongosh</code>. When you copy the following examples into your <MadCap:variable name="General.changelog" />, ensure that you remove <code><MadCap:xref href="../../../concepts/changelogs/attributes/runwith.htm">runWith</MadCap:xref></code> from each <MadCap:variable name="General.changeset" />.</p>
                </div>
            </div>
        </ol>
        <h2>Test connection</h2>
        <MadCap:snippetBlock src="../../../Z_Resources/Snippets/text/database-tutorials/database-changelog-test-connection.flsnp" MadCap:conditionTagExpression="include[database.mongodb]" />
        <h2>Related links</h2>
        <ul>
            <li>
                <MadCap:xref href="home.htm">Using [%=General.Liquibase%] with the MongoDB Pro Extension</MadCap:xref>
            </li>
        </ul>
    </body>
</html>