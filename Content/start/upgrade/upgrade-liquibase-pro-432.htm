<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
    </head>
    <body>
        <h1>Upgrade to Liquibase Pro 4.32</h1>
        <p>In Liquibase 4.32 we provide two distinct distributions of Liquibase OSS and <MadCap:variable name="General.LBPro" />. This differentiation provides a holistic setup experience that leads to purposeful releases and fewer regressions specifically built for the workflow of our Pro users. It is important to know that the Pro distribution requires a valid license key to utilize all OSS&#160;and PRO features.</p>
        <h2>Prerequisites</h2>
        <ul>
            <li>
                <p>To use Liquibase, <a href="https://www.java.com/en/download/manual.jsp">Java</a> must be installed on your host machine.</p>
            </li>
            <li>
                <MadCap:xref href="../install/liquibase-requirements.htm">Requirements</MadCap:xref>
            </li>
        </ul>
        <h2>Step-by-step</h2>
        <ol>
            <li>Download the latest Liquibase Pro 4.32 distribution at <b>INSERT&#160;LINK&#160;HERE</b> and extract it to the location your current edition of <MadCap:variable name="General.LBPro" /> is.&#160;<ul><li><p>On <b>Linux</b>, extract the zip file into <code>/opt/liquibase/liquibase-&lt;version&gt;</code> directory.</p></li><li><p>On <b>Windows</b>, extract the zip file into the <code>C:\liquibase\liquibase-&lt;version&gt;</code> directory.</p></li><li><p>On <b>MacOS</b>, extract the zip file into <code>~/liquibase/liquibase-&lt;version&gt;</code> directory.</p></li></ul></li>
            <li>
                <p>Create a symbolic link to Liquibase by entering this into the CLI:<br /></p>
                <ul>
                    <li>
                        <p>Linux: </p><pre>#&#160;Create a symbolic directory link named /opt/liquibase/liquibase to the /opt/liquibase/liquibase-&lt;version&gt; ./liquibase<br />sudo ln -sf ./liquibase-version&gt; ./liquibase
                     </pre>
                    </li>
                    <li>
                        <p>Windows: &#160;</p><pre>#&#160;Create a symbolic directory link named C:\liquibase\liquibase to the C:\opt\liquibase\liquibase-&lt;version&gt; directory<br />mklink/d C:\liquibase\liquibase C:\liquibase\liquibase-&lt;version&gt;</pre>
                    </li>
                </ul>
                <p>Symbolic links allow DevOps engineers to control which version of Liquibase executes upon install. This method allows the pipeline maintainer to link a specific version of Liquibase, which reduces confusion.</p>
            </li>
            <li>
                <p>Update the environment variable so it points to the correct Liquibase symbolic link by entering this into the CLI:</p>
                <ul>
                    <li>
                        <p>Linux: </p><pre>#If installed in /opt/liquibase/liquibase-4.29.2 with a symbolic link created previously at /opt/liquibase/liquibase, then<br />export PATH=/opt/liquibase/liquibase:$PATH</pre>
                    </li>
                    <li>
                        <p>Windows: &#160;</p><pre>#If installed in C:\liquibase\liquibase-4.29.2 with a symbolic link created previously at C:\liquibase\liquibase, then<br />SET&#160;PATH=C:\liquibase\liquibase;%PATH%</pre>
                    </li>
                </ul>
            </li>
            <li>
                <p>Open another instance of the CLI to load the new changes.</p>
            </li>
            <li>
                <p>Apply your <MadCap:variable name="General.LBPro" /> license key in any of the below methods you prefer.</p>
                <p class="tip" MadCap:autonum="&lt;b&gt;Tip: &lt;/b&gt;"> It is best to use a <MadCap:xref href="../../liquibase-pro/secrets-management/home.htm">Secrets Management</MadCap:xref> tool like Hashicorp Vault or AWS Secrets Manager to keep Liquibase license keys secure.</p>
                <p>There are several ways to apply the <MadCap:variable name="General.LBPro" /> license key:</p>
                <div class="js-tabs">
                    <ul class="js-tablist" data-hx="h3">
                        <li class="js-tablist__item"><a href="#properties_file" id="label_properties_file" class="js-tablist__link">liquibase.properties file</a>
                        </li>
                        <li class="js-tablist__item"><a href="#cli" id="label_cli" class="js-tablist__link">CLI Parameter</a>
                        </li>
                        <li class="js-tablist__item"><a href="#envar" id="label_envar" class="js-tablist__link">Environment Variable</a>
                        </li>
                        <li class="js-tablist__item"><a href="#java_opts" id="label_java_opts" class="js-tablist__link">JAVA_OPTS</a>
                        </li>
                        <li class="js-tablist__item"><a href="#docker" id="label_docker" class="js-tablist__link">Docker</a>
                        </li>
                        <li class="js-tablist__item"><a href="#maven_pom" id="label_maven_pom" class="js-tablist__link">Maven pom.xml</a>
                        </li>
                        <li class="js-tablist__item"><a href="#azure" id="label_azure" class="js-tablist__link">Azure DevOps</a>
                        </li>
                        <li class="js-tablist__item"><a href="#custom_java" id="label_custom_java" class="js-tablist__link">Custom Java Application</a>
                        </li>
                    </ul>
                    <div id="properties_file" class="js-tabcontent">
                        <p>Include the <MadCap:variable name="General.LBPro" /> license key in the <a href="../../concepts/connections/creating-config-properties.html">Liquibase properties file</a> and save it. For example:</p><pre><code class="language-text" data-lang="text">liquibase.licenseKey: aei76ou32thp785463214</code></pre>
                    </div>
                    <div id="cli" class="js-tabcontent">
                        <p>Pass the <MadCap:variable name="General.LBPro" /> license key as a parameter in the command line during runtime:</p><pre xml:space="preserve"><code class="language-text" data-lang="text">liquibase --license-key=[paste the <MadCap:variable name="General.LBPro" /> license key] [command]</code></pre>
                        <p>For example:</p><pre xml:space="preserve"><code class="language-text" data-lang="text">liquibase --license-key=aei76ou32thp785463214 update</code></pre>
                    </div>
                    <div id="envar" class="js-tabcontent">
                        <p>Set the <MadCap:variable name="General.LBPro" /> license key as an <a href="../../concepts/connections/liquibase-environment-variables.htm">environment variable</a> in the command line.</p>
                        <p>On Windows:</p><pre><code class="language-text" data-lang="text">set LIQUIBASE_LICENSE_KEY=aei76ou32thp785463214</code></pre>
                        <p>On Linux/macOS:</p><pre xml:space="preserve"><code class="language-text" data-lang="text">export LIQUIBASE_LICENSE_KEY=aei76ou32thp785463214</code></pre>
                    </div>
                    <div id="java_opts" class="js-tabcontent">
                        <p>Set the <MadCap:variable name="General.LBPro" /> license key with the <MadCap:xref href="../../concepts/connections/java-opts-environment-variable.htm">JAVA_OPTS Environment Variable</MadCap:xref> in the command line:</p><pre><code class="language-text" data-lang="text">JAVA_OPTS="Dliquibase.licenseKey=&lt;enter license key here&gt;"</code></pre>
                    </div>
                    <div id="docker" class="js-tabcontent">
                        <p>Pass the <MadCap:variable name="General.LBPro" /> license key while using a <a href="../../workflows/liquibase-community/using-liquibase-and-docker.htm">Docker container</a>. Docker allows the use of <code class="language-text">--env</code> in the command.</p><pre xml:space="preserve"><code class="language-text" data-lang="text">docker run --env LIQUIBASE_LICENSE_KEY=&lt;enter license key here&gt;...  \
-it liquibase/liquibase:latest sh</code></pre>
                    </div>
                    <div id="maven_pom" class="js-tabcontent">
                        <p>If you use Maven, include the <MadCap:variable name="General.LBPro" /> license key in the <a href="../../tools-integrations/maven/maven-properties.htm"><code>&lt;properties&gt;</code></a> section of your <a href="../../tools-integrations/maven/maven-pom-file.htm"><code>pom.xml</code> file</a>:</p><pre><code class="language-text" data-lang="text">&lt;liquibaseLicenseKey&gt;key-goes-here&lt;/liquibaseLicenseKey/&gt;</code></pre>
                        <p>For example:</p><pre><code class="language-xml">&lt;plugin&gt;
    &lt;groupId&gt;org.liquibase&lt;/groupId&gt;
    &lt;artifactId&gt;liquibase-maven-plugin&lt;/artifactId&gt;
    &lt;version&gt;0-SNAPSHOT&lt;/version&gt;
    &lt;configuration&gt;
        &lt;changelogFile&gt;com/example/changelog_v4.6.xml&lt;/changelogFile&gt;
        &lt;liquibaseLicenseKey&gt;key-goes-here&lt;/liquibaseLicenseKey&gt;
    &lt;/configuration&gt;
&lt;/plugin&gt;</code></pre>
                        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">In older versions of Liquibase, you must use the syntax <code class="language-text">&lt;liquibaseProLicenseKey&gt;</code> instead of <code class="language-text">&lt;liquibaseLicenseKey&gt;</code>.</p>
                    </div>
                    <div id="azure" class="js-tabcontent">
                        <p>If you use Azure DevOps and pass your license key as an environment variable, you can set the value of <code class="language-text">LIQUIBASE_LICENSE_KEY</code> in your Azure DevOps pipeline setting file:</p><pre xml:space="preserve"><code class="language-text">script: |
    echo "Running Policy Checks"
    liquibase checks run --changeLogFile=mysqlChangelog.xml
displayName: 'Run Policy Checks'
env:
    LIQUIBASE_LICENSE_KEY: $(LiquibaseKey)</code></pre>
                        <p>In this example, <code class="language-text">LiquibaseKey</code> is the name of the Azure DevOps project variable whose value is the license key.</p>
                    </div>
                    <div id="custom_java" class="js-tabcontent">
                        <p>You can directly embed your <MadCap:variable name="General.LBPro" /> license key (<code class="language-text">myProLicenseKey</code>) in a custom Java application by following these steps:</p>
                        <ol>
                            <li>In your Maven <code class="language-text">pom.xml</code> file, point to <code class="language-text">liquibase-commercial.jar</code> as a dependency:</li><pre xml:space="preserve"><code class="language-xml">&lt;dependency&gt;
    &lt;groupId&gt;org.liquibase&lt;/groupId&gt;
    &lt;artifactId&gt;liquibase-commercial&lt;/artifactId&gt;
    &lt;version&gt;<MadCap:variable name="software-versions.latest-liquibase-pro" />&lt;/version&gt;
&lt;/dependency&gt;</code></pre>
                            <li>In your custom Java file, import the following:</li><pre xml:space="preserve"><code class="language-java">import com.datical.liquibase.ext.config.LiquibaseLabsConfiguration;</code></pre>
                            <li>In your custom Java file, call on the <code class="language-text">LiquibaseLabsConfiguration</code> class. For example, to specify your license key so that you can run the <MadCap:variable name="General.LBPro" />&#160;<code><MadCap:xref href="../../commands/update/update-one-changeset.htm">update-one-changeset</MadCap:xref></code> command:</li><pre xml:space="preserve"><code class="language-java">Scope.child(LiquibaseLabsConfiguration.LICENSE_KEY.getKey(), "myProLicenseKey", () -&gt;
    new CommandScope(UpdateOneChangeSetSqlCommandStep.COMMAND_NAME)
        .addArgumentValue(DbUrlConnectionArgumentsCommandStep.DATABASE_ARG, liquibase.getDatabase())
        .addArgumentValue(DatabaseChangelogCommandStep.CHANGELOG_FILE_ARG, "/db_schema/changelog.xml")
        .addArgumentValue(UpdateOneChangeSetCommandStep.CHANGESET_AUTHOR_ARG, "fl")
        .addArgumentValue(UpdateOneChangeSetCommandStep.CHANGESET_ID_ARG, "1")
        .addArgumentValue(UpdateOneChangeSetCommandStep.CHANGESET_PATH_ARG, "/db_schema/changelog.xml")
        .execute()
);</code></pre>
                        </ol>
                        <p>For information on running Liquibase commands in Java files, see <a href="https://contribute.liquibase.com/code/api/command-commandscope/"><code class="language-text">liquibase.command.CommandScope</code></a>.</p>
                    </div>
                </div>
            </li>
            <li>
                <p><b>Optional:</b> The Liquibase installation comes with JDBC drivers for popular database platforms such as Oracle, SQL&#160;Server, PostgreSQL, MariaDB, Snowflake, and H2. <br />If you are working with a different <a href="https://www.liquibase.com/supported-databases">Liquibase-supported database</a>, visit the Liquibase Database Tutorials documentation to download the JDBC&#160;driver specific to your database.</p>
            </li>
            <li>In the CLI, navigate to the location you just downloaded the Liquibase Pro distribution.</li>
            <li>
                <p>Validate that your <MadCap:variable name="General.LBPro" /> license key works as expected and  check its expiration date by running the <MadCap:xref href="../../commands/change-tracking/status.htm"><code>liquibase status</code></MadCap:xref> command.<br />Confirm that a message like this appears:</p>
            </li>
        </ol>
    </body>
</html>