<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/start/upgrade/upgrade-liquibase-pro-432-docker.html" />
        <meta name="description" content="Learn how to upgrade to Liquibase Pro 4.32 with Docker." />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
    </head>
    <body>
        <MadCap:snippetBlock src="../../Z_Resources/Snippets/images/icon-pro-top.flsnp" />
        <h1>Upgrade to Liquibase Pro 4.32 with Docker</h1>
        <p>In Liquibase 4.32 we provide two distinct distributions of Liquibase OSS and <MadCap:variable name="General.LBPro" />. This differentiation provides a holistic setup experience that leads to purposeful releases and fewer regressions specifically built for the workflow of our Pro users. It is important to know that the Pro distribution requires a valid license key to utilize all OSS&#160;and PRO features. You can run a Docker container in many ways. Please use the tools aligned with  your company's workflow, such as AWS ECS or GitHub Actions, or other container orchestration platforms.</p>
        <h2>Before you begin</h2>
        <ul>
            <li>Confirm your machine meets the system <MadCap:xref href="../install/liquibase-requirements.htm">requirements.</MadCap:xref></li>
            <li>Confirm your liquibase.properties file is available in your Liquibase directory.</li>
            <li>Ensure the Docker daemon is running:<ul><li><b>Windows and MacOS:</b>&#160;Docker daemon starts automatically when you open <b>Docker Desktop.</b></li><li><b>Linux:</b>&#160;Run the <code>sudo systemctl start docker</code> command to start the Docker service.</li></ul></li>
            <li>Ensure that your database is accessible from the Docker container.<br />If the database is running outside of Docker, confirm that you have network access. <br />This can be done by running <code>host.docker.internal</code> on Windows or macOS.</li>
        </ul>
        <h2>Step-by-step</h2>
        <ol>
            <li>
                <p>Pull the Liquibase Docker image from <a href="https://hub.docker.com/_/liquibase">Docker Hub</a> into your setup by running  the <code>docker pull liquibase/liquibase</code> command. </p>
            </li>
            <li>
                <p>Apply  the <MadCap:variable name="General.LBPro" /> license key in the CLI by first setting the key as an environment variable temporarily for the duration of the current terminal session. Once you close the terminal instance, this setting will be lost.</p>
                <ul>Windows: <code class="language-text" data-lang="text">set LIQUIBASE_LICENSE_KEY=<i>&lt;insert-license-key&gt;</i></code><br />Linux/MacOS: <code>export LIQUIBASE_LICENSE_KEY=<i>&lt;insert-license-key&gt;</i></code></ul>
                <p class="tip" MadCap:autonum="&lt;b&gt;Tip: &lt;/b&gt;"> This example is for testing purposes, so It is best to use a <MadCap:xref href="../../liquibase-pro/secrets-management/home.htm">Secrets Management</MadCap:xref> tool like Hashicorp Vault or AWS Secrets Manager to keep Liquibase license keys secure.</p>
            </li>
            <li>Ensure that the environment variable has been set by running the following command:<br /></li>Windows: 
				<code class="language-text" data-lang="text">echo $LIQUIBASE_LICENSE_KEY</code><br />Linux/MacOS: 
				<code class="language-text" data-lang="text">echo %LIQUIBASE_LICENSE_KEY%</code><br />When the environment variable is set properly, the license key will display in the terminal.<li>Now run the following command to specify the license key as an environment variable. Ensure your database URL and changelog file is included in the update command. <br />It's important to know that this command carries out all of these tasks:<br /><p><ul><li>Run the specified docker container.</li><li>Pass the Liquibase license key from your local environment into the container using the <code>LIQUIBASE_LICENSE_KEY</code> environment variable you set up in step 2.</li><li>Mount your current local directory into the container.<ul><li><p>In the example code below, you are mounting the directory that you are currently in on your machine into the container and naming it /liquibase/changelog. Be sure to navigate to the directory that contains your changelog file before running the example code.</p><p class="tip" MadCap:autonum="&lt;b&gt;Tip: &lt;/b&gt;">You can check what directory you are in using <code>ls</code>.</p><p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">You may need to give Docker permission to access the directory you want to mount into the container.</p><p>Mounting the directory allows you to make changes to your changelog, save the file, and run docker run in order to update your changelog in the docker container at the path /liquibase/changelog.</p></li></ul></li><li>Specify where the official Liquibase image is coming from Docker Hub.</li><li>Specify the JDBC&#160;URL&#160;connection for your database and map the host name in Docker to your local machine.<ul><li>If you are working with a different Liquibase-supported database, visit the <a href="https://www.liquibase.com/supported-databases">Liquibase Database Tutorials</a> documentation to download the JDBC&#160;driver specific to your database.</li></ul></li><li>Specify the user name and password credentials Liquibase needs to connect to the PostgreSQL&#160;database.</li><li>Specify the main changelog file that contains the list of Liquibase changesets.</li><li>Specify the search path for Docker to find the changelog inside the Docker image.</li><li>Run the update command to update the database.</li></ul></p><p>Before you run the example code, be sure to:</p><p><ul><li>Navigate to the directory that contains your changelog in the CLI.</li><li>Update the <code><i>YOUR_JDBC_URL</i></code> with your JDBC URL. <br />For example: <code>jdbc:postgresql://host.docker.internal:5432/testdb</code></li><li>Update <code><i>YOUR_USERNAME</i></code> and <code><i>YOUR_PASSWORD</i></code> with your credentials for your database.</li><li>Update <code><i>YOUR_CHANGELOG_FILE</i></code> with the name of the changelog file on your local machine. <br />For example, <code><i>your-example-changelog.xml</i></code></li></ul></p><ul><li>Windows:<br /><MadCap:codeSnippet><MadCap:codeSnippetCopyButton /><MadCap:codeSnippetCaption>Example code:</MadCap:codeSnippetCaption><MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve">docker run --rm
        -e LIQUIBASE_LICENSE_KEY=%LIQUIBASE_LICENSE_KEY%
        -v %cd%:/liquibase/changelog
        liquibase/liquibase
        --url="<i>your_jdbc_url</i>"
        --username=<i>your_username</i>
        --password=<i>your_password</i>
        --changelog-file=<i>your-example-changelog.xml</i>
        --search-path=/liquibase/changelog/
        update</MadCap:codeSnippetBody></MadCap:codeSnippet></li><li>Linux/MacOS: <MadCap:codeSnippet><MadCap:codeSnippetCopyButton /><MadCap:codeSnippetCaption>Example code:</MadCap:codeSnippetCaption><MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve">docker run --rm \
  -e LIQUIBASE_LICENSE_KEY=$LIQUIBASE_LICENSE_KEY \
  -v "$(pwd)":/liquibase/changelog \
  liquibase/liquibase \
  --url="your_jdbc_url" \
  --username=liquibase \
  --password=password \
  --changelog-file=example-changelog.xml \
  --search-path=/liquibase/changelog/ \
  update
</MadCap:codeSnippetBody></MadCap:codeSnippet></li></ul><p><b>Optional:</b> The Liquibase installation comes with JDBC drivers for popular database platforms such as Oracle, SQL&#160;Server, PostgreSQL, MariaDB, Snowflake, and H2. <br /></p></li><li>Once the command runs, notice in your log output that the latest version of Liquibase appears which confirms the license key is applied.
                <MadCap:codeSnippet><MadCap:codeSnippetCopyButton /><MadCap:codeSnippetCaption>Successful log output example</MadCap:codeSnippetCaption><MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve">C:\Users\AmberWilliams&gt;docker run --rm -e LIQUIBASE_LICENSE_KEY=%LIQUIBASE_LICENSE_KEY% -v %cd%:/liquibase/changelog liquibase/liquibase --url="jdbc:postgresql://host.docker.internal:5432/testdb" --username=postgres --password=liquibase --changelog-file=example-changelog.sql --search-path=/liquibase/changelog/ update
####################################################
##   _     _             _ _                      ##
##  | |   (_)           (_) |                     ##
##  | |    _  __ _ _   _ _| |__   __ _ ___  ___   ##
##  | |   | |/ _` | | | | | '_ \ / _` / __|/ _ \  ##
##  | |___| | (_| | |_| | | |_) | (_| \__ \  __/  ##
##  \_____/_|\__, |\__,_|_|_.__/ \__,_|___/\___|  ##
##              | |                               ##
##              |_|                               ##
##                                                ##
##  Get documentation at docs.liquibase.com       ##
##  Get certified courses at learn.liquibase.com  ##
##                                                ##
####################################################
Starting Liquibase at 23:11:35 using Java 17.0.14 (version 4.31.1 #6739 built at 2025-02-13 13:46+0000)
Liquibase Version: 4.31.1
Liquibase Pro 4.31.1 by Liquibase licensed to Liquibase until Tue Dec 12 00:00:00 UTC 2034
Database is up to date, no changesets to execute

UPDATE SUMMARY
Run:                           0
Previously run:                3
Filtered out:                  0
--------------------------------
Total change sets:             3

Pro Update Report created!
* File 'resourceaccessor:./Update-report-16-May-2025-182205.html' was created.
** To suppress Update reports add command arg 'liquibase update --report-enabled=false"
** To suppress all Pro Reports set liquibase.reports.enabled=false, or LIQUIBASE_REPORTS_ENABLED=false
Liquibase command 'update' was executed successfully.</MadCap:codeSnippetBody></MadCap:codeSnippet></li><li>You can also validate your Liquibase Pro license key in the CLI by running this command in your working directory:<code><br />docker run --rm -e LIQUIBASE_LICENSE_KEY=<i>&lt;your-license-key&gt;</i> -it liquibase/liquibase:latest --version</code></li></ol>
        <h2>Next steps</h2>
        <ul>
            <li>
                <MadCap:xref href="../../liquibase-pro/policy-checks/home.htm">Policy Checks</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="../../liquibase-pro/policy-checks/custom-policy-checks/home.htm">[%=General.LBPro%] Custom Policy Checks</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="../../liquibase-pro/observability/home.htm">Liquibase Observability</MadCap:xref>
            </li>
        </ul>
    </body>
</html>