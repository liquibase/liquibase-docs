<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/start/install/liquibase-ansible.html" />
        <meta name="description" content="Learn how to install Liquibase with the Ansible package manager." />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
    </head>
    <body>
        <h1>Install Liquibase with Ansible</h1>
        <p>Starting with Liquibase version 4.32.0, we will not longer be updating this package manager with our latest software download packages. For alternative download and installation options, please visit <a href="home.htm">Install Liquibase</a>.</p>
        <p>You can install Liquibase using the <a href="https://www.ansible.com/">Ansible</a> automation engine by following the steps on this page.</p>
        <h2>Prerequisites</h2>
        <ol>
            <li>Install <a href="https://www.java.com/en/download/">Java</a>.</li>
        </ol>
        <h2>Requirements</h2>
        <p>See <a href="https://github.com/liquibase/liquibase-ansible/blob/main/meta/requirements.yml">meta/requirements.yml</a></p>
        <h2>Role Variables</h2>
        <ul>
            <li><code class="language-text">liquibase_ver</code>: This property appears to specify the default version of Liquibase. Default value -&gt; <code class="language-text">4.26.0</code></li>
            <li><code class="language-text">liquibase_mirror</code>: This property specifies the default mirror or repository from which Liquibase releases can be downloaded. Default value -&gt; <a href="https://github.com/liquibase/liquibase/releases/download">https://github.com/liquibase/liquibase/releases/download</a></li>
            <li><code class="language-text">liquibase_parent_install_dir</code>: This property indicates the default parent installation directory for Liquibase. Default value -&gt; <code class="language-text">/usr/local</code></li>
            <li><code class="language-text">liquibase_checksums</code>: Checksums for different versions of Liquibase along with their respective download URLs. The checksums are SHA-256 hashes calculated for each Liquibase release file, ensuring the integrity of the downloaded files.</li>
        </ul>
        <h2>Example Playbook (installs latest Liquibase release)</h2><pre><code class="language-yml">- hosts: server
  roles:
    - role: liquibase.liquibase</code></pre>
        <h2>Example Playbook (installs Liquibase 4.26.0)</h2><pre><code class="language-yml">- hosts: server
  roles:
    - role: liquibase.liquibase
      liquibase_ver:
        - 4.26.0</code></pre>
        <h2>Example Playbook installation process</h2>
        <p>Let's say you would like to have <code class="language-text">liquibase</code> installed in 3 AWS ec2 instances.</p>
        <ol>
            <li>Set up your inventory: Create an inventory file (<code class="language-text">inventory.ini</code>) listing the IP addresses or hostnames of your three EC2 instances.</li><pre><code class="language-yml">[liquibase_hosts]
10.0.0.1
10.0.0.2
10.0.0.3</code></pre>
            <li>Install the Liquibase Ansible role: The Liquibase Ansible role is available on Ansible Galaxy, you can install it using the ansible-galaxy command:</li><pre>ansible-galaxy role install liquibase.liquibase</pre>
            <li>Write your playbook: Create an Ansible playbook (<code class="language-text">playbook.yml</code>) that uses the Liquibase role and targets the hosts specified in your inventory file:</li><pre><code class="language-yml">- name: Apply Liquibase changes
hosts: liquibase_hosts
become: yes
roles:
  - liquibase.liquibase</code></pre>
            <li>Run your playbook: Execute the playbook against your inventory using the ansible-playbook command:</li><pre><code class="language-shell">ansible-playbook -i inventory.ini playbook.yml</code></pre>
            <p>This command will apply the Liquibase changes using the role to the specified EC2 instances.</p>
            <li>Verify: After running the playbook, verify that Liquibase changes were applied successfully on all three EC2 instances. You may need to log in to each instance and check the status of your database schema to ensure that the changes were applied as expected.</li>
        </ol>
        <h2>Standalone role install</h2>
        <h3>Install the role</h3><pre><code class="language-shell">ansible-galaxy role install liquibase.liquibase</code></pre>
        <h3>Uninstall the role</h3><pre><code class="language-shell">ansible-galaxy role remove liquibase.liquibase</code></pre>
        <h3>Upgrade the role</h3>
        <p>The recommended path to update a role is to use the <code>--force</code> option</p><pre><code class="language-shell">ansible-galaxy install --force liquibase.liquibase</code></pre>
    </body>
</html>