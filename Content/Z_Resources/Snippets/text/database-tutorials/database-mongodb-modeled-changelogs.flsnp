<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:searchable="False">
    <body>
        <p>You can use XML, YAML, or JSON "modeled" <MadCap:variable name="General.changelog" />s instead of writing plain or Formatted Mongo scripts in JavaScript. XML, YAML, and JSON <MadCap:variable name="General.changelog" />s have all the functionality of a Formatted Mongo <MadCap:variable name="General.changelog" />, like specifying metadata tags and including other <MadCap:variable name="General.changelog" />s. You must specify <code class="language-text">mongosh</code> as the value of <code class="language-text">runWith</code> in each <MadCap:variable name="General.changeset" />.</p>
        <p>In a modeled <MadCap:variable name="General.changelog" />, you can specify <code class="language-text">mongosh</code> code within the <code><MadCap:xref href="../../../../change-types/mongodb/mongo.htm">mongo</MadCap:xref></code> and <code><MadCap:xref href="../../../../change-types/mongodb/mongo-file.htm">mongoFile</MadCap:xref></code>&#160;<MadCap:variable name="General.changetypes" />s. <MadCap:variable name="General.Liquibase" /> then implements this in your database. However, the actual <code class="language-text">mongosh</code> you specify is the same as in Formatted Mongo.</p>
        <p>If you want to use the <code class="language-text">include</code> or <code class="language-text">includeAll</code> tag in a root <MadCap:variable name="General.changelog" />, it must be an XML, YAML, or JSON file. The child <MadCap:variable name="General.changelog" />s you reference can be written in Formatted Mongo, XML, YAML, or JSON.</p>
        <div class="js-tabs">
            <ul class="js-tablist" data-hx="h3">
                <li class="js-tablist__item"><a href="#formatted_mongosh_example" id="label_formatted_mongosh_example" class="js-tablist__link">Formatted mongosh example</a>
                </li>
                <li class="js-tablist__item"><a href="#xml_example" id="label_xml_example" class="js-tablist__link">XML example</a>
                </li>
                <li class="js-tablist__item"><a href="#yaml_example" id="label_yaml_example" class="js-tablist__link">YAML example</a>
                </li>
                <li class="js-tablist__item"><a href="#json_example" id="label_json_example" class="js-tablist__link">JSON example</a>
                </li>
            </ul>
            <div id="formatted_mongosh_example" class="js-tabcontent">
                <MadCap:snippetBlock src="database-mongodb-formatted-mongo.flsnp" />
            </div>
            <div id="xml_example" class="js-tabcontent">
                <MadCap:snippetBlock src="../database-mongodb-xml-namespace-pro.flsnp" /><pre xml:space="preserve"><code class="language-xml">&lt;databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:mongodb-pro="http://www.liquibase.org/xml/ns/pro-mongodb"
    xmlns:mongodb="http://www.liquibase.org/xml/ns/mongodb"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd
    http://www.liquibase.org/xml/ns/pro-mongodb http://www.liquibase.org/xml/ns/pro-mongodb/liquibase-pro-mongodb-latest.xsd
    http://www.liquibase.org/xml/ns/mongodb http://www.liquibase.org/xml/ns/mongodb/liquibase-mongodb-latest.xsd"&gt;

    &lt;changeSet id="1" author="your.name" runWith="mongosh"&gt;
        &lt;mongodb-pro:mongo dbms="mongodb"&gt;
            db.createCollection('person')
        &lt;/mongodb-pro:mongo&gt;

        &lt;rollback&gt;
            &lt;mongodb-pro:mongo&gt;
                db.person.drop()
            &lt;/mongodb-pro:mongo&gt;
        &lt;/rollback&gt;
    &lt;/changeSet&gt;

    &lt;changeSet id="2" author="your.name" runWith="mongosh"&gt;
        &lt;mongodb-pro:mongoFile dbms="mongodb" path="scriptFile.txt" relativeToChangelogFile="true"/&gt;

        &lt;rollback&gt;
            &lt;mongodb-pro:mongo&gt;
                db.company.drop()
            &lt;/mongodb-pro:mongo&gt;
        &lt;/rollback&gt;
    &lt;/changeSet&gt;

&lt;/databaseChangeLog&gt;</code></pre>
            </div>
            <div id="yaml_example" class="js-tabcontent"><pre xml:space="preserve"><code class="language-yaml">databaseChangeLog:
  - changeSet:
      id: 1
      author: your.name
      runWith: mongosh
      changes:
        - mongo:
            mongo: "db.createCollection('person')"
            dbms: mongodb
        - rollback:
            mongo:
              mongo: "db.person.drop()"

  - changeSet:
      id: 2
      author: your.name
      runWith: mongosh
      changes:
        - mongoFile:
            path: "scriptFile.txt"
            dbms: mongodb
            relativeToChangelogFile: "true"
        - rollback:
            mongo:
              mongo: "db.company.drop()"</code></pre>
            </div>
            <div id="json_example" class="js-tabcontent"><pre xml:space="preserve"><code class="language-json">{
  "databaseChangeLog": [
    {
      "changeSet": {
        "id": "1",
        "author": "your.name",
        "runWith": "mongosh",
        "changes": [
          {
            "mongo": {
              "dbms": "mongodb",
              "mongo": "db.createCollection('person')"
            }
          }
        ],
        "rollback": [
          {
            "mongo": {
              "mongo": "db.person.drop()"
            }
          }
        ]
      }
    },
    {
      "changeSet": {
        "id": "2",
        "author": "your.name",
        "runWith": "mongosh",
        "changes": [
          {
            "mongoFile": {
              "dbms": "mongodb",
              "path": "scriptFile.txt",
              "relativeToChangelogFile": true
            }
          }
        ],
        "rollback": [
          {
            "mongo": {
              "mongo": "db.company.drop()"
            }
          }
        ]
      }
    }
  ]
}</code></pre>
            </div>
        </div>
        <p>Alternatively,  you can specify some <MadCap:variable name="General.changetypes" /> behavior using the <a href="https://contribute.liquibase.com/extensions-integrations/directory/database-tutorials/mongodb/#mongodb-command-examples">MongoDB <MadCap:variable name="General.LBCommunity" /> syntax</a>, which is included in your MongoDB <MadCap:variable name="General.LBPro" /> installation. These <MadCap:variable name="General.changetypes" />s run corresponding commands in MongoDB. This syntax is only valid for XML, YAML, and JSON <MadCap:variable name="General.changelog" />s.</p>
        <p>For a list of all Pro and OSS MongoDB <MadCap:variable name="General.changetypes" />s and full syntax examples, see <MadCap:xref href="../../../../change-types/mongodb/home.htm">[%=General.Liquibase%]&#160;[%=General.changetypes%]s for MongoDB</MadCap:xref>.</p>
    </body>
</html>