<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:searchable="False">
    <head>
    </head>
    <body>
        <p><MadCap:variable name="General.Liquibase"></MadCap:variable> uses two models for <MadCap:variable name="General.changelog"></MadCap:variable>s:</p>
        <ul>
            <li>The <b>SQL model</b> (<code>.sql</code> files): Write SQL statements directly in <a href="../../../concepts/changelogs/changeset.html"><MadCap:variable name="General.changeset"></MadCap:variable>s</a> in your <MadCap:variable name="General.changelog"></MadCap:variable>, formatted with SQL comments.</li>
            <li>The <b>platform-agnostic model</b> (<code>.xml</code>, <code>.yaml</code>, and <code>.json</code>  files): Use <MadCap:variable name="General.Liquibase" />&#160;<MadCap:xref href="../../../change-types/home.html">[%=General.changetypes%]s</MadCap:xref> corresponding to SQL changes in each <MadCap:variable name="General.changeset" />. <MadCap:variable name="General.Liquibase" /> then generates database-specific SQL for you. You can also insert raw SQL&#160;statements in your <MadCap:variable name="General.changeset" />s using the <MadCap:xref href="../../../change-types/sql.html">sql</MadCap:xref>&#160;<MadCap:variable name="General.changetypes" /> or reference a SQL file with the <MadCap:xref href="../../../change-types/sql-file.html">sqlFile</MadCap:xref>&#160;<MadCap:variable name="General.changetypes" />.</li>
        </ul>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">You can use <b>one or more</b> different <MadCap:variable name="General.changelog" /> formats with <MadCap:variable name="General.Liquibase" /> simultaneously!</p>
        <p>Here are some qualities to consider when choosing a <MadCap:variable name="General.changelog"></MadCap:variable> format for <MadCap:variable name="General.Liquibase"></MadCap:variable>:</p>
        <ul>
            <li><b>Familiarity:</b>&#160;If you already know the syntax for one of the formats, you can easily use it with <MadCap:variable name="General.Liquibase"></MadCap:variable>.</li>
            <li><b>Tools:</b> If your existing tools and processes are built around a particular format, such as SQL, you can easily integrate <MadCap:variable name="General.changelog"></MadCap:variable>s of that format.</li>
            <li><b>Appearance:</b> XML syntax is specific but verbose. If you want a less verbose format, try SQL, YAML, or JSON.</li>
            <li><b>Specificity:</b> Formatted SQL <MadCap:variable name="General.changelog" />s let you control exactly what SQL&#160;to run. In contrast, XML, YAML, and JSON also support raw SQL statements, but are primarily meant to describe what kind of change you want to make:&#160;<MadCap:variable name="General.Liquibase" /> handles the underlying database logic for you. XML, YAML, and JSON <MadCap:variable name="General.changelog" />s can be useful if you're working with multiple databases and don't want to write database-specific SQL, or if you want <MadCap:variable name="General.Liquibase" /> to generate automatic rollback statements for some changes.</li>
        </ul>
    </body>
</html>