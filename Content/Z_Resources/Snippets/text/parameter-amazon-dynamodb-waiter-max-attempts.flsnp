<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
    </head>
    <body>
        <p><code class="language-text" MadCap:conditions="database-amazon-dynamodb-parameters.create">--dynamodb-waiter-create-max-attempts</code><code class="language-text" MadCap:conditions="database-amazon-dynamodb-parameters.delete">--dynamodb-waiter-delete-max-attempts</code><code class="language-text" MadCap:conditions="database-amazon-dynamodb-parameters.update">--dynamodb-waiter-update-max-attempts</code> is a global parameter for the <a href="../../../start/tutorials/amazon-dynamodb-pro/home.htm"><MadCap:variable name="General.Liquibase" /> DynamoDB Pro extension</a>. It specifies the maximum number of polling attempts for the <code><a href="https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/dynamodb/waiters/DynamoDbWaiter.html">DynamoDbWaiter</a></code> to make. The waiter repeatedly polls your table to see if it is <MadCap:conditionalText MadCap:conditions="database-amazon-dynamodb-parameters.create">created and operable</MadCap:conditionalText><MadCap:conditionalText MadCap:conditions="database-amazon-dynamodb-parameters.delete">deleted</MadCap:conditionalText><MadCap:conditionalText MadCap:conditions="database-amazon-dynamodb-parameters.update">updated and operable</MadCap:conditionalText>. When the waiter exceeds this number of attempts, it enters a failure state. The default value is <code class="language-text">25</code>.</p>
        <h2>Uses</h2>
        <MadCap:snippetBlock src="parameter-amazon-dynamodb-waiter-concept.flsnp" />
        <p>The <code class="language-text" MadCap:conditions="database-amazon-dynamodb-parameters.create">--dynamodb-waiter-create-max-attempts</code><code class="language-text" MadCap:conditions="database-amazon-dynamodb-parameters.delete">--dynamodb-waiter-delete-max-attempts</code><code class="language-text" MadCap:conditions="database-amazon-dynamodb-parameters.update">--dynamodb-waiter-update-max-attempts</code> parameter controls the number of polling <b>attempts</b> the waiter makes before timing out:</p>
        <ul>
            <li>If you want to use a short interval between polling attempts, set a <b>higher</b> value (more attempts). This may help latency-sensitive applications operate efficiently without prematurely timing out.</li>
            <li>If you want make fewer unnecessary server requests, set a <b>lower</b> value (fewer attempts). This may help you avoid spending too long polling resources that are in a perpetually invalid state.</li>
        </ul>
    </body>
</html>