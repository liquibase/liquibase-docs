<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
    </head>
    <body>
        <p><code class="language-text" MadCap:conditions="database-amazon-dynamodb-parameters.create">--dynamodb-waiter-create-total-timeout</code><code class="language-text" MadCap:conditions="database-amazon-dynamodb-parameters.delete">--dynamodb-waiter-delete-total-timeout</code><code class="language-text" MadCap:conditions="database-amazon-dynamodb-parameters.update">--dynamodb-waiter-update-total-timeout</code> is a global parameter for the <a href="../../../start/tutorials/amazon-dynamodb-pro/home.htm"><MadCap:variable name="General.Liquibase" /> DynamoDB Pro extension</a>. It specifies the total number of seconds for the <code><a href="https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/dynamodb/waiters/DynamoDbWaiter.html">DynamoDbWaiter</a></code> to wait for the table to be <MadCap:conditionalText MadCap:conditions="database-amazon-dynamodb-parameters.create">created and operable</MadCap:conditionalText><MadCap:conditionalText MadCap:conditions="database-amazon-dynamodb-parameters.delete">deleted</MadCap:conditionalText><MadCap:conditionalText MadCap:conditions="database-amazon-dynamodb-parameters.update">updated and operable</MadCap:conditionalText>. If the waiter sees that the table is in the correct state, the operation finishes and <MadCap:variable name="General.Liquibase" /> moves onto the next <MadCap:variable name="General.changeset" />, no matter how much time has passed. If the waiter reaches the maximum timeout, <MadCap:variable name="General.Liquibase" /> throws an error. The default value is <code class="language-text">null</code> (disabled).</p>
        <p>The name of the DynamoDB API method that corresponds to this parameter is <code><a href="https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/core/waiters/WaiterOverrideConfiguration.html#waitTimeout()">waitTimeout</a></code>.</p>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">This parameter doesn't guarantee exactly when DynamoDB terminates waiter requests. DynamoDB may time out early if it determines that the next retry would exceed the maximum wait time you specify.</p>
        <h2>Uses</h2>
        <MadCap:snippetBlock src="parameter-amazon-dynamodb-waiter-concept.flsnp" />
        <p>The <code class="language-text" MadCap:conditions="database-amazon-dynamodb-parameters.create">--dynamodb-waiter-create-total-timeout</code><code class="language-text" MadCap:conditions="database-amazon-dynamodb-parameters.delete">--dynamodb-waiter-delete-total-timeout</code><code class="language-text" MadCap:conditions="database-amazon-dynamodb-parameters.update">--dynamodb-waiter-update-total-timeout</code> parameter controls the total <b>amount of time</b> the waiter spends before timing out:</p>
        <ul>
            <li>If you want  to allow DynamoDB to spend <b>more</b> time polling if necessary, set a <b>higher</b> value (longer timeout) or leave it at the default value of <code class="language-text">null</code> (disabled). This may ensure that complex database operations have enough time to complete.</li>
            <li>If you want DynamoDB to spend <b>less</b> time polling, set a <b>lower</b> value (shorter timeout). If you know your operations will complete quickly, this may reduce the overall latency of your application.</li>
        </ul>
    </body>
</html>