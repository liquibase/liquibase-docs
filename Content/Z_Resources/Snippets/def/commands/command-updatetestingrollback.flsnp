<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:searchable="False">
    <head>
    </head>
    <body>
        <p><code MadCap:conditions="command-cli-maven.CLI">update-testing-rollback</code><code MadCap:conditions="command-cli-maven.Maven">updateTestingRollback</code> tests rollback support by deploying all pending changesets to the database, executes a rollback sequentially for the equal number of changesets that were deployed, and then runs the update again deploying all changesets to the database.</p>
        <h2>Uses</h2>
        <p><code MadCap:conditions="command-cli-maven.CLI">update-testing-rollback</code><code MadCap:conditions="command-cli-maven.Maven">updateTestingRollback</code> is typically used when you want to test rollback functionality when deploying changesets in your changelog sequentially. Run this command only when all pending changelogs have been verified as ready to be deployed as you cannot specify changesets to exclude.</p>
        <p><code MadCap:conditions="command-cli-maven.CLI">update-testing-rollback</code><code MadCap:conditions="command-cli-maven.Maven">updateTestingRollback</code> utilizes a multi-step operation and runs in sequential order:</p>
        <ol>
            <li>update changeset1; update changeset2; update changeset3</li>
            <li>rollback changeset3; rollback changeset2; rollback changeset1</li>
            <li>update changeset1; update changeset2 update changeset3</li>
        </ol>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">If you use the earlier versions of Liquibase, the order of operations may differ.</p>
        <p>If any of the changesets <b>fail rollback</b>:</p>
        <ul>
            <li>Any changesets that come <b>before</b> the failed changesets <b>are deployed to the database</b>.</li>
            <li>Any changesets that come <b>after</b> the failed changesets <b>are not tested or updated</b>.</li>
        </ul>
    </body>
</html>