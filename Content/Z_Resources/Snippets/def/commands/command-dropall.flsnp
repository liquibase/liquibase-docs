<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:searchable="False">
    <head>
    </head>
    <body>
        <p><code MadCap:conditions="command-cli-maven.CLI">drop-all</code><code MadCap:conditions="command-cli-maven.Maven">dropAll</code> drops all database objects owned by the user. <code MadCap:conditions="command-cli-maven.CLI">drop-all</code><code MadCap:conditions="command-cli-maven.Maven">dropAll</code> will not drop functions, procedures, or packages for <MadCap:variable name="General.LBCommunity" />. Functions, procedures, packages, and synonyms can only be dropped for <MadCap:variable name="General.LBPro" /> supported objects.</p>
        <h2>Uses</h2>
        <p><code MadCap:conditions="command-cli-maven.CLI">drop-all</code><code MadCap:conditions="command-cli-maven.Maven">dropAll</code> is typically used when there is a need to prepare an environment schema to be identical to another environment schema. <code MadCap:conditions="command-cli-maven.CLI">drop-all</code><code MadCap:conditions="command-cli-maven.Maven">dropAll</code> is useful in the developer and test environments to remove unwanted objects to reset the database to "empty".</p>
        <p>The command makes it easier to standardize another schema, compared to manually deleting the objects, or dropping and recreating the desired schema.</p>
        <p> <code MadCap:conditions="command-cli-maven.CLI">drop-all</code><code MadCap:conditions="command-cli-maven.Maven">dropAll</code> should not be used in a production environment to prevent removal of required objects.</p>
    </body>
</html>