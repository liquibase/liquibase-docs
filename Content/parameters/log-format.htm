<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:searchable="False">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/parameters/log-format.html" />
        <meta name="description" content="Reference information and use cases for the log-format parameter. It sets the format of log output to the console or log files and enables structured logging." />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
    </head>
    <body>
        <h1><code>log-format</code>
        </h1>
        <p>The <code>log-format</code> global parameter sets the format of log output to the console or to log files. <MadCap:variable name="General.LBCommunity" /> users default to unstructured <code>TEXT</code> logs to the console or output log files. <MadCap:variable name="General.LBPro" /> users have the option to set the value as <code>JSON</code> or <code>JSON_PRETTY</code> to enable JSON-structured log files to the console or output log files. The default value is <code>TEXT</code>.</p>
        <h2>Uses</h2>
        <p>By default, <MadCap:variable name="General.Liquibase" /> creates unstructured text strings when it generates command output. This information is helpful, but complicated to parse with a script. If you use <MadCap:variable name="General.LBPro" />, you can enable <MadCap:xref href="../tools-integrations/observability/structured-logging.htm">Structured Logging</MadCap:xref> by setting <code>log-format</code> to <code>JSON</code> or <code>JSON_PRETTY</code>. <MadCap:variable name="General.Liquibase" /> Structured Logs are formatted as a group of key-value pairs in JSON&#160;(JavaScript Object Notation). This allows you to integrate <MadCap:variable name="General.Liquibase" /> with external log analysis tools like AWS Cloudwatch, ElasticSearch, and others.</p>
        <p>If you set <code>log-format</code> to <code>JSON</code>, the output is generated in a machine-readable format with minimal whitespace. If you set it to <code>JSON_PRETTY</code>, the output is still machine-readable but also includes whitespace and indentation to be human-readable. You can also set <code>log-format</code> to <code>TEXT</code> or leave it blank to use unstructured logs.</p>
        <p>By default, the output of <code>log-format</code> is sent to <code>STDOUT</code>. You can also send it to a file you specify with the <MadCap:xref href="log-file.htm">log-file</MadCap:xref> parameter.</p>
        <MadCap:snippetBlock src="../Z_Resources/Snippets/text/parameter-syntax.flsnp" MadCap:snippetVariables="parameters-global-command.case-camel:logFormat,;parameters-global-command.case-envar:LOG_FORMAT,;parameters-global-command.case-kebab:log-format,;parameters-global-command.command-name:update,;parameters-global-command.value-type:&lt;string&gt;," />
        <h2>Output</h2>
        <h3><code>log-format=TEXT</code>
        </h3><pre xml:space="preserve"><code class="language-text">[2023-03-15 14:57:40] INFO [liquibase.integration] Starting command execution.
Running Changeset: example-changelog.sql::2::anotherdev
[2023-03-15 14:57:40] INFO [liquibase.changelog] Custom SQL executed
[2023-03-15 14:57:40] INFO [liquibase.changelog] ChangeSet example-changelog.sql::2::anotherdev ran successfully in 5ms
[2023-03-15 14:57:40] INFO [liquibase.executor] Changelog query completed.
[2023-03-15 14:57:40] INFO [liquibase.lockservice] Successfully released change log lock</code></pre>
        <h3><code>log-format=JSON</code>
        </h3><pre xml:space="preserve"><code class="language-json">Structured Logs:
{"timestamp":"2023-03-15T19:56:34.241Z","level":"INFO","class":"liquibase.changelog","thread":"1","message":"ChangeSet cafe-changelog.sql::2::DavtheDev ran successfully in 5ms","liquibaseOperation":"update","liquibaseCommandName":"update","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"","commandContextFilter":"","deploymentId":"8910194201","changesetId":"2","changesetAuthor":"DavtheDev","changesetFilepath":"cafe-changelog.sql","changesetComment":"set up the company table","changesetLabel":"setup","changesetContext":"dev,prod","changesetOperationStart":"2023-03-15T14:56:34.236","changesetSql":"create table company (\n    id int primary key auto_increment not null,\n    name varchar(50) not null,\n    address1 varchar(50),\n    address2 varchar(50),\n    city varchar(30)\n);","changesetOperationStop":"2023-03-15T14:56:34.24","changesetOutcome":"executed"}</code></pre>
        <h3><code>log-format=JSON_PRETTY</code>
        </h3><pre xml:space="preserve"><code class="language-json">Structured Logs:
{
  "timestamp": "2023-03-15T19:56:34.241Z",
  "level": "INFO",
  "class": "liquibase.changelog",
  "thread": "1",
  "message": "ChangeSet cafe-changelog.sql::2::DavtheDev ran successfully in 5ms",
  "liquibaseOperation": "update",
  "liquibaseCommandName": "update",
  "liquibaseTargetUrl": "jdbc:h2:tcp://localhost:9090/mem:dev",
  "commandLabelFilter": "",
  "commandContextFilter": "",
  "deploymentId": "8910194201",
  "changesetId": "2",
  "changesetAuthor": "DavtheDev",
  "changesetFilepath": "cafe-changelog.sql",
  "changesetComment": "set up the company table",
  "changesetLabel": "setup",
  "changesetContext": "dev,prod",
  "changesetOperationStart": "2023-03-15T14:56:34.236",
  "changesetSql": "create table company (\n    id int primary key auto_increment not null,\n    name varchar(50) not null,\n    address1 varchar(50),\n    address2 varchar(50),\n    city varchar(30)\n);",
  "changesetOperationStop": "2023-03-15T14:56:34.24",
  "changesetOutcome": "executed"
}</code></pre>
        <h2>Related links</h2>
        <ul>
            <li>
                <MadCap:xref href="log-channels.htm">log-channels</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="log-file.htm">log-file</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="log-level.htm">log-level</MadCap:xref>
            </li>
        </ul>
    </body>
</html>