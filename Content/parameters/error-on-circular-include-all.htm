<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/parameters/error-on-circular-include-all.html" />
        <meta name="description" content="Reference information and use cases for the error-on-circular-include-all parameter. It specifies whether Liquibase throws an error if it detects that an includeAll will cause a circular reference (and thus a changelog parse error)." />
    </head>
    <body>
        <h1><code>error-on-circular-include-all</code>
        </h1>
        <p>The global parameter <code>error-on-circular-include-all</code> is a Boolean that specifies whether <MadCap:variable name="General.Liquibase" /> throws an error if it detects that an <MadCap:xref href="../change-types/includeall.html">includeAll</MadCap:xref> will cause a circular reference (and thus a <MadCap:variable name="General.changelog" /> parse error). The default value is <code>true</code>.</p>
        <h2>Uses</h2>
        <p>You can use the <code>includeAll</code> tag to structure several <MadCap:variable name="General.changelog" />s in a directory under a root <MadCap:variable name="General.changelog" />.  When <code>error-on-circular-include-all</code> is set to <code>true</code>, <MadCap:variable name="General.Liquibase" /> automatically checks whether the directory you specify for <code>includeAll</code> contains the <MadCap:variable name="General.changelog" /> you are executing, either directly or through another <code>includeAll</code>. This is called a circular or recursive reference and will cause program failure. If any circular references are detected, <MadCap:variable name="General.Liquibase" /> stops the deployment.</p>
        <p> It's possible to accidentally introduce a circular reference if you have multiple nested <MadCap:variable name="General.changelog" />s using <code>includeAll</code>. To help you easily find the cause of a failure, it is a best practice to leave <code>error-on-circular-include-all</code> set to <code>true</code> (the default behavior). However, you can set it to <code>false</code> if necessary.</p>
        <p class="warning" MadCap:autonum="&lt;b&gt;Warning: &lt;/b&gt;">If you set <code>error-on-circular-include-all</code> to <code>false</code> and your <MadCap:variable name="General.changelog" /> contains a circular <code>includeAll</code> reference, <MadCap:variable name="General.Liquibase" /> will generate a <code>StackOverflowError</code> and terminate.</p>
        <MadCap:snippetBlock src="../Z_Resources/Snippets/text/parameter-syntax.flsnp" MadCap:snippetVariables="parameters-command-params.case-camel:errorOnCircularIncludeAll,;parameters-command-params.case-envar:ERROR_ON_CIRCULAR_INCLUDE_ALL,;parameters-command-params.case-kebab:error-on-circular-include-all,;parameters-command-params.command-name:update,;parameters-command-params.value-type:&lt;true|false&gt;," />
        <h2>Output</h2>
        <p>If you set the parameter to <code>true</code>, <MadCap:variable name="General.Liquibase" /> notifies you that the failure was caused by an infinite loop in your <code>includeAll</code>:</p><pre><code class="language-text">Unexpected error running Liquibase: Circular reference detected in '../xml/'. Set liquibase.errorOnCircularIncludeAll if you'd like to ignore this error.</code></pre>
        <p>If you set the parameter t to <code>false</code>, the <MadCap:variable name="General.changelog" /> gives an unspecific error description when it fails:</p><pre><code class="language-text">Unexpected error running Liquibase: java.lang.StackOverflowError</code></pre>
    </body>
</html>