<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:searchable="False">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/parameters/allow-duplicated-changeset-identifiers.html" />
        <meta name="description" content="Reference information and use cases for the allow-duplicated-changeset-identifiers parameter. allow-duplicated-changeset-identifiers is a global Boolean parameter that specifies whether Liquibase lets you deploy multiple changesets with the same filepath, author, and ID." />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
    </head>
    <body>
        <h1><code>allow-duplicated-changeset-identifiers</code>
        </h1>
        <p><code>--allow-duplicated-changeset-identifiers</code> is a global Boolean parameter. You can use it to specify whether Liquibase lets you deploy multiple changesets with the same filepath, author, and ID. It is available in <b>Liquibase 4.25.1 and later</b>. The default value is <code>false</code>.</p>
        <h2>Uses</h2>
        <p>By default, Liquibase requires every changeset to have a unique identifier, which is the filepath of the changelog combined with the author and ID of the changeset. This ensures that each of your changes are clear and distinct.</p>
        <p>When you deploy a changeset, Liquibase creates a row for that changeset in your <MadCap:xref href="../concepts/tracking-tables/databasechangelog-table.html">[%=General.databasechangelog%] table</MadCap:xref>. If any changesets contain duplicate identifiers (which would create duplicate rows in the DBCL table), Liquibase halts the deployment:</p><pre xml:space="preserve"><code>Unexpected error running Liquibase: Validation Failed:
     1 changesets had duplicate identifiers
          example-changelog.xml::duplication-test::liquibase-user</code></pre>
        <p>However, your changelog may contain changesets with duplicated identifiers. Developers may have manually added these changesets out of the normal Liquibase process. If your changelog is very large, it may be unfeasible to remove them manually. <b>To ignore the duplicates, set <code>--allow-duplicated-changeset-identifiers</code> to <code>true</code>.</b></p>
        <p>This way, Liquibase only creates a row in your <MadCap:variable name="General.databasechangelog" /> table for the first changeset with a duplicated identifier. For every following changeset with that duplicated identifier, Liquibase does not create a new row. This means your duplicated changesets are not deployed to your database, but Liquibase will not treat the duplicates like errors, so it will not halt during the deployment.</p>
        <p class="tip" MadCap:autonum="&lt;b&gt;Tip: &lt;/b&gt;">Reusing identifiers can be confusing to developers and may lead to unexpected rollback behavior. It is a best practice to use distinct identifiers for every changeset in Liquibase.</p>
        <h3>Rolling back changes with the same identifier</h3>
        <p>If you have two changesets with the same identifier, you can use the <code><MadCap:xref href="../commands/rollback/rollback.htm">rollback</MadCap:xref></code>, <code><MadCap:xref href="../commands/rollback/rollback-count.htm">rollback-count</MadCap:xref></code>, <code><MadCap:xref href="../commands/rollback/rollback-one-update.html">rollback-one-update</MadCap:xref></code>, and <code><MadCap:xref href="../commands/rollback/rollback-to-date.htm">rollback-to-date</MadCap:xref></code> commands normally. For these commands, there is no difference in rolling back a changeset with a duplicated identifier or a unique identifier.</p>
        <p>However, the <code><MadCap:xref href="../commands/rollback/rollback-one-changeset.html">rollback-one-changeset</MadCap:xref></code> command only targets the first changeset because it is the only one that appears in the <MadCap:variable name="General.databasechangelog" /> table. When you run <code>rollback-one-changeset</code> and specify your duplicated identifier, Liquibase rolls back only the first changeset. To avoid checksum errors, you must also specify <code>--allow-duplicated-changeset-identifiers=true</code> when running this rollback command. For example:</p><pre xml:space="preserve"><code class="language-shell">liquibase
    --allow-duplicated-changeset-identifiers=true
  rollback-one-changeset
    --changeset-path=example-changelog.xml
    --changeset-author=liquibase-user
    --changeset-id=duplication-test
    --force</code></pre>
        <MadCap:snippetBlock src="../Z_Resources/Snippets/text/parameter-syntax.flsnp" MadCap:snippetVariables="parameters-global-command.case-camel:allowDuplicatedChangesetIdentifiers,;parameters-global-command.case-envar:ALLOW_DUPLICATED_CHANGESET_IDENTIFIERS,;parameters-global-command.case-kebab:allow-duplicated-changeset-identifiers,;parameters-global-command.command-name:update,;parameters-global-command.value-type:&lt;true|false&gt;," />
        <h2>Related links</h2>
        <ul>
            <li>
                <MadCap:xref href="strict.htm">strict</MadCap:xref>
            </li>
        </ul>
    </body>
</html>