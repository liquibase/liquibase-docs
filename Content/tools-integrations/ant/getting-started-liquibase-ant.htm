<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:searchable="False">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/tools-integrations/ant/getting-started-liquibase-ant.html" />
		<meta name="description" content="Start using Liquibase and Ant in a few steps." />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
    </head>
    <body>
        <h1>Getting Started with <MadCap:variable name="General.Liquibase" /> and Ant</h1>
        <p><a href="https://ant.apache.org/">Apache Ant</a> is a Java library and command-line build tool for Java applications. <MadCap:variable name="General.Liquibase" /> has a set of Ant tasks to automate your database changes at build time.</p>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;"><MadCap:variable name="General.Liquibase" /> Ant tasks are implemented on the <code>&lt;database&gt;</code> type. For more information about the <MadCap:variable name="General.Param/Attribute" />s you can configure for the <code>&lt;database&gt;</code> type, see <MadCap:xref href="home.html">Ant</MadCap:xref>.</p>
        <p>To use <MadCap:variable name="General.Liquibase" /> with Ant:</p>
        <ol>
            <li>Ensure you have <a href="https://ant.apache.org/manual/install.html">installed Ant</a>. To verify that Ant is installed, run <code>ant -version</code> at the command prompt. You will get the output that looks like <code>Apache Ant(TM) version 1.10.11 compiled on July 10 2021</code>. <MadCap:variable name="General.Liquibase" /> Ant tasks require Ant 1.7.1 or later versions.
            </li>
            <li>Create a <MadCap:variable name="General.Liquibase" /> project directory to store all <MadCap:variable name="General.Liquibase" /> and Ant files.
            </li>
            <li>Create an Ant build file called <code>build.xml</code> to specify your configuration settings with tasks, targets, and dependencies. The <code>build.xml</code> file also lets you define the needed <MadCap:variable name="General.Liquibase" /> properties. See the example of the <MadCap:xref href="#build.xm">build.xml example</MadCap:xref> with a basic configuration.
            </li>
            <li>Include <MadCap:variable name="General.Liquibase" /> in your Ant classpath and load it by adding the <code>&lt;taskdef&gt;</code> task in the <code>build.xml</code> file:
            </li><pre xml:space="preserve"><code class="language-xml" data-lang="xml">&lt;project basedir="the/runtime/location/of/Ant" name="example" xmlns:liquibase="antlib:liquibase.integration.ant"&gt;
     &lt;taskdef resource="liquibase/integration/ant/antlib.xml" uri="antlib:liquibase.integration.ant"&gt;
     &lt;classpath path="the/path/to/the/liquibase.jar;the/path/to/the/driver.jar" /&gt;
     &lt;/taskdef&gt;
&lt;/project&gt;</code></pre>
            <p class="tip" MadCap:autonum="&lt;b&gt;Tip: &lt;/b&gt;">You can put the <MadCap:variable name="General.Liquibase" /> JAR in your <code>ANT_HOME/lib</code> folder.</p>
            <li>Create a text file called <code>changelog.sql</code> in your <MadCap:variable name="General.Liquibase" /> project directory. <MadCap:variable name="General.Liquibase" /> also supports the <code>.xml</code>, <code>.yaml</code>, or <code>.json</code> <MadCap:variable name="General.changelog" /> formats.
            </li>
            <li>Add <MadCap:variable name="General.changeset" />s to your <MadCap:variable name="General.changelog" /> file. Use the following examples depending on the format of the <MadCap:variable name="General.changelog" /> you created:
            </li>
            <MadCap:dropDown>
                <MadCap:dropDownHead>
                    <MadCap:dropDownHotspot>XML example</MadCap:dropDownHotspot>
                </MadCap:dropDownHead>
                <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
<MadCap:snippetText src="../../Z_Resources/Snippets/code/liquibase-xsd-xml-changelog-closed.flsnp"></MadCap:snippetText>
    &lt;changeSet id="1" author="Liquibase"&gt;
    &lt;createTable tableName="test_table"&gt;
           &lt;column name="test_id" type="int"&gt;
                 &lt;constraints primaryKey="true"/&gt;
           &lt;/column&gt;
           &lt;column name="test_column" type="varchar"/&gt;
    &lt;/createTable&gt;
    &lt;/changeSet&gt;
&lt;/databaseChangeLog&gt;</code></pre>
                </MadCap:dropDownBody>
            </MadCap:dropDown>
            <MadCap:dropDown>
                <MadCap:dropDownHead>
                    <MadCap:dropDownHotspot>SQL example</MadCap:dropDownHotspot>
                </MadCap:dropDownHead>
                <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-sql">--liquibase formatted sql

--changeset liquibase:1
CREATE TABLE test_table (test_id INT, test_column VARCHAR, PRIMARY KEY (test_id))</code></pre>
                </MadCap:dropDownBody>
            </MadCap:dropDown>
            <MadCap:dropDown>
                <MadCap:dropDownHead>
                    <MadCap:dropDownHotspot>YAML example</MadCap:dropDownHotspot>
                </MadCap:dropDownHead>
                <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-yaml">databaseChangeLog:
   - changeSet:
       id: 1
       author: Liquibase
       changes:
       - createTable:
           columns:
           - column:
               name: test_column
               type: INT
               constraints:  
                   primaryKey:  true  
                   nullable:  false  
                   tableName: test_table</code></pre>
                </MadCap:dropDownBody>
            </MadCap:dropDown>
            <MadCap:dropDown>
                <MadCap:dropDownHead>
                    <MadCap:dropDownHotspot>JSON example</MadCap:dropDownHotspot>
                </MadCap:dropDownHead>
                <MadCap:dropDownBody><pre><code class="language-json">{ 
  "databaseChangeLog": [
  {
	"changeSet": {
	  "id": "1",
      "author": "Liquibase",
	  "changes": [
	    {
		  "createTable": {
		    "columns": [
			{
			  "column": 
		      {
				"name": "test_column",
				"type": "INT",
				"constraints": 
			  {
				"primaryKey": true,
				"nullable": false
				}
				}
			  }]
			,
			"tableName": "test_table"
		  }
		}]
	  }
	}]
  }</code></pre>
                </MadCap:dropDownBody>
            </MadCap:dropDown>
            <li>Execute the <code>updateDatabase</code> task by including the values in your Ant <code>build.xml</code> file:
            </li><pre xml:space="preserve"><code class="language-xml">&lt;target name="updateDatabase" depends="prepare"&gt;
&lt;liquibase:updateDatabase changeLogFile="com/example/changelog.sql"&gt;
&lt;liquibase:database driver="org.postgresql.Driver" url="${db.url}" user="${db.user}" password="${db.pass}"/&gt;
&lt;/liquibase:updateDatabase&gt;
&lt;/target&gt;</code></pre>
            <li>Run the following in the CLI to implement the task and update your database:
            </li><pre><code class="language-text">ant -f build.xml updateDatabase</code></pre>
        </ol>
        <p>After your first update, you will see a new table along with the <MadCap:xref href="../../concepts/tracking-tables/databasechangelog-table.html">[%=General.databasechangelog%] table</MadCap:xref> and <MadCap:xref href="../../concepts/tracking-tables/databasechangeloglock-table.html">[%=General.databasechangeloglock%] table</MadCap:xref> added to the database.</p>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><a name="build.xm"></a>build.xml example</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-xml">&lt;project name="liquibase-test" basedir="." xmlns:liquibase="antlib:liquibase.integration.ant"&gt;
&lt;!-- The "prepare" target configures the classpath and properties Liquibase will use during task execution.--&gt;
&lt;!-- Liquibase targets must include a "depends" attribute to ensure the prepare target executes before the Liquibase task.--&gt;
    &lt;target name="prepare"&gt;

        &lt;taskdef resource="liquibase/integration/ant/antlib.xml" uri="antlib:liquibase.integration.ant"&gt;
               &lt;classpath path="lib\liquibase.jar;lib\postgresql-42.2.18.jar"/&gt;
        &lt;/taskdef&gt;

&lt;!-- set global properties for Liquibase Tasks --&gt;
&lt;!-- Liquibase properties can be referenced using a "${}" string replacement within a liquibase.database change.--&gt;
        &lt;property name="db.url" value="jdbc:postgresql://localhost:8080/example"/&gt;
        &lt;property name="db.user" value="user"/&gt;
        &lt;property name="db.pass" value="password"/&gt;
        &lt;property name="db.driver" value="org.postgresql.Driver"/&gt;
        &lt;!-- Alternatively, a database instance can be created and referenced with databaseref in a Liquibase task.--&gt;
        &lt;liquibase:database id="my-database" url="${db.url}" user="${db.user}" password="${db.pass}" driver="org.postgresql.Driver"/&gt;
    &lt;/target&gt;

&lt;!-- Liquibase Tasks --&gt;
    &lt;!-- The updateDatabase target shows using the individual database connection properties.--&gt;
        &lt;target name="updateDatabase" depends="prepare"&gt;
              &lt;liquibase:updateDatabase  changeLogFile="com/example/changelog.sql"&gt;
              &lt;liquibase:database driver="${db.driver}" url="${db.url}"  user="${db.user}"  password="${db.pass}"/&gt;
        &lt;/liquibase:updateDatabase&gt;
    &lt;/target&gt;
&lt;/project&gt;</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <h2>Related links</h2>
        <ul>
            <li><a href="https://ant.apache.org/manual/index.html">Ant</a>
            </li>
            <li>
                <MadCap:xref href="commands/home.htm">Ant Tasks</MadCap:xref>
            </li>
        </ul>
    </body>
</html>