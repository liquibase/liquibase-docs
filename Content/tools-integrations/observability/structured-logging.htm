<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:searchable="False">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/tools-integrations/observability/structured-logging.html" />
        <meta name="description" content="Reference information for Liquibase Structured Logging." />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
    </head>
    <body>
        <MadCap:snippetBlock src="../../Z_Resources/Snippets/images/icon-pro-top.flsnp" />
        <h1><MadCap:variable name="General.StructuredLogging" />
        </h1>
        <p><MadCap:variable name="General.StructuredLogging" /> makes <MadCap:variable name="General.Liquibase" /> operation data easily available and machine-readable. You can use monitoring and analysis tools to read, query, and act upon this data in automated workflows. <MadCap:variable name="General.Liquibase" /> not only does the tricky work of database schema versioning and management, it also helps you understand the data around these operations and how they fit into your overall DevOps and CI/CD performance.</p>
        <p>Tools you can use with <MadCap:variable name="General.Liquibase" />&#160;<MadCap:variable name="General.StructuredLogging" /> include AWS&#160;Cloudwatch, Granfana, Opensearch, Sematext, Splunk, ElasticSearch and other analysis instruments. Monitoring and analysis tools can easily determine and act upon both real-time and long-term trend data for <MadCap:variable name="General.Liquibase" /> usage with <MadCap:variable name="General.StructuredLogging" />. Other data that <MadCap:variable name="General.Liquibase" /> can use are performance, errors, security, tracking for auditablility and outcomes, and even standard DORA&#160;DevOps metrics.</p>
        <p><MadCap:variable name="General.Liquibase" /> uses a Mapped Diagnostic Context (MDC) to generate structured logs in a JSON format.</p>
        <p>This feature is available in <MadCap:variable name="General.Liquibase" /> 4.21.0 and later. Additional functionality is available in later releases.</p>
        <h2>Examples</h2>
        <div class="js-tabs">
            <ul class="js-tablist" data-hx="h3">
                <li class="js-tablist__item"><a href="#unstructured_text_example" id="label_unstructured_text_example" class="js-tablist__link">Unstructured text example</a>
                </li>
                <li class="js-tablist__item"><a href="#structured_json_pretty_example" id="label_structured_json_pretty_example" class="js-tablist__link">Structured <code>JSON_PRETTY</code> example</a>
                </li>
                <li class="js-tablist__item"><a href="#structured_json_example" id="label_structured_json_example" class="js-tablist__link">Structured <code>JSON</code> example</a>
                </li>
                <li class="js-tablist__item"><a href="#structured_exception_details_example" id="label_structured_exception_details_example" class="js-tablist__link">Structured <code>exceptionDetails</code> example</a>
                </li>
            </ul>
            <div id="unstructured_text_example" class="js-tabcontent"><pre xml:space="preserve"><code class="language-text">[2023-02-27 16:37:00] FINE [liquibase.integration] Performance monitoring disabled
[2023-02-27 16:37:00] FINE [liquibase.configuration] No configuration value for liquibase.outputFile found
[2023-02-27 16:37:00] FINE [liquibase.configuration] No configuration value for liquibase.strict found</code></pre>
            </div>
            <div id="structured_json_pretty_example" class="js-tabcontent">
                <p><code>--log-format=JSON_PRETTY</code>&#160;includes line breaks for easier human readability.</p><pre xml:space="preserve"><code class="language-json">Starting Liquibase at 16:38:59 (version [Core: //DAT-11693/7176/44d487/2023-02-09 14:35+0000, Pro: DAT-11693/2749/7aac10/2023-02-09T14:30:34Z] #7176 built at 2023-02-09 14:35+0000)
Liquibase Version: [Core: //DAT-11693/7176/44d487/2023-02-09 14:35+0000, Pro: DAT-11693/2749/7aac10/2023-02-09T14:30:34Z]
Liquibase Labs [Core: //DAT-11693/7176/44d487/2023-02-09 14:35+0000, Pro: DAT-11693/2749/7aac10/2023-02-09T14:30:34Z] by Liquibase licensed to Dev until Sat Dec 30 22:59:59 CST 2023
{
  "timestamp": "2023-02-27T22:38:59.647Z",
  "level": "INFO",
  "class": "liquibase.integration",
  "thread": "1",
  "message": "Starting command execution.",
  "liquibaseVersion": "DEV",
  "liquibaseSystemUser": "mariochampion",
  "liquibaseSystemName": "mmc-mbp.lan"
}
{
  "timestamp": "2023-02-27T22:38:59.744Z",
  "level": "INFO",
  "class": "liquibase.license",
  "thread": "1",
  "message": "Successfully installed license from Base64 string starting with 'ABwwGgQU6h' (property liquibaseProLicenseKey).\n",
  "liquibaseOperation": "status"
}
{
  "timestamp": "2023-02-27T22:38:59.906Z",
  "level": "INFO",
  "class": "liquibase.database",
  "thread": "1",
  "message": "Set default schema name to PUBLIC",
  "liquibaseOperation": "status",
  "liquibaseCommandName": "status"
}</code></pre>
            </div>
            <div id="structured_json_example" class="js-tabcontent">
                <p><code>--log-format=JSON</code> does not have any line breaks because it is intended for machine parsing and consumption by industry standard log tools.</p><pre xml:space="preserve"><code class="language-json">Starting Liquibase at 16:40:53 (version [Core: //DAT-11693/7176/44d487/2023-02-09 14:35+0000, Pro: DAT-11693/2749/7aac10/2023-02-09T14:30:34Z] #7176 built at 2023-02-09 14:35+0000)
Liquibase Version: [Core: //DAT-11693/7176/44d487/2023-02-09 14:35+0000, Pro: DAT-11693/2749/7aac10/2023-02-09T14:30:34Z]
Liquibase Labs [Core: //DAT-11693/7176/44d487/2023-02-09 14:35+0000, Pro: DAT-11693/2749/7aac10/2023-02-09T14:30:34Z] by Liquibase licensed to Dev until Sat Dec 30 22:59:59 CST 2023
{"timestamp":"2023-02-27T22:40:53.029Z","level":"INFO","class":"liquibase.integration","thread":"1","message":"Starting command execution.","liquibaseVersion":"DEV","liquibaseSystemUser":"mariochampion","liquibaseSystemName":"mmc-mbp.lan"}
{"timestamp":"2023-02-27T22:40:53.131Z","level":"INFO","class":"liquibase.license","thread":"1","message":"Successfully installed license from Base64 string starting with 'ABwwGgQU6h' (property liquibaseProLicenseKey).\n","liquibaseOperation":"update"}
{"timestamp":"2023-02-27T22:40:53.272Z","level":"INFO","class":"liquibase.database","thread":"1","message":"Set default schema name to PUBLIC","liquibaseOperation":"update","liquibaseCommandName":"update"}
{"timestamp":"2023-02-27T22:40:53.439Z","level":"INFO","class":"liquibase.lockservice","thread":"1","message":"Successfully acquired change log lock","liquibaseOperation":"update","liquibaseCommandName":"update","changesetSql":"INSERT INTO PUBLIC.DATABASECHANGELOGLOCK (ID, LOCKED) VALUES (1, FALSE)"}
{"timestamp":"2023-02-27T22:40:53.450Z","level":"INFO","class":"liquibase.changelog","thread":"1","message":"Creating database history table with name: PUBLIC.DATABASECHANGELOG","liquibaseOperation":"update","liquibaseCommandName":"update","changesetSql":"INSERT INTO PUBLIC.DATABASECHANGELOGLOCK (ID, LOCKED) VALUES (1, FALSE)","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":""}
{"timestamp":"2023-02-27T22:40:53.455Z","level":"INFO","class":"liquibase.changelog","thread":"1","message":"Reading from PUBLIC.DATABASECHANGELOG","liquibaseOperation":"update","liquibaseCommandName":"update","changesetSql":"CREATE TABLE PUBLIC.DATABASECHANGELOG (ID VARCHAR(255) NOT NULL, AUTHOR VARCHAR(255) NOT NULL, FILENAME VARCHAR(255) NOT NULL, DATEEXECUTED TIMESTAMP NOT NULL, ORDEREXECUTED INT NOT NULL, EXECTYPE VARCHAR(10) NOT NULL, MD5SUM VARCHAR(35), DESCRIPTION VARCHAR(255), COMMENTS VARCHAR(255), TAG VARCHAR(255), LIQUIBASE VARCHAR(20), CONTEXTS VARCHAR(255), LABELS VARCHAR(255), DEPLOYMENT_ID VARCHAR(10))","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":""}
Running Changeset: example-changelog.sql::1::devone
{"timestamp":"2023-02-27T22:40:53.484Z","level":"INFO","class":"liquibase.changelog","thread":"1","message":"Custom SQL executed","liquibaseOperation":"update","liquibaseCommandName":"update","changesetSql":"create table person (\n    id int primary key auto_increment not null,\n    name varchar(50) not null,\n    address1 varchar(50),\n    address2 varchar(50),\n    city varchar(30)\n)","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":"","deploymentId":"7537653462","changesetId":"1","changesetAuthor":"devone","changesetFilepath":"example-changelog.sql","changesetComment":"example comment","changesetLabel":"example-label","changesetContext":"()","changesetOperationStart":"2023-02-27T16:40:53.477"}
{"timestamp":"2023-02-27T22:40:53.488Z","level":"INFO","class":"liquibase.changelog","thread":"1","message":"ChangeSet example-changelog.sql::1::devone ran successfully in 12ms","liquibaseOperation":"update","liquibaseCommandName":"update","changesetSql":"create table person (\n    id int primary key auto_increment not null,\n    name varchar(50) not null,\n    address1 varchar(50),\n    address2 varchar(50),\n    city varchar(30)\n)","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":"","deploymentId":"7537653462","changesetId":"1","changesetAuthor":"devone","changesetFilepath":"example-changelog.sql","changesetComment":"example comment","changesetLabel":"example-label","changesetContext":"()","changesetOperationStart":"2023-02-27T16:40:53.477","changesetOperationStop":"2023-02-27T16:40:53.488","changesetOutcome":"executed"}
Running Changeset: example-changelog.sql::2::anotherdev
{"timestamp":"2023-02-27T22:40:53.502Z","level":"INFO","class":"liquibase.changelog","thread":"1","message":"Custom SQL executed","liquibaseOperation":"update","liquibaseCommandName":"update","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":"","deploymentId":"7537653462","changesetId":"2","changesetAuthor":"anotherdev","changesetFilepath":"example-changelog.sql","changesetComment":"example comment","changesetLabel":"example-label","changesetContext":"example-context","changesetOperationStart":"2023-02-27T16:40:53.499","changesetSql":"create table company (\n    id int primary key auto_increment not null,\n    name varchar(50) not null,\n    address1 varchar(50),\n    address2 varchar(50),\n    city varchar(30)\n)"}
{"timestamp":"2023-02-27T22:40:53.504Z","level":"INFO","class":"liquibase.changelog","thread":"1","message":"ChangeSet example-changelog.sql::2::anotherdev ran successfully in 5ms","liquibaseOperation":"update","liquibaseCommandName":"update","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":"","deploymentId":"7537653462","changesetId":"2","changesetAuthor":"anotherdev","changesetFilepath":"example-changelog.sql","changesetComment":"example comment","changesetLabel":"example-label","changesetContext":"example-context","changesetOperationStart":"2023-02-27T16:40:53.499","changesetSql":"create table company (\n    id int primary key auto_increment not null,\n    name varchar(50) not null,\n    address1 varchar(50),\n    address2 varchar(50),\n    city varchar(30)\n)","changesetOperationStop":"2023-02-27T16:40:53.504","changesetOutcome":"executed"}
Running Changeset: example-changelog.sql::e24850bc-2310-11ed-861d-0242ac120002::mr.man
{"timestamp":"2023-02-27T22:40:53.516Z","level":"INFO","class":"liquibase.changelog","thread":"1","message":"Custom SQL executed","liquibaseOperation":"update","liquibaseCommandName":"update","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":"","deploymentId":"7537653462","changesetId":"e24850bc-2310-11ed-861d-0242ac120002","changesetAuthor":"mr.man","changesetFilepath":"example-changelog.sql","changesetComment":"example comment","changesetLabel":"example-label","changesetContext":"example-context","changesetOperationStart":"2023-02-27T16:40:53.512","changesetSql":"alter table person add column country varchar(2)"}
{"timestamp":"2023-02-27T22:40:53.518Z","level":"INFO","class":"liquibase.changelog","thread":"1","message":"ChangeSet example-changelog.sql::e24850bc-2310-11ed-861d-0242ac120002::mr.man ran successfully in 6ms","liquibaseOperation":"update","liquibaseCommandName":"update","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":"","deploymentId":"7537653462","changesetId":"e24850bc-2310-11ed-861d-0242ac120002","changesetAuthor":"mr.man","changesetFilepath":"example-changelog.sql","changesetComment":"example comment","changesetLabel":"example-label","changesetContext":"example-context","changesetOperationStart":"2023-02-27T16:40:53.512","changesetSql":"alter table person add column country varchar(2)","changesetOperationStop":"2023-02-27T16:40:53.517","changesetOutcome":"executed"}

{"timestamp":"2023-02-27T22:40:53.526Z","level":"INFO","class":"liquibase","thread":"1","message":"UPDATE SUMMARY","liquibaseOperation":"update","liquibaseCommandName":"update","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":"","deploymentId":"7537653462"}
UPDATE SUMMARY
{"timestamp":"2023-02-27T22:40:53.526Z","level":"INFO","class":"liquibase","thread":"1","message":"Run:                          3","liquibaseOperation":"update","liquibaseCommandName":"update","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":"","deploymentId":"7537653462"}
Run:                          3
{"timestamp":"2023-02-27T22:40:53.527Z","level":"INFO","class":"liquibase","thread":"1","message":"Previously run:               0","liquibaseOperation":"update","liquibaseCommandName":"update","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":"","deploymentId":"7537653462"}
Previously run:               0
{"timestamp":"2023-02-27T22:40:53.528Z","level":"INFO","class":"liquibase","thread":"1","message":"DBMS mismatch:                0","liquibaseOperation":"update","liquibaseCommandName":"update","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":"","deploymentId":"7537653462"}
DBMS mismatch:                0
{"timestamp":"2023-02-27T22:40:53.529Z","level":"INFO","class":"liquibase","thread":"1","message":"Not in filter:                0","liquibaseOperation":"update","liquibaseCommandName":"update","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":"","deploymentId":"7537653462"}
Not in filter:                0
{"timestamp":"2023-02-27T22:40:53.530Z","level":"INFO","class":"liquibase","thread":"1","message":"-------------------------------","liquibaseOperation":"update","liquibaseCommandName":"update","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":"","deploymentId":"7537653462"}
-------------------------------
{"timestamp":"2023-02-27T22:40:53.530Z","level":"INFO","class":"liquibase","thread":"1","message":"Total change sets:            3\n","liquibaseOperation":"update","liquibaseCommandName":"update","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":"","deploymentId":"7537653462"}
Total change sets:            3

{"timestamp":"2023-02-27T22:40:53.531Z","level":"INFO","class":"liquibase","thread":"1","message":"Update command completed successfully.","liquibaseOperation":"update","liquibaseCommandName":"update","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":"","deploymentId":"7537653462","deploymentOutcome":"success","deploymentOutcomeCount":"3"}
{"timestamp":"2023-02-27T22:40:53.535Z","level":"INFO","class":"liquibase.lockservice","thread":"1","message":"Successfully released change log lock","liquibaseOperation":"update","liquibaseCommandName":"update","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":"","deploymentId":"7537653462"}
Liquibase command 'update' was executed successfully.</code></pre>
            </div>
            <div id="structured_exception_details_example" class="js-tabcontent">
                <p>In <MadCap:variable name="General.Liquibase" /> 4.25.1, when an exception occurs with <MadCap:variable name="General.StructuredLogging" />, a new JSON object appears in the log that gives users an indepth look at the primaryClass, primaryReason, the source, and the exception details.</p><pre xml:space="preserve"><code class="language-json">{"exceptionDetails":
   "primaryClass":"liquibase.exception.DatabaseException",
   "primaryReason":"ERROR: relation "staff" already exists [Failed SQL: (0) CREATE TABLE public.staff (staff_id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, first_name VARCHAR(45) NOT NULL, last_name VARCHAR(45) NOT NULL, email VARCHAR(50), active BOOLEAN DEFAULT TRUE NOT NULL, username VARCHAR(16) NOT NULL, CONSTRAINT staff_pkey PRIMARY KEY (staff_id))]",
   "source":"liquibase version 4.24.0 #14062" (or "&lt;someDatabaseName version, etc&gt;" if it is an exception we caught, but didnt throw)
   "exception":"&lt;the full raw output of the exception details&gt;"
}</code></pre>
            </div>
        </div>
        <p class="tip" MadCap:autonum="&lt;b&gt;Tip: &lt;/b&gt;">For example dashboards using tools like AWS CloudWatch, Datadog, Elastic, and Splunk, see the GitHub repository <a href="https://github.com/liquibase/Observability-Dashboards">liquibase/Observability-Dashboards</a>.</p>
        <h2>Enable <MadCap:variable name="General.StructuredLogging" /></h2>
        <ol>
            <li>Set the <code>--license-key</code> property using your <MadCap:variable name="General.LBPro" /> license key. See <MadCap:xref href="../../workflows/liquibase-pro/how-to-apply-your-liquibase-pro-license-key.htm">How to Apply Your [%=General.LBPro%] License Key</MadCap:xref>.</li>
            <li>Set the <code>--<MadCap:xref href="../../parameters/log-format.htm">log-format</MadCap:xref></code> property to <code>JSON</code> or <code>JSON_PRETTY</code>:<ul><li>CLI: <code>liquibase --log-format=JSON</code> or <code>JSON_PRETTY</code></li><li>Properties file: <code>liquibase.logFormat=JSON</code> or <code>JSON_PRETTY</code></li><li>Environment Variable: <code>LIQUIBASE_LOG_FORMAT=JSON</code> or <code>JSON_PRETTY</code></li></ul></li>
            <li>Set the <code>--<MadCap:xref href="../../parameters/log-level.htm">log-level</MadCap:xref></code> property to a value other than <code>OFF</code>. Use this to define what to include in your structured logs. Valid values are <code>FINE</code>, <code>INFO</code>, <code>WARN</code>, and <code>SEVERE</code>.</li>
            <li>(Optional) Set the <code>--<MadCap:xref href="../../parameters/log-file.htm">log-file</MadCap:xref></code> properties so the log data is sent to a file rather than to the console. This is useful if you want to capture a file to be ingested by your log analysis tool, such as Elastic or Cloudwatch, etc.<br /><br />To do so, set the <code>--log-file</code> property equal to the log file of your choice in the  file, as an environment variable, or in the CLI.
				<p class="example" MadCap:autonum="&lt;b&gt;Example: &lt;/b&gt;"><code>liquibase --log-format=JSON_PRETTY --log-level=INFO update --log-file=mylogfile.log</code><br /></p></li>
        </ol>
        <p>Structured Logging is enabled successfully!</p>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;"> By default, console messages are included in your log. If you need to disable this, set <MadCap:xref href="../../parameters/mirror-console-messages-to-log.htm">mirror-console-messages-to-log</MadCap:xref> to <code>false</code>.</p>
        <h2>Disable <MadCap:variable name="General.StructuredLogging" /></h2>
        <p>To disabled structured logging, do one of the following:</p>
        <ul>
            <li>Set <code>--log-format</code> to <code>TEXT</code> to explicitly use unstructured logs</li>
            <li>Omit the <code>--log-format</code> parameter and <MadCap:variable name="General.Liquibase" /> reverts to the default value of <code>TEXT</code></li>
        </ul>
        <h2>Supported commands</h2>
        <p>You can get structured logs from the output of the following commands:</p>
        <ul>
            <li>
                <MadCap:xref href="../../commands/utility/changelog-sync.htm">changelog-sync</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="../../commands/change-tracking/dbcl-history.htm">dbcl-history</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="../../commands/inspection/diff.htm">diff</MadCap:xref> and <MadCap:xref href="../../commands/inspection/diff-changelog.html">diff-changelog</MadCap:xref></li>
            <li>
                <MadCap:xref href="../../commands/flow/flow.htm">flow</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="../../commands/change-tracking/history.html">history</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="../../commands/rollback/rollback-by-tag.htm">rollback</MadCap:xref>, <MadCap:xref href="../../commands/rollback/rollback-count.htm">rollback-count</MadCap:xref>, <MadCap:xref href="../../commands/rollback/rollback-one-changeset.html">rollback-one-changeset</MadCap:xref>, <MadCap:xref href="../../commands/rollback/rollback-one-update.html">rollback-one-update</MadCap:xref>, <MadCap:xref href="../../commands/rollback/rollback-to-date.htm">rollback-to-date</MadCap:xref></li>
            <li>
                <MadCap:xref href="../../commands/change-tracking/status.htm">status</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="../../commands/update/update.html">update</MadCap:xref>, <MadCap:xref href="../../commands/update/update-count.htm">update-count</MadCap:xref>, <MadCap:xref href="../../commands/update/update-one-changeset.htm">update-one-changeset</MadCap:xref>, <MadCap:xref href="../../commands/update/update-testing-rollback.htm">update-testing-rollback</MadCap:xref>, <MadCap:xref href="../../commands/update/update-to-tag.html">update-to-tag</MadCap:xref></li>
            <li><code>--version</code> global argument</li>
        </ul>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">Structured Logging affects log output, not command output. Commands like <code>status</code>, <code>history</code>, and <code>diff</code> deliver command output directly in the console. Log output is fine-grained and often is code or meta information related. <br /><br />Also, not all commands are yet structured, and these command will still produce a structured log, but there will not be additional data or content in these log objects. The new content that is available in structured logs includes things like deploymentID, command parameters, label filter settings, nested objects, and more.</p>
        <h2>Keys</h2>
        <p>For a list of keys that <MadCap:variable name="General.Liquibase" /> includes in the JSON output, see <MadCap:xref href="structured-logging-keys.htm">Structured Logging Keys</MadCap:xref>.</p>
    </body>
</html>