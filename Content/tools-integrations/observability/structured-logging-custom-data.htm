<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:searchable="False">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/tools-integrations/observability/structured-logging-custom-data.html" />
        <meta name="description" content="Learn how to introduce and customize data from Liquibase Pro with Structured Logging." />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
    </head>
    <body>
        <MadCap:snippetBlock src="../../Z_Resources/Snippets/images/icon-pro-top.flsnp" />
        <h1>Custom and Private Data in <MadCap:variable name="General.StructuredLog" />s</h1>
        <p>In <MadCap:variable name="General.Liquibase" /> 4.23.2+, you can access custom (user-defined) data from <MadCap:variable name="General.Liquibase" /> operations using structured logs. This allows you to collect, inspect, and analyze the information to better understand and improve your software development life cycle. Learn how to include or exclude your custom data in the default <MadCap:xref href="../../parameters/custom-log-data-file.htm">custom-log-data-file</MadCap:xref>, which ships with the <MadCap:variable name="General.Liquibase" /> installer and the artifacts.</p>
        <p>In <MadCap:variable name="General.Liquibase" /> 4.23.2, custom values are only added to the log if the file is explicitly defined via the CLI, defaults file, or environment variable.</p>
        <ul>
            <li><b>CLI:</b> <code>--custom-log-data-file=liquibase.customlogdata.yaml</code></li>
            <li><b>Defaults file:</b> <code>liquibase.customLogDataFile=my-data.yaml</code></li>
            <li><b>Environment variable:</b> <code>LIQUIBASE_CUSTOM_LOG_DATA_FILE=liquibase.UK-data-props.yaml</code></li>
        </ul>
        <p>In <MadCap:variable name="General.Liquibase" /> 4.24.0+, any custom data is included in every log message. This enables you to use dashboard queries and reports that depend on these custom key:values pairs. You can set the <code>--<MadCap:xref href="../../parameters/custom-log-data-frequency.htm">custom-log-data-frequency</MadCap:xref></code> argument to <code>ONCE</code>&#160;or&#160;<code>REPEATED</code> (default) to control how much custom data is displayed in your logs. Additionally, in 4.24.0+ you can send custom data to <MadCap:variable name="General.Liquibase" /> via <a href="../../concepts/connections/liquibase-environment-variables.htm">environment variables</a> on your machine (<code>VAR_NAME=value</code>) and via <a href="../../concepts/changelogs/property-substitution.html">property substitution</a> in your userMetadata file (<code>${PROP_NAME}</code>).</p>
        <p>You can also use a custom metadata file to exclude the <MadCap:xref href="structured-logging-keys.htm">Structured Logging Keys</MadCap:xref> that normally appear in every log message, such as <code>liquibaseSchemaName</code> and <code>operationStart</code>.</p>
        <h2>Create a metadata file</h2>
        <ol>
            <li>Copy the <code>liquibase.customlogdata.yaml</code> file from the <code>examples</code> directory and save it in a secure location.</li>
            <li>Add the custom data to the relocated file as needed.</li>
            <li>If the new location is in the current working directory, no further action is needed. If not, use the <code>--custom-log-data-file</code> argument to specify its path.</li>
        </ol>
        <h2>Introduce customized data methods</h2>
        <h3>Global metadata</h3>
        <p>Global metadata is general-purpose userMetadata that needs tracking every time <MadCap:variable name="General.Liquibase" /> runs.<br /></p>
        <h4>Global metadata rules:</h4>
        <ul>
            <li>Appears <b>ONCE</b> in the log (per <MadCap:variable name="General.Liquibase" /> operation).</li>
            <li>Is the output for any command execution that generates a log.</li>
            <li>Is conceptually similar to the SYSTEM  Structured Log Output.</li>
        </ul>
        <h3>Command metadata</h3>
        <p>Command metadata is userMetadata that is specific to a command.</p>
        <h4>Command MetaData rules:</h4>
        <ul>
            <li>Appears <b>ONCE</b> in the log per <MadCap:variable name="General.Liquibase" /> operation of that command-type.</li>
            <li>It is associated with a specific <MadCap:variable name="General.Liquibase" /> command defined in the YAML config.</li>
            <li>It is output when the associated command executes.</li>
            <li>It is <b>NOT</b> embedded in each structured log output statement associated with the command.<ul><li>For example, on an update, the command metadata will NOT be in the  structured log output from <code>liquibase.changelog</code>, <code>liquibase.executor</code>, <code>liquibase.*</code> classes.</li></ul></li>
        </ul>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">You cannot exclude properties that are inside of an array.</p>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>Click to show: <code>userMetadata.yaml</code> example</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-yaml">#### USE THIS FILE TO INJECT OR EXCLUDE METADATA FROM STRUCTURED LOGS
#### on the CLI: --custom-log-data-file=liquibase.customlogdata.yaml
#### via Env var: LIQUIBASE_CUSTOM_LOG_DATA_FILE=liquibase.customlogdata.yaml
#### or other standard property setting method. For more info, see
#### https://docs.liquibase.com/structured-logging
####
## Using liquibase.userMetadata, the subset key-values
## are added to that command's MDC structured log output
## These are just examples! Please adjust before using.


## template of standalone object for all commands
liquibase.userMetadata:
  - data:
      FINDME: "example custom log data"
      teamsize: 3
      members:
        - name: danthedev
        - name: debthedba
        - name: annthearchitect


## By specifying the command, these objects will be added only
## to the logs of the update command, in this example.
liquibase.command.update:
  - data:
      awsRegion: "us-example"
      deploymentlead: "name@example.com"
      partridges:
        count: 1
        location: "a pear tree"
      turtledoves: two
      frenchhens: 3
      callingbirds: four
      goldenrings: "five"
    excludeData:
      - liquibaseTargetUrl
      - commandLabelFilter
      - commandContextFilter


## EXCLUDE data from structured logs.
## In this example, these keys will be excluded from all commands
liquibase.excludeData:
## These are the default minimum keys. Uncomment (remove the ##) to exclude these keys
## or add other keys which are not useful for your logs

## - deploymentId
## - deploymentOutcome
## - deploymentOutcomeCount
## - rowsAffected
## - changelog
## - changesetId
## - changesetAuthor
## - changesetOutcome
## - changesetCount
## - operationStart
## - operationStop
## - liquibaseCommandName
## - liquibaseSystemName
## - liquibaseSystemUser
## - liquibaseTargetUrl-
## - liquibaseVersion
## - liquibaseSchemaName
## - liquibaseCatalogName</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
    </body>
</html>