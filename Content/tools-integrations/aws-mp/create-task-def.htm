<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/tools-integrations/aws-mp/run-commands-aws.html" />
        <meta name="description" content="This page teaches you how to run Liquibase commands on AWS Marketplace." />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
    </head>
    <body>
        <h1>Create an AWS&#160;Task Definition to Run Liquibase Commands</h1>
        <p>There are multiple ways to operate Liquibase container within AWS. The example provided is specific to containers in ECS, and is one of several solutions. A task definition is a JSON text file that outlines how your containers operate in ECS. In the context of Liquibase, you write task definitions to run Liquibase commands on AWS. Follow the guide below to learn how to create Liquibase specific task definitions.</p>
        <h2>Prerequisites</h2>
        <ul>
            <li>Be familiar with AWS&#160;Task Definitions. Learn more about AWS from this guide: <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/create-task-definition.html">Creating an Amazon ECS task definition using the console</a></li>
            <li>Create an S3 bucket or a GitHub repository to store configuration files<ul><li>It is important to know the changelog, <MadCap:variable name="General.liquiPropFile" /> file, JDBC&#160;drivers, and any file associated with your AWS&#160;project can be placed in the S3 bucket or GitHub repository.</li></ul></li>
            <li>If you are using S3, create an IAM&#160;user which has access to the S3 bucket.<ul><li><a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html">Generate the security credentials for the same user</a></li></ul></li>
            <li><b>Required additional AWS&#160;Resources:</b>
                <ul>
                    <li>MySQL RDS&#160;Instance - If you are using MySQL DB</li>
                    <li>AWS&#160;Fargate ECS&#160;cluster </li>
                    <li>IAM&#160;role to access the CloudWatch Logs, create Task Definitions, etc.</li>
                </ul>
            </li>
        </ul>
        <h2>Step-by-step</h2>
        <h3>Create a  task definition for Liquibase commands in AWS Fargate</h3>
        <ol>
            <li>Navigate to your Amazon Elastic Container Service console. <br /><img src="../../Z_Resources/Images/Assets/Screenshots/aws-mp/a-ecs.png" /></li>
            <li>Select Task definitions from the left side navigation.<br /><img src="../../Z_Resources/Images/Assets/Screenshots/aws-mp/task-def.png" /></li>
            <li>Click the <b>Create a new task definition</b> button.&#160;<br /><p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">Use this example task definition below to build a new task by replacing the placeholder values of<code> &lt;PRO&#160;CONTAINER&#160;IMAGE&#160;LINK&gt;</code> and <code>&lt;S3&#160;BUCKET&#160;NAME&gt;</code> with your values.</p><br /><ul><li><MadCap:codeSnippet><MadCap:codeSnippetCopyButton /><MadCap:codeSnippetCaption><p>Task Definition Example</p></MadCap:codeSnippetCaption><MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve">{
    "taskDefinitionArn": "arn:aws:ecs:us-east-1:{account_number}:task-definition/connect-command",
    "containerDefinitions": [
        {
            "name": "Liquibase-Pro",
            "image": "&lt;PRO CONTAINER IMAGE LINK&gt;",
            "cpu": 0,
            "portMappings": [],
            "essential": true,
            "command": [
                "--defaults-file=s3://&lt;s3 BUCKET NAME&gt;/liquibase.properties",
                "connect"
            ],
            "environment": [],
            "mountPoints": [],
            "volumesFrom": [],
            "logConfiguration": {
                "logDriver": "awslogs",
                "options": {
                    "awslogs-group": "/ecs/connect-command",
                    "awslogs-create-group": "true",
                    "awslogs-region": "us-east-1",
                    "awslogs-stream-prefix": "ecs"
                }
            },
            "systemControls": []
        }
    ],
    "family": "connect-command",
    "taskRoleArn": "arn:aws:iam::{account_number}:role/ecsTaskExecutionRole",
    "executionRoleArn": "arn:aws:iam::{account_number}:role/ecsTaskExecutionRole",
    "networkMode": "awsvpc",
    "revision": 1,
    "volumes": [],
    "status": "ACTIVE",
    "requiresAttributes": [
        {
            "name": "com.amazonaws.ecs.capability.logging-driver.awslogs"
        },
        {
            "name": "ecs.capability.execution-role-awslogs"
        },
        {
            "name": "com.amazonaws.ecs.capability.ecr-auth"
        },
        {
            "name": "com.amazonaws.ecs.capability.docker-remote-api.1.19"
        },
        {
            "name": "com.amazonaws.ecs.capability.task-iam-role"
        },
        {
            "name": "ecs.capability.execution-role-ecr-pull"
        },
        {
            "name": "com.amazonaws.ecs.capability.docker-remote-api.1.18"
        },
        {
            "name": "ecs.capability.task-eni"
        },
        {
            "name": "com.amazonaws.ecs.capability.docker-remote-api.1.29"
        }
    ],
    "placementConstraints": [],
    "compatibilities": [
        "EC2",
        "FARGATE"
    ],
    "requiresCompatibilities": [
        "FARGATE"
    ],
    "cpu": "1024",
    "memory": "3072",
    "runtimePlatform": {
        "cpuArchitecture": "ARM64",
        "operatingSystemFamily": "LINUX"
    },
    "registeredAt": "2024-10-29T15:37:24.193Z",
    "registeredBy": "arn:aws:sts::{account_number}:assumed-role/AWSReservedSSO_MarketplaceLimitedPermissions_1c0e25eeb793d12a/{username}",
    "enableFaultInjection": false,
    "tags": []
}</MadCap:codeSnippetBody></MadCap:codeSnippet></li><p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">In this example, task definitions are arranged as individual Liquibase commands. You can create batch task definitions that contain multiple Liquibase commands by following AWS best practices.</p></ul></li>
            <li>Ensure that the <b>Launch type</b> selected is <b>AWS&#160;Fargate</b>.<br /><img src="../../Z_Resources/Images/Assets/Screenshots/aws-mp/fargate-launch-type.png" /></li>
            <li>Set both the Task role and execution role to ecsTaskExecutionRole. This role is created by default when we create a ECS Fargate cluster.<br /><img src="../../Z_Resources/Images/Assets/Screenshots/aws-mp/task-role.png" /></li>
            <li>This is the container you may want to extend the Docker container to use SQL, mySQL, NoSQL, or any other type of extension.<br />Ensure that <b>Container</b> has this Image URI: <code>709825985650.dkr.ecr.us-east-1.amazonaws.com/liquibase/liquibase/liquibase-pro:&lt;insert_image_tag&gt;<br /></code></li>
            <li>If you work with MySQL&#160;DB, add <code>INSTALL_MYSQL</code> with a value of <code>true</code>.<br /><img src="../../Z_Resources/Images/Screenshots/aws-mp/image (3).png" /><p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;"><code>INSTALL_MYSQL</code>&#160;is our <a href="https://github.com/liquibase/docker/blob/main/docker-entrypoint.sh">required Docker entrypoint</a>.</p></li>
            <li>Click the <b>Create</b> button at the bottom of the page to complete mounting the files in Fargate.<br /><img src="../../Z_Resources/Images/Assets/Screenshots/aws-mp/create-task-button.png" /><br /></li>
        </ol>
        <h3>Run Liquibase commands</h3>
        <p>Once the task definition is configured, you can begin running Liquibase commands as task definitions.</p>
        <ol>
            <li>Navigate to the&#160;<b>Task definitions</b> section on the left side navigation. Here you can define the Task definitions for the Liquibase commands you wish to run.<br /><img src="../../Z_Resources/Images/Assets/Screenshots/aws-mp/task-def.png" /></li>
            <li><b>Optional:&#160;Place the full image URL in a task definition to extend the Docker image</b>
                <br />You may want to extend your Docker image if you have several services that reuse a common set of configuration options or you use external tools like SQL Plus or SQLCMD. To extend our docker image and add other databases  for a specific task definition, you must use the image URL that displays the ECR&#160;repository. <br /><br />Here is the repository URL that can be extended: <code>709825985650.dkr.ecr.us-east-1.amazonaws.com/liquibase/liquibase/liquibase-pro:<MadCap:variable name="software-versions.latest-liquibase-pro" /></code><br /><p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">You must use the ECR image URL displayed in the task definition to extend our docker image.</p></li>
            <li>
                <p>Check the box next to the specific definition you want to revise.<br /><img src="../../Z_Resources/Images/Screenshots/aws-mp/image (4).png" /></p>
            </li>
            <li>
                <p>Click the <b>Create new revision</b> drop down menu and select <b>Create new revision with JSON</b>.<br /><img src="../../Z_Resources/Images/Assets/Screenshots/aws-mp/create-revision.png" /></p>
            </li>
            <li>
                <p>From the Create new revision page you will see the line that starts with image; place the URL here to extend the docker image.<br /><img src="../../Z_Resources/Images/Screenshots/aws-mp/Copy of image (5).png" /></p>
            </li>
            <li>Run a task definition by selecting the radio button next to the desired definition. In this example we will use <code>connect-command</code>.<br /></li>
            <li>Select the <b>Deploy button</b> at the top of the screen.</li>
            <li>From the drop-down menu, select <b>run task</b>.<a href="../../Z_Resources/Images/Screenshots/aws-mp/Copy of image (9).png"><img src="../../Z_Resources/Images/Screenshots/aws-mp/Copy of image (9).png" /></a><br /></li>
            <li>Select the <b>Compute</b> options that you desire. In this example we will toggle Launch type on.<br /><img src="../../Z_Resources/Images/Assets/Screenshots/aws-mp/compute-opts.png" /></li>
            <li>Click the <b>Create</b> button.</li>
            <li>AWS will bring you to the tasks in your cluster. You will be able to see the task that is running in the Tasks tab below the Cluster Overview.<br /><img src="../../Z_Resources/Images/Assets/Screenshots/aws-mp/running-task.png" /></li>
            <li>Click on the <b>task</b> that is running in the Tasks tab.</li>
            <li>Click on the <b>Logs tab</b> to see all log events on any container you have specified in the Task Definition.<br /><img src="../../Z_Resources/Images/Screenshots/aws-mp/Step 13 image.png" /><br />This message will display if you <b>have</b> a license: Liquibase Pro <MadCap:variable name="software-versions.latest-liquibase-pro" /> (license through AWS License Manager)<br /><img src="../../Z_Resources/Images/Assets/Screenshots/aws-mp/license.png" /></li>
        </ol>
        <p>You have successfully run and viewed the logs of a Liquibase command on AWS.</p>
    </body>
</html>