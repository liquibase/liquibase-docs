<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/concepts/connections/liquibase-environment-variables.html" />
        <meta name="description" content="Reference information for using Liquibase environment variables." />
    </head>
    <body>
        <h1><MadCap:variable name="General.Liquibase" /> Environment Variables</h1>
        <p>The environment variable is a value that you can set once to pass configuration information to your application. It affects the behavior of running processes on a computer.</p>
        <p><MadCap:variable name="General.Liquibase" /> 4.4 and later can process configuration values from multiple sources, such as the <MadCap:variable name="General.Liquibase" /> properties file, environment variables, Java system properties, and <MadCap:variable name="General.Hub" /> properties. This capability means the following:</p>
        <ul>
            <li>You can use environment variables rather than storing hard-coded and plain-text values, such as usernames and passwords in documents and source control.</li>
            <li>You can maintain better security and control specific configuration values more dynamically, especially when using build environments like Docker, AWS, Kubernetes, and others.</li>
            <li>You can set both <MadCap:variable name="General.Liquibase" /> global and command parameters as environment variables instead of passing them at runtime in the CLI or via the defaults file.</li>
            <li>You can easily run <MadCap:variable name="General.Liquibase" /> in partial or full automation with various build servers.</li>
        </ul>
        <h2>Using <MadCap:variable name="General.Liquibase" /> Environment Variables</h2>
        <p class="tip" MadCap:autonum="&lt;b&gt;Tip: &lt;/b&gt;">To see the list of all environment variables, check <MadCap:xref href="../../parameters/home.htm">[%=General.Liquibase%] Parameters</MadCap:xref>.</p>
        <p>You can configure <MadCap:variable name="General.Liquibase" /> environment variables by following these syntax rules:</p>
        <ul>
            <li>Use underscores (<code>_</code>) for naming. If you use dots (<code>.</code>), convert them to underscores. Also, split the camel case values with an underscore.</li>
        </ul>
        <p class="example" MadCap:autonum="&lt;b&gt;Example: &lt;/b&gt;"><code>liquibase.loglevel</code> is <code>LIQUIBASE_LOG_LEVEL</code>.</p>
        <ul>
            <li>Do not use spaces within values.</li>
            <li>Use uppercase letters.</li>
            <li>Use the prefix of <code>LIQUIBASE_ namespace</code>.</li>
        </ul>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">For default files, use the prefix of <code>liquibase.</code>. However, when running arguments in the CLI, you can drop the <code>--liquibase-</code> prefix.</p>
        <h2>Scoping Environment Variable for Global and Command Options</h2>
        <p>In <MadCap:variable name="General.Liquibase" />, there are two types of configuration options: global and command options.</p>
        <ul>
            <li>Global options affect the overall usage of <MadCap:variable name="General.Liquibase" />, such as <code>logLevel</code> and <code>searchPath</code>.</li>
            <li>Command options are specific to the command, such as <code>url</code> or <code>hubProjectID</code>.</li>
        </ul>
        <p>Use global options to the left of the command and command options to the right of the command.</p>
        <p>As environment variables, there are three measures of scope:</p>
        <ul>
            <li><code>LIQUIBASE_SEARCH_PATH</code> configures a global option.</li>
            <li><code>LIQUIBASE_COMMAND_USERNAME</code> sets the username to use across all commands.</li>
            <li><code>LIQUIBASE_COMMAND_UPDATE_USERNAME</code> sets the username just for the <code>update</code> command.</li>
        </ul>
        <h2>Setting Environment Variables</h2>
        <p>To set the <MadCap:variable name="General.Liquibase" /> environment variables, choose your operating system:</p>
        <h3>Windows</h3>
        <ol>
            <li>In your Windows search box, type <code>env</code> and select the <b>Edit the System Environment</b> option in the Control Panel.</li>
            <li>In the <b>Advanced</b> tab, select <b>Environment Variables</b>.</li>
            <li>In the <b>Edit environment variable</b> window, select <b>New</b>, and then add the variable name and value you need.</li>
            <p class="example" MadCap:autonum="&lt;b&gt;Example: &lt;/b&gt;"><code>LIQUIBASE_LICENSE_KEY</code>
                <br /><code>yj4v59bfdgj389btc4wg</code>
            </p>
            <li>Select <b>OK</b> on all windows to close them.</li>
        </ol>
        <p>Alternatively, you can use the <code><a href="https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/set_1">set</a></code> command to set a temporary environment variable or the <code><a href="https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/setx">setx</a></code> command to set a permanent environment variable from your command line.</p>
        <h3>macOS/Linux/Unix</h3>
        <p>You can set a shell variable in your command line using the format <code>&lt;VARIABLE_NAME&gt;=&lt;VALUE&gt;</code>. However, this does not persist after you close your shell window. To turn a shell variable into an environment variable, use the <code>export variable_name="value"</code> command, which sets the variable and exports it to the global environment.</p>
        <p class="example" MadCap:autonum="&lt;b&gt;Example: &lt;/b&gt;"><code>export LIQUIBASE_LICENSE_KEY=yj4v59bfdgj389btc4wg</code>
        </p>
        <p>The <code>export variable_name=value</code> command does not permanently update your value after the termination of the session. To permanently update the value, edit your <code>~/.profile</code>, <code>~/.bash_profile</code>, or <code>~/.bashrc</code> file and write a line using the <code>export</code> command to define each variable, and then use the <code>source</code> command on the file you stored your environment variable(s) in.</p>
        <p>To set permanent environment variables for all users, create a file <code>my_file.sh</code> in the directory <code>/etc/profile.d</code> and use the <code>export</code> command to define each variable.</p>
        <p>To unset an environment variable, use the syntax <code>unset &lt;VARIABLE_NAME&gt;</code>.</p>
        <h2>Configuration Hierarchy</h2>
        <p><MadCap:variable name="General.Liquibase" /> supports setting properties in multiple locations, with the final value determined in the chart in which the top locations take precedence over lower locations:</p>
        <p>
            <img src="../../Z_Resources/Images/Screenshots/concepts/environment-variables.png" style="width: 414px;height: 350px;" />
        </p>
        <table style="width: 100%;margin-left: auto;margin-right: auto;">
            <thead>
                <tr>
                    <th>Location</th>
                    <th>Behavior</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Command line arguments</td>
                    <td>Override ServletConfig and ServletContext init parameters, Java system properties, OS environment variables, and configuration data</td>
                </tr>
                <tr>
                    <td>ServletConfig init parameters</td>
                    <td>Override ServletContext init parameters, Java system properties, OS environment variables, and configuration data</td>
                </tr>
                <tr>
                    <td>ServletContext init parameters</td>
                    <td>Override Java system properties, OS environment variables, and configuration data</td>
                </tr>
                <tr>
                    <td>
                        <p>Java system properties (<MadCap:xref href="java-opts-environment-variable.htm">JAVA_OPTS Environment Variable</MadCap:xref>)</p>
                    </td>
                    <td>Override OS environment variables and configuration data</td>
                </tr>
                <tr>
                    <td>OS environment variables</td>
                    <td>Override configuration data</td>
                </tr>
                <tr>
                    <td>Configuration data, such as the <MadCap:variable name="General.Liquibase" /> properties file, piped standard input, or defaults files</td>
                    <td>Does not override any values</td>
                </tr>
            </tbody>
        </table>
        <p>For example, if you want the <code>log-level=INFO</code> property set for the DEV environment and <code>log-level=SEVERE</code> set for the PROD environment, you should not specify these properties in the command line, but use environment variables instead.</p>
        <p class="example" MadCap:autonum="&lt;b&gt;Example: &lt;/b&gt;"><code>export LIQUIBASE_LOG_LEVEL="INFO" #what I set in my dev env<br></br>export LIQUIBASE_LOG_LEVEL="SEVERE" #what I set in my prod env</code>
        </p>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">Environment variables do not override the CLI usage. In automation driven by crafting dynamic CLI strings to execute, you need to reconcile commands and their arguments with specific settings in your environment variables that are overridden by the CLI usage.</p>
        <h2><MadCap:variable name="General.Liquibase" /> Naming Conventions for Environment Variables</h2>
        <p><MadCap:variable name="General.Liquibase" /> environment variables include:</p>
        <ul>
            <li>All the <code>GlobalConfiguration</code> settings: <code>LIQUIBASE_DATABASE_CHANGELOG_TABLE_NAME</code>, <code>LIQUIBASE_SCHEMA_NAME</code>, and others.</li>
            <li>All the <code>HubConfiguration</code> properties: <code>LIQUIBASE_HUB_API_KEY</code>, <code>LIQUIBASE_HUB_URL</code>, <code>LIQUIBASE_HUB_MODE</code>.</li>
            <li>All the <code>LiquibaseProConfiguration</code> properties: <code>LIQUIBASE_LICENSE_KEY</code>, <code>LIQUIBASE_PRO_MARK_UNUSED_NOT_DROPPED</code>, <code>LIQUIBASE_PRO_SYNONYMS_DROP_PUBLIC</code>, <code>LIQUIBASE_PRO_SQL_INLINE</code>.</li>
        </ul>
        <h2>Security</h2>
        <p>If you use <MadCap:variable name="General.Liquibase" /> environment variables, <MadCap:variable name="General.Liquibase" /> only reads values from environment variables without writing any of them.</p>
        <h2>Related Links</h2>
        <ul>
            <li>
                <MadCap:xref href="creating-config-properties.html">Create and Configure a [%=General.liquiPropFile%] File</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="../../parameters/working-with-command-parameters.htm">Working with Command Parameters</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="../../commands/home.htm">[%=General.Liquibase%] Commands</MadCap:xref>
            </li>
        </ul>
    </body>
</html>