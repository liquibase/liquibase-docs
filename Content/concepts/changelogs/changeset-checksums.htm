<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:searchable="False">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/concepts/changelogs/changeset-checksums.html" />
        <meta name="description" content="Explanation of how changeset checksums work in Liquibase." />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
    </head>
    <body>
        <h1>Changeset Checksums</h1>
        <p>When <MadCap:variable name="General.Liquibase" /> reaches a <MadCap:xref href="changeset.html">Changeset</MadCap:xref> in your <MadCap:xref href="home.html">Changelog</MadCap:xref> during execution, it computes a checksum and stores it in the <code>MD5SUM</code>&#160;column of the <MadCap:xref href="../tracking-tables/databasechangelog-table.html">[%=General.databasechangelog%] table</MadCap:xref>. This tells <MadCap:variable name="General.Liquibase" /> if  the <MadCap:variable name="General.changeset" /> has been modified since it was run.</p>
        <h2>4.22.0 and later</h2>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">We have removed the 4.22.0 release of <MadCap:variable name="General.Liquibase" />. This version contains an updated algorithm for determining which changes <MadCap:variable name="General.Liquibase" /> needs to deploy to a database. In some situations, the conversion to this new algorithm could result in eligible changes not being deployed to a target database.<br /><br />Specifically, currently undeployed <MadCap:variable name="General.changeset" />s with the <code>runOnChange=true</code> attribute may not be deployed if they were present in the first execution of <MadCap:variable name="General.Liquibase" /> 4.22.0 against a given target database. If you have not upgraded to <MadCap:variable name="General.Liquibase" /> 4.22.0, you are not impacted by this issue, or if you do not rely on <code>runOnChange</code>&#160;<MadCap:variable name="General.changeset" />s which have changed before your upgrade.<br /><br />To remedy this issue, run the <code><MadCap:xref href="../../commands/utility/clear-checksums.htm">clear-checksums</MadCap:xref></code> command, then revert to <MadCap:variable name="General.Liquibase" /> 4.21.1, and then run the <code><MadCap:xref href="../../commands/utility/changelog-sync.htm">changelog-sync</MadCap:xref></code> command to recalculate the v8 checksums.</p>
        <p>The checksum logic in <MadCap:variable name="General.Liquibase" /> version <a href="../../start/release-notes/liquibase-release-notes/home.htm">4.22.0</a> improves whitespace handling in views, procedures, and <MadCap:variable name="General.LBPro" /> stored logic objects. This prevents checksum validation errors when whitespace is changed, as can sometimes happen if a SQL&#160;script is open in an IDE. <MadCap:variable name="General.Liquibase" /> continues to detect non-whitespace changes and throw checksum validation errors. </p>
        <p>Checksums are silently recalculated upon the initial run with the new version. This impacts users who rely on the detection of a changed <MadCap:variable name="General.changeset" /> (<code>runOnChange=true</code>) or have more complex workflows. It is recommended that you run <code>liquibase clear-checksums</code> in the old&#160;version of <MadCap:variable name="General.Liquibase" />&#160;<b>before</b>&#160;running the new <MadCap:variable name="General.Liquibase" /> version against a database.</p>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">Users with large <MadCap:variable name="General.changelog" />s and <MadCap:variable name="General.databasechangelog" /> tables will have a one-time performance degradation as the new checksums are calculated. If this is a concern, users should schedule the upgrade to <MadCap:variable name="General.Liquibase" /> 4.24.0 in a maintenance window.</p>
        <h3>Upgrade to checksum version 9</h3>
        <p>Checksum upgrades automatically to version 9 when a <code>status</code> or any of the <code>rollback</code>, <code>update</code> or <code>changelog-sync</code> families of commands are executed. The corresponding helper <code>*-sql</code> commands do not upgrade the checksums. Other commands or combination of commands and command properties may set all or some checksums to NULL; the NULLs will be replaced with version 9 checksums on the next <code>status</code>, <code>rollback</code>, <code>update</code> or <code>changelog-sync</code> command.</p>
        <h3>Complex workflows or automation factors</h3>
        <p>Users with complex workflows or automation that rely on detection of a modified <MadCap:variable name="General.changeset" /> (<code>runOnChange=true</code>) should run <code>update-sql</code> and <code>validate</code> <b>prior to upgrading to <MadCap:variable name="General.Liquibase" /> v4.22.0</b>. The <code>update-sql</code> shows which <MadCap:variable name="General.changeset" />s are pending execution, as well as providing the SQL that will run. The <code>validate</code> ensures there are no checksum validation errors prior to <MadCap:variable name="General.Liquibase" /> upgrade. </p>
        <ul>
            <li>If there <b>are no pending changes</b> and <b>no checksum validation errors</b>, users can safely upgrade to <MadCap:variable name="General.Liquibase" /> v4.22.0.</li>
            <li>If there <b>are pending changes</b> or <b>checksum validation errors</b> users wish to ignore, they should execute <code>clear-checksums</code> on the <b>currently installed <MadCap:variable name="General.Liquibase" /> version</b> prior to upgrading to <MadCap:variable name="General.Liquibase" /> v4.22 to ensure a successful checksum upgrade.</li>
        </ul>
        <h2>Validation failures</h2>
        <p>If the <MadCap:variable name="General.changeset" /> has been modified since it was run, <MadCap:variable name="General.Liquibase" /> halts and displays an error:</p><pre xml:space="preserve"><code class="language-text">Validation Failed:
 1 change sets check sum
com/example/changelog.xml::1::example was: 8:63f82d4ff1b9dfa113739b7f362bd37d but is now: 8:b4fd16a20425fe377b00d81df722d604</code></pre>
        <p>In this example, <code>com/example/changelog.xml::1::example</code> is the <MadCap:variable name="General.changeset"></MadCap:variable> identifier, <code>8:63f…</code> is the old checksum, and <code>8:b4f…</code> is the new checksum.</p>
        <p>This message displays because <MadCap:variable name="General.Liquibase" /> cannot identify what was changed and the 
database may be in a state different than what the <MadCap:variable name="General.changelog" /> is expecting. If there was a valid reason for the <MadCap:variable name="General.changeset" /> to be changed and you want to ignore this error, there are three options:</p>
        <h3><MadCap:variable name="General.databasechangelog" />
        </h3>
        <p>The first option is to manually update the <MadCap:variable name="General.databasechangelog" /> table so that the row with the corresponding <code>id/author/filepath</code> has a null value for the checksum. <b>You must do this for all environments where the <MadCap:variable name="General.changeset" /> has been deployed.</b></p>
        <p>The next time you run the <code><MadCap:xref href="../../commands/update/update.html">update</MadCap:xref></code> command, <MadCap:variable name="General.Liquibase" /> updates the checksum value to the new correct value.</p>
        <h3><code class="highlighter-rouge">validCheckSum</code>
        </h3>
        <p>The second option is to add a <code class="highlighter-rouge">&lt;validCheckSum&gt;</code> tag to the <MadCap:variable name="General.changeset" />. The <code>validCheckSum</code> tag can contain either the old checksum or the new checksum from the error message. </p>
        <p>For example:</p>
        <div class="js-tabs">
            <ul class="js-tablist" data-hx="h2">
                <li class="js-tablist__item"><a href="#xml_example" id="label_xml_example" class="js-tablist__link">XML example</a>
                </li>
                <li class="js-tablist__item"><a href="#yaml_example" id="label_yaml_example" class="js-tablist__link">YAML example</a>
                </li>
                <li class="js-tablist__item"><a href="#json_example" id="label_json_example" class="js-tablist__link">JSON example</a>
                </li>
                <li class="js-tablist__item"><a href="#sql_example" id="label_sql_example" class="js-tablist__link">SQL example</a>
                </li>
            </ul>
            <div id="xml_example" class="js-tabcontent"><pre><code class="language-xml" data-lang="xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;databaseChangeLog
  xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd"&gt;


  &lt;changeSet id="1" author="xml-test"&gt;
    &lt;validCheckSum&gt;8:b4fd16a20425fe377b00d81df722d604&lt;/validCheckSum&gt;
    &lt;createTable tableName="test2"&gt;
      &lt;column name="id" type="int" /&gt;
    &lt;/createTable&gt;
  &lt;/changeSet&gt;
&lt;/databaseChangeLog&gt;</code></pre>
            </div>
            <div id="yaml_example" class="js-tabcontent"><pre><code class="language-yaml" data-lang="yaml">databaseChangeLog:
- changeSet:
      id: 1
      author: yml-test
      validCheckSum: 8:b4fd16a20425fe377b00d81df722d604
      changes:
        - createTable:
            tableName: test2
            columns:
              - column:
                  name: id
                  type: int</code></pre>
            </div>
            <div id="json_example" class="js-tabcontent"><pre><code class="language-json" data-lang="json">{
  "databaseChangeLog": [
    {
	  "changeSet": {
		"id": "1",
		"author": "json-test",
		"validCheckSums": ["8:b4fd16a20425fe377b00d81df722d604"],
		"changes": [
		  {
			"createTable": {
              "tableName": "test2",
              "columns": [
                {
                  "column": {
					"name": "id",
					"type": "int"
                  }
                }
              ]
            }
          }
        ]
      }
    }
  ]
}</code></pre>
            </div>
            <div id="sql_example" class="js-tabcontent">
                <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">The attribute <b>must be in a different line</b> than the <MadCap:variable name="General.changeset" /> declaration when using SQL.</p><pre xml:space="preserve"><code class="language-sql" data-lang="sql">--liquibase formatted sql

--changeset sql-test:1
--validCheckSum: 8:b4fd16a20425fe377b00d81df722d604
create table test2(
id int
);</code></pre>
            </div>
        </div>
        <h3><code>clear-checksums</code>
        </h3>
        <p>The third option is to use the <MadCap:xref href="../../commands/utility/clear-checksums.htm">clear-checksums</MadCap:xref> command to resolve the checksum error. <b>However, it will clear the entire <code>MD5SUM</code> column of checksums in your <MadCap:variable name="General.databasechangelog" /> table.</b> When you run the command, <MadCap:variable name="General.Liquibase" /> calculates new checksums for all deployed <MadCap:variable name="General.changeset" />s, and deploys any undeployed <MadCap:variable name="General.changeset" />s. In the CLI, enter:</p><pre xml:space="preserve"><code class="language-text">liquibase clear-checksums</code></pre>
        <h2><code>runOnChange</code>&#160;<MadCap:variable name="General.Param/Attribute" /></h2>
        <p>Checksums are also used in conjunction with the <code><MadCap:xref href="attributes/runonchange.htm">runOnChange</MadCap:xref></code>&#160;<MadCap:variable name="General.changeset" />&#160;<MadCap:variable name="General.Param/Attribute" />. There are times you may not want to add a new <MadCap:variable name="General.changeset" /> because you only need to know 
about the current version, but you want this change to be applied whenever it is updated. For example, you can do this with stored procedures.</p>
        <p>If you copy the entire 
text of the stored procedure to a new <MadCap:variable name="General.changeset" /> each time you make a change, you will not only end up with a very long <MadCap:variable name="General.changelog" />, but you will lose the merging and diffing 
power of your source control. Instead, put the text of the stored procedure in a <MadCap:variable name="General.changeset" /> with a <code>runOnChange="true"</code>&#160;<MadCap:variable name="General.Param/Attribute" />. The stored procedure will be re-created 
when there is a change to the text of it. For example:</p><pre><code class="language-xml">&lt;changeSet  author="your.name"  id="changeset01"  runOnChange="true" &gt;
    &lt;createProcedure&gt;
    . . .
    &lt;/createProcedure&gt;
&lt;/changeSet&gt;</code></pre>
        <h2>Related links</h2>
        <ul>
            <li>
                <MadCap:xref href="home.html">Changelog</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="changeset.html">Changeset</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="attributes/home.htm">Changelog [%=General.Param/Attr/Uppercased%]s</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="../../commands/utility/calculate-checksum.html">calculate-checksum</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="../../commands/utility/clear-checksums.htm">clear-checksums</MadCap:xref>
            </li>
        </ul>
    </body>
</html>