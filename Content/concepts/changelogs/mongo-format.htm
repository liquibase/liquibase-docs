<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:searchable="False">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/concepts/changelogs/sql-format.html" />
        <meta name="description" content="Reference information for SQL changelogs. Liquibase supports SQL as a format for storing your changelog files." />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
    </head>
    <body>
        <MadCap:snippetBlock src="../../Z_Resources/Snippets/images/icon-pro-top.flsnp" />
        <h1 id="formatted-sql-changelogs">Example Changelogs: Mongo Format</h1>
        <p>Liquibase supports <MadCap:xref href="home.html">Changelog</MadCap:xref> files in that are formatted for Mongo. These changelog files use <a href="https://www.mongodb.com/docs/manual/reference/method/">mongosh</a> methods. Although these methods use JavaScript-like syntax and have <code>.js</code> file extensions, they are written in a specialized language designed for interacting with MongoDB, not standard JavaScript. Like other file types, you can use as many formatted Mongo changelogs as your database needs.</p>
        <p>Formatted Mongo files use comments to provide Liquibase with metadata. Each Mongo file must begin with the following comment:</p><pre><code class="language-sql">//liquibase formatted mongo</code></pre>
        <h2><code>include</code> and <code>includeAll</code></h2>
        <p>In <MadCap:variable name="General.LBPro" /> 4.32.0 and later, you <b>can</b> use the <code><MadCap:xref href="../../change-types/include.html">include</MadCap:xref></code> or <code><MadCap:xref href="../../change-types/includeall.html">includeAll</MadCap:xref></code> tags in a formatted Mongo root changelog to reference other changelog files. This feature is not available in Liquibase 4.27.0 and earlier.</p>
        <p>You can reference formatted Mongo changelogs from XML, YAML, and JSON root changelogs in all versions of <MadCap:variable name="General.LBPro" /> and <MadCap:variable name="General.LBCommunity" />. This allows you to make a Mongo changelog the parent of any additional changelog files.</p>
        <h2 id="changesets">changeset
        </h2>
        <p>Each changeset in a formatted Mongo file begins with a comment of the form:</p><pre><code class="language-sql">//changeset author:id attribute1:value1 attribute2:value2 [...]</code></pre><pre>&#160;</pre>
        <h3 id="available-changeset-attributes"><a name="attribu"></a>changeset attributes</h3>
        <p>Use the following attributes for your changesets:</p>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">The <code>runWith</code> attribute is mandatory for Formatted Mongo.<br /></p>
        <table style="margin-left: auto;margin-right: auto;width: 100%;">
            <thead>
                <tr>
                    <th>Attribute</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><code><a href="attributes/contexts.html">context</a></code>
                    </td>
                    <td>
                        <MadCap:snippetBlock src="../../Z_Resources/Snippets/def/attributes/changelog/changelog-context.flsnp" />
                    </td>
                </tr>
                <tr>
                    <td><code>dbms</code>
                    </td>
                    <td>
                        <MadCap:snippetBlock src="../../Z_Resources/Snippets/def/attributes/change-types/change-type-dbms.flsnp" />
                    </td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="attributes/fail-on-error.htm">failOnError</MadCap:xref></code>
                    </td>
                    <td>
                        <MadCap:snippetBlock src="../../Z_Resources/Snippets/def/attributes/changelog/changelog-fail-on-error.flsnp" />
                    </td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="attributes/ignore.htm">ignore</MadCap:xref></code>
                    </td>
                    <td>
                        <MadCap:snippetBlock src="../../Z_Resources/Snippets/def/attributes/changelog/changelog-ignore.flsnp" />
                    </td>
                </tr>
                <tr>
                    <td><code><a href="attributes/labels.html">labels</a></code>
                    </td>
                    <td>
                        <MadCap:snippetBlock src="../../Z_Resources/Snippets/def/attributes/cli/cli-cmd-label-filter.flsnp" />
                    </td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="attributes/logicalfilepath.htm">logicalFilePath</MadCap:xref></code>
                    </td>
                    <td>
                        <MadCap:snippetBlock src="../../Z_Resources/Snippets/def/attributes/changelog/changelog-logical-file-path.flsnp" />
                    </td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="attributes/run-always.htm">runAlways</MadCap:xref></code>
                    </td>
                    <td>
                        <MadCap:snippetBlock src="../../Z_Resources/Snippets/def/attributes/changelog/changelog-run-always.flsnp" />
                    </td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="attributes/runonchange.htm">runOnChange</MadCap:xref></code>
                    </td>
                    <td>
                        <MadCap:snippetBlock src="../../Z_Resources/Snippets/def/attributes/changelog/changelog-run-on-change.flsnp" />
                    </td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="attributes/runwith.htm">runWith</MadCap:xref></code>
                    </td>
                    <td>
                        <p style="font-weight: normal;"><b>Mandatory</b>. Specifies a native executor to run your Mongo code (<code>jdbc</code>, <code>mongosh</code>, <code>psql</code>, <code>sqlcmd</code>, <code>sqlpus</code>, or a custom executor). <b>Default:&#160;<code>jdbc</code></b>.</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h2 id="rollback-actions">Rollback actions</h2>
        <h3>Specify Mongo&#160;with <code>rollback</code></h3>
        <p>Your changesets may include statements to be applied when rolling back the changeset. Rollback statements have the following format:</p><pre><code class="language-sql">
//rollback db = db.getSiblingDB( 'lbcat' );
//rollback db.substitutedPropertyCollection.drop();
			</code></pre>
        <h2 id="comment">Comment</h2>
        <p>The comment is a description of the changeset. </p>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">By default, the statements will be split on a <code>‘;'</code> or <code>‘go'</code> at the end of lines.</p>
        <p>Future releases of Liquibase may use comments to generate documentation.</p><pre><code class="language-sql">// comment: some comment</code></pre>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">When you add a comment to your changeset and deploy this changeset, the comment will not be applied to the <MadCap:variable name="General.databasechangelog" /> tracking table.</p>
        <p class="tip" MadCap:autonum="&lt;b&gt;Tip: &lt;/b&gt;">You can also add Mongo comments outside changesets using the format <code>// my comment</code>.</p>
        <h2 id="valid-checksum">Valid checksum</h2>
        <p>Valid checksum is a checksum which is valid for a specific changeset, regardless of what is stored in the database. It is typically used when you need to change a changeset and don't want errors to be thrown on databases on which it has been already run. Nevertheless, it is not a recommended procedure. <b>Since 3.5</b></p><pre><code class="language-sql">
--validCheckSum: 3:098f6bcd4621d373cade4e832627b4f6 
--validCheckSum: 7:ad0234829205b9033196ba818f7a872b</code></pre>
        <p>For more information about Liquibase checksums, see <MadCap:xref href="changeset-checksums.htm">Changeset Checksums</MadCap:xref>.</p>
        <h2 id="ignore-lines"><a name="Ignore"></a>Ignore lines</h2>
        <p>The <code>ignoreLines</code>&#160;<MadCap:variable name="General.Param/Attribute" /> allows you to ignore specific lines within a changeset. This is similar to the <code>ignore</code>&#160;<MadCap:variable name="General.Param/Attribute" /> (see the <MadCap:xref href="#attribu">[%=General.changeset%] attributes</MadCap:xref> section), but the scope can be more precise. <code>ignoreLines</code> is typically used when you run the same script with other Mongo tools.
		<b>Since 3.7</b></p>
        <p>Marking two lines to be ignored:</p><pre><code class="language-sql">
//changeSet Administrator:1 runWith:mongosh 
db = db.getSiblingDB( 'lbcat' );
db.createCollection('person');
//ignoreLines:2
this line will be ignored
this line will be ignored
//changeSet Administrator:2 runWith:mongosh 
db = db.getSiblingDB( 'lbcat' );
db.createCollection('company');</code></pre>
        <p>Making two lines to be ignored by using start-end syntax:</p><pre><code class="language-sql">
//changeSet Administrator:1 runWith:mongosh  
db = db.getSiblingDB( 'lbcat' );
db.createCollection('person'); </code></pre><pre><code class="language-sql">
//ignoreLines:start
this line will be ignored
this line will be ignored
//ignoreLines:end</code></pre><pre><code class="language-sql">
//changeSet Administrator:2 runWith:mongosh
db = db.getSiblingDB( 'lbcat' );
db.createCollection('company');</code></pre><pre>&#160;</pre>
        <h2 id="sample-changelog">Sample changelog</h2><pre><code class="language-javascript">
//liquibase formatted mongo
   
//property name:tableNameProp value:substitutedPropertyCollection

// changeset Administrator:1 runWith:mongosh labels:collections,smoky,smoke
// comment to test
db = db.getSiblingDB( 'lbcat' );
db.createCollection('${tableNameProp}');
//rollback db = db.getSiblingDB( 'lbcat' ); 
//rollback db.substitutedPropertyCollection.drop();

//changeSet Administrator:2 runWith:mongosh labels:collections,smoky,smoke contextFilter:"test,smoke,smokycon" runOnChange:true
db = db.getSiblingDB( 'lbcat' );
db.createCollection('person');</code></pre>
        <h2>Related links</h2>
        <ul>
            <li>
                <MadCap:xref href="../introduction-to-liquibase.htm">Introduction to [%=General.Liquibase%]</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="home.html">Changelog</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="changeset.html">Changeset</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="attributes/home.htm">Changelog [%=General.Param/Attr/Uppercased%]s</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="../../change-types/home.html">[%=General.changetypes%]s</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="../../commands/home.htm">[%=General.Liquibase%] Commands</MadCap:xref>
            </li>
        </ul>
    </body>
</html>