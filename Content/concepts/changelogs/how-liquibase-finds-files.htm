<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:searchable="False">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/concepts/changelogs/how-liquibase-finds-files.html" />
        <meta name="description" content="Reference information on how Liquibase finds files." />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
    </head>
    <body>
        <h1>How <MadCap:variable name="General.Liquibase" /> Finds Files: <MadCap:variable name="General.Liquibase" /> Search Path</h1>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">The <MadCap:xref href="../../parameters/search-path.htm">search-path</MadCap:xref> property is available in <MadCap:variable name="General.Liquibase" /> v4.13 and later.</p>
        <p>During the <MadCap:variable name="General.Liquibase" /> installation process, the installer creates directories and installs several files including <b>JAR files</b>. <MadCap:variable name="General.Liquibase" /> is an <b>extensible tool</b> that enables users to add functionality and integrations to the <b>standard installation</b> packaged as one or more JAR files that can be downloaded separately.</p>
        <p>JAR files are packages of aggregated <b>Java class files</b> and associated metadata built on a ZIP format which contains application functionality. In order to use the functionality of the JAR file, <MadCap:variable name="General.Liquibase" /> needs to find the JAR file.</p>
        <p>In addition to JAR files, <MadCap:variable name="General.Liquibase" /> also needs to find the <MadCap:variable name="General.changelog" /> and looks for both of these file types in the <b>following locations:</b><br /></p>
        <ul>
            <li>Any paths specified in the classpath setting.</li>
            <li>The current working directory.</li>
            <li>A <b>liquibase_libs</b> directory in the current working directory.</li>
            <li>A <b>lib</b> directory in the <MadCap:variable name="General.Liquibase" /> install location.</li>
            <li>Inside any <b>.zip</b> or <b>.jar</b> files in the <code>liquibase_libs</code> or <code>lib</code> directories.</li>
            <li>Using <code><MadCap:xref href="../../parameters/search-path.htm">search-path</MadCap:xref></code> (v4.13 and later). For more information about <code>search-path</code>, continue reading this page.</li>
        </ul>
        <p><MadCap:variable name="General.Liquibase" /> uses the paths to files as part of <MadCap:variable name="General.changeset" /> identifiers. It is important for these paths to remain consistent and stable, because they are often included in shared <MadCap:variable name="General.changelog" /> files, even when the physical location of those files may change from machine to machine.</p>
        <p>To provide that separation between the file reference and the physical location of the file, <MadCap:variable name="General.Liquibase" /> uses the concept of a "search path." The search path is the list of base physical locations where given <MadCap:variable name="General.changelog" /> paths can be found. For each file to look up, <MadCap:variable name="General.Liquibase" /> will check all those locations for the file.</p>
        <p>For example, if your referenced file path is <code>db.changelog.xml</code> and your search path is <code>/Users/example/liquibase,/projects/global</code>, <MadCap:variable name="General.Liquibase" /> will look for <code>/Users/example/liquibase/db.changelog.xml</code> and <code>/projects/global/db.changelog.xml</code>.</p>
        <p>For example, if your referenced file path is <code>project1/db.changelog.xml</code> and your search path is <code>/Users/example/liquibase,/projects/global</code>, <MadCap:variable name="General.Liquibase" /> will look for <code>/Users/example/liquibase/project1/db.changelog.xml</code> and <code>/projects/global/project1/db.changelog.xml</code>.</p>
        <p>It does not matter if your referenced file path starts with a <code>/</code> or not, <MadCap:variable name="General.Liquibase" /> always looks up the file path within your search path.</p>
        <p><MadCap:variable name="General.Liquibase" /> configures the search path based on these factors:</p>
        <ul>
            <li>The path specified in the <code>search-path</code> setting</li>
            <li>Default locations based on how you run <MadCap:variable name="General.Liquibase" /><ul><li>	CLI: the current working directory where <MadCap:variable name="General.Liquibase" /> commands are running, plus everything in your <code>LIQUIBASE_HOME/lib</code> and <code>liquibase_libs</code> directories, plus the classpath setting</li><li>Maven: project’s classpath</li><li>Spring Boot: application’s classpath</li></ul><p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">When <code>search-path</code> is set, <MadCap:variable name="General.Liquibase" /> will only search along that path and it overrides the default settings.</p></li>
        </ul>
        <MadCap:snippetBlock src="../../Z_Resources/Snippets/text/parameter-syntax.flsnp" MadCap:snippetVariables="parameters-global-command.case-camel:searchPath,;parameters-global-command.case-envar:SEARCH_PATH,;parameters-global-command.case-kebab:search-path,;parameters-global-command.command-name:update,;parameters-global-command.value-type:&lt;string&gt;," />
        <p class="tip" MadCap:autonum="&lt;b&gt;Tip: &lt;/b&gt;">If you use Maven, Ant, Spring Boot, or other integrations, you can set your <code>searchPath</code> in the default files, such as <code>pom.xml</code>, <code>application.yml</code>, and others. Check the <MadCap:xref href="../../tools-integrations/home.htm">Tools &amp; Integrations</MadCap:xref> documentation for more information.</p>
        <h2>How the <MadCap:variable name="General.Liquibase" /> search path worked before version 4.13</h2>
        <p>Before version 4.13, the search path was not configured separately from the classpath. The logic of always looking up file references via a set of base locations was the same, but the only way to configure those locations was through the classpath configuration.</p>
        <p>Before version 4.0, one of the default locations <MadCap:variable name="General.Liquibase" /> added to the searchPath/classpath was the root directory in your filesystem (/). The change caused issues because of a machine-dependent <MadCap:variable name="General.changelog" /> path, such as <code>/home/my-user/projects/liquibase/changelog.xml</code>, found under the <code>/</code> directory. This way, <MadCap:variable name="General.Liquibase" /> uses the given path as part of the <MadCap:variable name="General.changeset" /> identifier stored in the <MadCap:variable name="General.databasechangelog" /> table, and when you run <MadCap:variable name="General.Liquibase" /> from <code>/home/other-user/projects/liquibase/changelog.xml</code>, <MadCap:variable name="General.Liquibase" /> sees it as a different <MadCap:variable name="General.changelog" /> and tries to rerun all the previously run <MadCap:variable name="General.changeset" />s.</p>
        <p>To prevent identification issues from happening, a <code>/</code> was removed as a default part of the searchPath/classpath.</p>
        <h2>How the <MadCap:variable name="General.Liquibase" /> searchPath works in 4.0 and later versions</h2>
        <p>Starting with <MadCap:variable name="General.Liquibase" /> 4.0, the root directory (/) is no longer a default part of the searchPath/classpath because of the issue mentioned in the previous section.</p>
        <p>To migrate from your existing searchPath/classpath format, including the root directory (/), to version 4.0+, you can do any of the following:</p>
        <ul>
            <li>Configure your searchPath to include <code>/</code>. The configuration brings back an old behavior with no file changes.</li>
            <li>Add the <MadCap:xref href="attributes/logicalfilepath.htm">logicalFilePath</MadCap:xref> <MadCap:variable name="General.Param/Attribute" /> to the root element of your <MadCap:variable name="General.changelog" /> files. When you set the <code>logicalFilePath</code> value to be an old file reference name, <MadCap:variable name="General.Liquibase" /> uses it for the comparison file name, which will match what is in the database. If you add the <code>logicalFilePath</code>, it will bring back the old behavior with file changes, and you will not have any runtime configuration changes.</li>
            <li>Coordinate updates to the <MadCap:variable name="General.databasechangelog" /> table so that the filepath value gets changed to be a new path. You can do it with a single SQL statement, but the exact statement will depend on the database you use. See a PostgreSQL example:</li>
            <p class="example" MadCap:autonum="&lt;b&gt;Example: &lt;/b&gt;"><code>update databasechangelog set filepath=substring(filepath, length('/src/my-project')</code>
            </p>
        </ul>
        <p>You need to figure out the SQL statement and time when you run that statement because any passed existing references will start failing once you make the change, and any passed new references will fail until you do make the change.</p>
        <h2>Related links</h2>
        <ul>
            <li>
                <MadCap:xref href="../connections/liquibase-environment-variables.htm">[%=General.Liquibase%] Environment Variables</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="../connections/java-opts-environment-variable.htm">JAVA_OPTS Environment Variable</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="../../commands/home.htm">Liquibase Commands</MadCap:xref>
            </li>
        </ul>
    </body>
</html>