<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
	<head><title><MadCap:variable name="Heading.Level1" /></title>
		<link rel="canonical" href="https://docs.liquibase.com/enterprise/how-to-guides/generate-auto-permissions-synonyms-oracle" />
		<meta name="description" content="Learn how to generate auto permissions or synonyms for Oracle using a custom script." />
	</head>
    <body>
        <h1>How To: Generate Auto Permissions or Synonyms for Oracle Using a Custom Script</h1>
        <MadCap:snippetText src="../../Z_Resources/Snippets/images/icon-enterprise-top.flsnp" />
        <p>There may be situations where the built-in Auto Permission and Auto Synonym rules for Oracle cannot handle the complex logic required by an application. For example, the requirement may be to grant <code>SELECT</code> for all tables beginning with a certain prefix. This functionality can be accomplished by creating a custom script that will generate the grants according to the requirements. Then create a changeset that is executed at the end of every deployment to run the script.</p>
        <h2>Step 1 – Create a Script to Perform Grant Operations</h2>
        <p>Create a script that will generate the desired grant or synonym statements. The script can utilize change log properties (Setting Properties in the Project Changelog ) to customize values for different steps in the pipeline. The following is an example of a script to grant privileges to an Application User for all tables in a specified schema that are named <code>ABC_%</code>. The criteria for <code>APPUSER</code> will be specified by properties from the project changelog.</p>
        <p>Save the script to a location outside the SQL SCM for the <MadCap:variable name="General.LBEnterprise" /> Project since we will manually add the changeset to the changelog.</p><pre>declare
    v_statement varchar2(512);
    errbuf varchar2(2400);
    cursor grants is
    select o.owner, o.object_name
    from dba_objects o
    where o.owner = '${TAB_OWNER}'
    and o.object_type = 'TABLE'
    and object_name like 'ABC_%'
    minus
    select owner, table_name  /* exclude objects that have grants */
    from dba_tab_privs
    where grantee = '${APPUSER}'
    and owner = '${TAB_OWNER}'
    and privilege='SELECT';
begin
-- Create Grants
    for obj in grants loop
        v_statement := 'grant select on '||obj.owner || '.' ||obj.object_name ||' to ${APPUSER}';
        begin
        execute immediate v_statement;
        exception
        when others then
            errbuf := sqlerrm;
            dbms_output.put_line('Error occurred during grant');
            dbms_output.put_line(v_statement);
            dbms_output.put_line(errbuf);
        end;
    end loop;
end;
/</pre>
        <h2>Step 2 – Create changelog properties for replacement variables</h2>
        <p>If the script requires different values based upon context or labels, create the required properties. Go to <b>Project Settings</b> in the <MadCap:variable name="General.LBEnterprise" /> GUI and select <b>Manage Properties</b>.</p><span class="confluence-embedded-file-wrapper image-center-wrapper confluence-embedded-manual-size"><img class="confluence-embedded-image image-center" width="204" loading="lazy" src="https://datical-cs.atlassian.net/wiki/download/thumbnails/1552089135/ChangeLogProperties.png?version=1&amp;modificationDate=1597159981931&amp;cacheVersion=1&amp;api=v2&amp;width=204&amp;height=160" srcset="https://datical-cs.atlassian.net/wiki/download/thumbnails/1552089135/ChangeLogProperties.png?version=1&amp;modificationDate=1597159981931&amp;cacheVersion=1&amp;api=v2&amp;width=373&amp;height=294 2x, https://datical-cs.atlassian.net/wiki/download/thumbnails/1552089135/ChangeLogProperties.png?version=1&amp;modificationDate=1597159981931&amp;cacheVersion=1&amp;api=v2&amp;width=204&amp;height=160 1x" />
        <p>Add the properties to be used by the script along with the Context or Label where the property value should be applied. Within the script specify the Property Key using the syntax <code>${property_key}</code>.</p><span class="confluence-embedded-file-wrapper image-center-wrapper"><img class="confluence-embedded-image image-center" loading="lazy" src="https://datical-cs.atlassian.net/wiki/download/attachments/1552089135/image-20200402-224922.png?version=1&amp;modificationDate=1597159981735&amp;cacheVersion=1&amp;api=v2" />
        <h2>Step 3 – Add the Changeset to the Changelog</h2>
        <p>From the <MadCap:variable name="General.LBEnterprise" /> GUI, Select "Add a Change Set".</p><span class="confluence-embedded-file-wrapper image-center-wrapper confluence-embedded-manual-size"><img class="confluence-embedded-image image-center" width="102" loading="lazy" src="https://datical-cs.atlassian.net/wiki/download/thumbnails/1552089135/AddAChangeSet.png?version=1&amp;modificationDate=1597159981561&amp;cacheVersion=1&amp;api=v2&amp;width=102&amp;height=196" srcset="https://datical-cs.atlassian.net/wiki/download/thumbnails/1552089135/AddAChangeSet.png?version=1&amp;modificationDate=1597159981561&amp;cacheVersion=1&amp;api=v2&amp;width=204&amp;height=392 2x, https://datical-cs.atlassian.net/wiki/download/thumbnails/1552089135/AddAChangeSet.png?version=1&amp;modificationDate=1597159981561&amp;cacheVersion=1&amp;api=v2&amp;width=102&amp;height=196 1x" />
        <p>Scroll down and select the "Execute a SQL script file using JDBC"/"Custom SQL (External File)" change type. Note that "Execute a SQL script file using JDBC" is the newer name in versions 7.9 or higher, and "Custom SQL (External File)" is the older name for the same change type in versions 7.8 or lower.</p><span class="confluence-embedded-file-wrapper image-center-wrapper confluence-embedded-manual-size"><img class="confluence-embedded-image image-center" width="204" loading="lazy" src="https://datical-cs.atlassian.net/wiki/download/thumbnails/1552089135/ExternalFile.png?version=1&amp;modificationDate=1597159981412&amp;cacheVersion=1&amp;api=v2&amp;width=204&amp;height=114" srcset="https://datical-cs.atlassian.net/wiki/download/thumbnails/1552089135/ExternalFile.png?version=1&amp;modificationDate=1597159981412&amp;cacheVersion=1&amp;api=v2&amp;width=275&amp;height=155 2x, https://datical-cs.atlassian.net/wiki/download/thumbnails/1552089135/ExternalFile.png?version=1&amp;modificationDate=1597159981412&amp;cacheVersion=1&amp;api=v2&amp;width=204&amp;height=114 1x" />
        <p>Browse to select the file. Deselect <b>Split Statements</b>.</p><span class="confluence-embedded-file-wrapper image-center-wrapper"><img class="confluence-embedded-image image-center" loading="lazy" src="https://datical-cs.atlassian.net/wiki/download/attachments/1552089135/auto_table_grants.PNG?version=1&amp;modificationDate=1597159981227&amp;cacheVersion=1&amp;api=v2" />
        <p>On the next screen select <b>Finalize</b>.</p>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">If your script contains statements that are specific to sqlplus, it may be better to use the "Execute with SQL Plus" change set type, instead of the "Execute a SQL script file using JDBC"/"Custom SQL (External File)" change set type.</p>
        <p>Next on the Create Change Set screen:</p>
        <p>Enter the ChangeSet ID (any text string) and the Author.</p>
        <p>Set the Execution Settings to:</p>
        <p>"Redeploy this Change Set every time the contents are modified" – Allows modification of the SQL file saved to the resources directory. Without this there will be "checksum" errors if the file is modified.</p>
        <p> "Deploy this Change Set every time a deployment is performed" – Changeset will be run for every Deployment.</p>
        <p>Set Deploy Order to "After Other Change Sets".</p><span class="confluence-embedded-file-wrapper image-center-wrapper"><img class="confluence-embedded-image image-center" loading="lazy" src="https://datical-cs.atlassian.net/wiki/download/attachments/1552089135/AuthorId.png?version=1&amp;modificationDate=1597159981060&amp;cacheVersion=1&amp;api=v2" />
        <p>Click <b>Finish</b>.</p>
        <p>Add, Commit, and Push the changes to the SCM.</p>
        <h2>Step 4 – Test the new changeset</h2>
        <p>Package and deploy a simple <code>CREATE TABLE</code> script. Verify that the grants are applied to the new table.</p>
    </body>
</html>