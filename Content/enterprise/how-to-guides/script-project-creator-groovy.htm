<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
	<head><title><MadCap:variable name="Heading.Level1" /></title>
		<meta rel="canonical" href="https://docs.liquibase.com/enterprise/how-to-guides/script-project-creator-groovy" />
		<meta name="description" content="You can use the GUI to create projects one at a time. However, if you have several projects to set up, that can take a long time. Using the project_creator.groovy script can be faster." />
	</head>
    <body>
        <h1>Creating a <MadCap:variable name="General.LBEnterprise" /> Project Using the Project Creation Script (project_creator.groovy)
		</h1>
        <MadCap:snippetText src="../../Z_Resources/Snippets/images/icon-enterprise-top.flsnp" />
        <p>You can use the GUI to create projects one at a time. However, if you have several projects to set up, that can take a long time. Using the <code>project_creator.groovy</code> script can be faster. The project_creator reads information from a set of input files, and generates a project directory in your workspace containing the required configuration files. You can import the new project into your SCM repository to begin using it with your CI/CD tooling.</p>
        <h2>Example Input files</h2>
        <p>Example input files are delivered with <MadCap:variable name="General.LBEnterprise" />. They are located in the following directory.</p><pre>&#160;&lt;DaticalDB-Installation-Directory&gt;/repl/scripts/examples</pre>
        <p>Select the example files for your database platform.</p>
        <ul>
            <li>DB2 Example
				<ul><li>ProjectDB2.xlsx
						<ul><li>ProjectDB2.dbdefs.tsv.txt</li><li>ProjectDB2.pipelines.tsv.txt</li><li>ProjectDB2.project.tsv.txt</li></ul></li></ul></li>
            <li>Oracle Example
				<ul><li>ProjectNameOracle.xlsx
						<ul><li>ProjectNameOracle.dbdefs.tsv.txt</li><li>ProjectNameOracle.pipelines.tsv.txt</li><li>ProjectNameOracle.project.tsv.txt</li></ul></li></ul></li>
            <li>EDB Postgres Example
				<ul><li>ProjectPostgres.xlsx
						<ul><li>ProjectPostgres.dbdefs.tsv.txt</li><li>ProjectPostgres.pipelines.tsv.txt</li><li>ProjectPostgres.project.tsv.txt</li></ul></li></ul></li>
            <li>SQL Server Example
				<ul><li>ProjectNameMSSQL.xlsx
						<ul><li>ProjectNameMSSQL.dbdefs.tsv.txt</li><li>ProjectNameMSSQL.pipelines.tsv.txt</li><li>ProjectNameMSSQL.project.tsv.txt</li><li>MultiCatalogMSSQL.dbdefs.tsv</li><li>MultiCatalogMSSQL.pipelines.tsv</li><li>MultiCatalogMSSQL.project.tsv</li><li>MultiCatalogMSSQL.xlsx</li></ul></li></ul></li>
        </ul>
        <h2>How To Use project_creator.groovy</h2>
        <p>The <code>project_creator.groovy</code> script is executed using the <code>hammer</code> command:</p><pre>hammer groovy project_creator.groovy [&lt;datical_install_dir&gt;/plugins | ignore] &lt;provisioning_files_dir&gt; &lt;datical_workspace_dir&gt; &lt;project_name&gt; [replace] [testConnections]</pre>
        <table style="width: 100.0%;">
            <colgroup>
                <col style="width: 21.8247%;" />
                <col style="width: 78.1766%;" />
            </colgroup>
            <tbody>
                <tr>
                    <th>
                        <p><strong>Required Parameters</strong><em>(in this order)</em>
                        </p>
                    </th>
                    <th />
                </tr>
                <tr>
                    <td>
                        <p><strong>&lt;datical_install_dir&gt;/plugins</strong> or <strong>ignore</strong></p>
                    </td>
                    <td>
                        <p>The JDBC drivers directory or Type <strong>ignore</strong> if the database drivers have already been installed for the CLI</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>&lt;provisioning_files_dir&gt;</strong>
                        </p>
                    </td>
                    <td>
                        <p>The directory that contains the input files: <code>&lt;project_name&gt;.project.tsv.txt</code>, <code>&lt;project_name&gt;.dbdefs.tsv.txt</code> and <code>&lt;project_name&gt;.pipelines.tsv.txt</code></p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>&lt;datical_workspace_dir&gt;</strong>
                        </p>
                    </td>
                    <td>
                        <p>The directory that contains the Datical projects</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>&lt;project_name&gt;</strong>
                        </p>
                    </td>
                    <td>
                        <p>The name of the Datical project you want to create</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <table style="width: 100.0%;">
            <colgroup>
                <col style="width: 21.6724%;" />
                <col style="width: 78.3289%;" />
            </colgroup>
            <tbody>
                <tr>
                    <th>
                        <p><strong>Optional Parameters</strong>
                        </p>
                    </th>
                    <th />
                </tr>
                <tr>
                    <td>
                        <p><strong>replace</strong>
                        </p>
                    </td>
                    <td>
                        <p>Flag to re-create and replace the existing project</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>testConnections</strong>
                        </p>
                    </td>
                    <td>
                        <p>Flag to test connectivity for all database definitions specified in &lt;project_name&gt;.dbdefs.tsv.txt (connections are tested after they've been setup in the Datical project)</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h2>Prerequisites</h2>
        <ol>
            <li>Ensure that the <MadCap:variable name="General.LBEnterprise" /> CLI directory is in your path. Otherwise, you will need to specify the full path to the CLI tool â€“ hammer.</li>
            <li>Configure and place the following input files (Tab Delimited Files) in the &lt;provisioning_files_dir&gt; directory</li>
        </ol>
        <p>Tips:</p>
        <ul>
            <li>The filenames must begin with your &lt;project_name&gt;. This is how Datical determines which files it should process.</li>
            <li>The first line of the file must contain the field headers.</li>
            <li>Column order does not matter. You can place them in any order.</li>
        </ul>
        <table style="width: 98.1848%;">
            <colgroup>
                <col style="width: 18.3347%;" />
                <col style="width: 81.6653%;" />
            </colgroup>
            <tbody>
                <tr>
                    <td colspan="2">
                        <p><strong>&lt;project_name&gt;.project.tsv.txt</strong>
                        </p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>Field Headers</strong> (case-sensitive)</p>
                    </td>
                    <td>
                        <p><strong>Description</strong>
                        </p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>autoGenSQL</strong>
                        </p>
                    </td>
                    <td>
                        <p>A TRUE or FALSE value that determines if SQL is automatically generated from Datical functions</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>deployThreshold</strong>
                        </p>
                    </td>
                    <td>
                        <p>Pick one of the 3 available options:</p>
                        <ul>
                            <li><strong>stopOnError</strong> - Deployment will not be performed when errors are present in Pre-Deployment validation</li>
                            <li><strong>stopOnWarn</strong> - Deployment will not be performed when errors and/or Warnings are present in Pre-Deployment validation</li>
                            <li><strong>deployAlways</strong> - Deploy will occur regardless of validation results. NOT RECOMMENDED</li>
                        </ul>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>externalStoredLogic</strong>
                        </p>
                    </td>
                    <td>
                        <p>A TRUE or FALSE value that determines if storedLogic is inline or in external files</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>invalidsCheck</strong>
                        </p>
                        <p><strong><strong><strong><em>Oracle, SQL Server, or DB2 only</em></strong></strong></strong>
                        </p>
                    </td>
                    <td>
                        <p>Determines the type of validity check for compiled objects disabled - No check</p>
                        <p>limited - Only check objects targeted by a deployment and their dependencies</p>
                        <p>local - Check objects in all schemas specified in the deployment planglobal - Check across the entire database</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>invalidsAction</strong>
                        </p>
                        <p><strong><strong><em>Oracle, SQL Server, or DB2 only</em></strong></strong>
                        </p>
                    </td>
                    <td>
                        <p>Determines what to do when the Stored Logic Validity Check fails.</p>
                        <p>Both existing objects already in the database and new objects being deployed are checked.</p>
                        <ul>
                            <li><strong>warn</strong> - print WARN message and continue
								<ul><li>New objects that fail - print WARN message</li><li>Existing objects that fail - print WARN message</li></ul></li>
                            <li><strong>fail</strong> - print WARN or ERROR message, depending on objects
								<ul><li>New objects that fail - print ERROR message</li><li>Existing objects that fail that <strong>were not</strong> targeted by a changeset in the deploy operation - print WARN message</li><li>(7.7 &amp; later) Existing objects that fail that <strong>were</strong> targeted by a changeset in the deploy operation - print ERROR message</li></ul></li>
                        </ul>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>requireOptions</strong>
                        </p>
                    </td>
                    <td>
                        <p>A TRUE or FALSE value that determines if Forecast and Deploy Options are always required</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>deployMode</strong>
                        </p>
                    </td>
                    <td>
                        <p><MadCap:variable name="General.LBEnterprise" /> can optionally perform a full set of rules validations and deployment simulation prior to deploying the changes to the database. This is called a "Full" deploy. If you typically do a Forecast and then a deploy, you can set the deployMode to "quick" to skip the forecast and rules validation steps that happen during a Full deploy.</p>
                        <p>Valid values for this setting are:</p>
                        <ul>
                            <li>quick</li>
                            <li>full</li>
                        </ul>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>dbSchemaDefinition</strong>
                        </p>
                    </td>
                    <td>
                        <p>The value of this setting determines whether the schema managed by this Plan are defined once for all Deployment Steps in the Plan (value: 'project') or specified independently with each Deployment Step (value:'dbDef') . For multi-schema projects, this value should always be 'project'.</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong><strong>multiCatalog</strong></strong>
                        </p>
                        <p><strong><strong><strong><em>SQL Server only</em></strong></strong></strong>
                        </p>
                    </td>
                    <td>A TRUE or FALSE value to indicate whether this Deployment Plan manages more than one catalog/database (MSSQL Server only).</td>
                </tr>
                <tr>
                    <td>
                        <p><strong>multiSchema</strong>
                        </p>
                    </td>
                    <td>
                        <p>A TRUE or FALSE value to indicate whether this Deployment Plan manages more than one schema.</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>trackingSchema</strong>
                        </p>
                    </td>
                    <td>
                        <p>The schema that should host the Datical Tracking Tables for the Deployment Steps in this Plan.</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>managedSchema</strong>
                        </p>
                    </td>
                    <td>
                        <p>A comma-separated list of the schema to be managed by the Deployment Plan. They must be valid and available for the database specified by schemaSelectionStep.</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>schemaSelectionStep</strong>
                        </p>
                    </td>
                    <td>
                        <p>DbDef to use for the list of managed schema in managedSchema.</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>limitForecast</strong>
                        </p>
                    </td>
                    <td>
                        <p>A TRUE or FALSE value that optimizes the forecast by limiting the objects under consideration to the ones that are getting deployed (instead of the entire database)</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>enableRowCount</strong>
                        </p>
                    </td>
                    <td>
                        <p>Pick one of the 3 available options:</p>
                        <ul>
                            <li><strong>exact</strong> â€“ Use a table scan to collect the row count.</li>
                            <li><strong>approximate</strong> - Use statistics to estimate the row count.</li>
                            <li><strong>disabled</strong> - Do not collect row counts.</li>
                        </ul>
                        <p>Before v5.7, the semantics were true|false. When read in v5.7 or later, true is mapped to exact and false is mapped to disabled.</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>forecastDML</strong> <strong><em>Oracle only</em></strong></p>
                    </td>
                    <td>
                        <p>A TRUE or FALSE value that enables DML forecasting.</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>enableDdlLockTimeout</strong>
                        </p>
                        <p><strong><strong><strong><em>Oracle only</em></strong></strong></strong>
                        </p>
                    </td>
                    <td>A TRUE or FALSE value that enables the Oracle DDL_LOCK_TIMEOUT. The actual value</td>
                </tr>
                <tr>
                    <td>
                        <p><strong>ddlLockTimeoutValue</strong>
                        </p>
                        <p><strong><strong><em>Oracle only</em></strong></strong>
                        </p>
                    </td>
                    <td>
                        <p>DDL commands require exclusive locks on internal structures. If these locks are not available some commands return with an "ORA-00054: resource busy" error message, which can be frustrating when trying to modify objects that are accessed frequently. To get round this Oracle 11g includes the <code>DDL_LOCK_TIMEOUT</code> parameter, which can be set at instance or session level using the <code>ALTER SYSTEM</code> and <code>ALTER SESSION</code> commands respectively.</p>
                        <p>The <code>DDL_LOCK_TIMEOUT</code> parameter indicates the number of seconds a DDL command should wait for the locks to become available before throwing the resource busy error message. The default value is zero.</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>runtimeCredentials</strong>
                        </p>
                    </td>
                    <td>
                        <p><strong>Do not use this field</strong>, it does not have any effect.<br />Set the DbDefClass with the prefix <strong>DelayedCredential</strong> instead</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>enableSqlParser</strong>
                        </p>
                        <p><strong><strong><strong><em>Oracle only</em></strong></strong></strong>
                        </p>
                    </td>
                    <td>Enable use of the SQL Parser for scripts in the ddl_direct, sql, and sql_direct folders. For eligible databases and restrictions on usage, see <a href="../dba/package/package-sql-scripts-deployment/configure-packaging/sql-parser.htm" rel="nofollow">Using SQL Parser</a>.</td>
                </tr>
            </tbody>
        </table>
        <table>
            <tbody>
                <tr>
                    <td colspan="2">
                        <p><strong>&lt;project_name&gt;.dbdefs.tsv.txt</strong>
                        </p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>Field Headers</strong>(case-sensitive)</p>
                    </td>
                    <td>
                        <p><strong>Description</strong>
                        </p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>name</strong>
                        </p>
                    </td>
                    <td>
                        <p>The name for the dbDef. Used in the as an alias for this connection.</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>DbDefClass</strong>
                        </p>
                    </td>
                    <td>
                        <ul>
                            <li>Oracle
								<ul><li>Inline Credentials: <strong>OracleDbDef</strong></li><li>Run-Time Supplied Credentials: <strong>&#160;DelayedCredentialOracleDbDef</strong></li></ul></li>
                            <li>SQL Server
								<ul><li>Inline Credentials: <strong>SqlServerDbDef</strong></li><li>Run-Time Supplied Credentials: <strong>&#160;DelayedCredentialSqlServerDbDef</strong></li></ul></li>
                            <li>EDB Postgres
								<ul><li>Inline Credentials: <strong>PostgresqlDbDef</strong></li><li>Run-Time Supplied Credentials: <strong>&#160;DelayedCredentialPostgresDbDef</strong></li></ul></li>
                            <li>DB2
								<ul><li>Inline Credentials: <strong>Db2DbDef</strong></li><li>Run-Time Supplied Credentials: <strong>&#160;DelayedCredentialDb2DbDef</strong></li></ul></li>
                            <li>(deprecated) MySQL Inline Credentials: MysqlDbDef</li>
                        </ul>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>hostname</strong>
                        </p>
                    </td>
                    <td>
                        <p>The hostname/ip of the target database server.</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>port</strong>
                        </p>
                    </td>
                    <td>
                        <p>The port number for JDBC connections to the target database server.</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>username</strong>
                        </p>
                    </td>
                    <td>
                        <p>The database user name to use for the connection.</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>password</strong>
                        </p>
                    </td>
                    <td>
                        <p>The password for the database user specified. <em><strong>We strongly recommend to use runtime credentials because it is more secure than stored credentials (due to the possibility of the stored password being decoded)</strong></em>.</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>integratedSecurity</strong> <strong><em>SQL Server only</em></strong></p>
                    </td>
                    <td>
                        <p>Enable Active Directory for SQL Server. When this is set, the username and password fields should be empty.</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>database</strong> <strong><em>DB2 or Postgres only</em></strong></p>
                    </td>
                    <td>
                        <p>The type of the database you wish to manage.</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>databaseName</strong> <strong><em>SQL Server only</em></strong></p>
                    </td>
                    <td>
                        <p>The name of the database you wish to manage.</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>instanceName</strong> <strong><em>SQL Server only</em></strong></p>
                    </td>
                    <td>
                        <p>The name of the instance you wish to manage.</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>applicationName</strong> <strong><em>SQL Server only</em></strong></p>
                    </td>
                    <td>
                        <p>The name of the database application you wish to manage.</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>azureClientId</strong>
                        </p>
                        <p><em><strong>Azure SQL Managed Instance only<br /></strong></em>
                        </p>
                        <p><em><strong>Reference DB only</strong></em>
                        </p>
                    </td>
                    <td>The Microsoft Azure Client ID associated with the account with which you wish to manage the Azure SQL Managed Instance.</td>
                </tr>
                <tr>
                    <td>
                        <p><strong>azureTenantId</strong>
                        </p>
                        <p><em><strong>Azure SQL Managed Instance only<br /></strong></em>
                        </p>
                        <p><em><strong>Reference DB only</strong></em>
                        </p>
                    </td>
                    <td>The Microsoft Azure Tenant ID associated with the account for the Azure SQL Managed Instance you wish to manage.</td>
                </tr>
                <tr>
                    <td>
                        <p><strong>azureClientSecret</strong>
                        </p>
                        <p><em><strong>Azure SQL Managed Instance only</strong></em>
                        </p>
                        <p><em><strong><br />Reference DB only</strong></em>
                        </p>
                    </td>
                    <td>
                        <p>The Microsoft Azure Client Secret used to authenticate with the Azure REST.</p>
                        <p>The REST API Client Secret is a sensitive credential that should be treated with the same caution as database login credentials. It is strongly recommended that this credential be provided at runtime in an environment variable and not stored in the GUI. For more information, see product documentation about Runtime Credentials.</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>azureResourceGroup</strong>
                        </p>
                        <p><em><strong>Azure SQL Managed Instance only<br /></strong></em>
                        </p>
                        <p><em><strong>Reference DB only</strong></em>
                        </p>
                    </td>
                    <td>The Microsoft Azure Resource Group associated with the Azure SQL Managed Instance you wish to manage.</td>
                </tr>
                <tr>
                    <td>
                        <p><strong>azureSubscriptionId</strong>
                        </p>
                        <p><em><strong>Azure SQL Managed Instance only<br /></strong></em>
                        </p>
                        <p><em><strong>Reference DB only</strong></em>
                        </p>
                    </td>
                    <td>The Microsoft Azure Subscription ID associated with the Azure SQL Managed Instance you wish to manage.</td>
                </tr>
                <tr>
                    <td>
                        <p><strong>platformType</strong>
                            <br /><strong><em>DB2 only</em></strong>
                        </p>
                    </td>
                    <td>Platform type, one of LUW or ZOS. LUW is the default.</td>
                </tr>
                <tr>
                    <td>
                        <p><strong>sid</strong> <strong><em>Oracle only</em></strong></p>
                    </td>
                    <td>
                        <p>The name of the Oracle SID to which you wish connect.</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>serviceName</strong> <strong><em>Oracle only</em></strong></p>
                    </td>
                    <td>
                        <p>The name of the Oracle Service to which you wish connect.</p>
                    </td>
                </tr>
                <tr>
                    <td><strong>useWallet<br /><strong><em>Oracle only</em></strong><br /></strong>
                    </td>
                    <td>Use Oracle Wallet to connect to the Oracle database through an SSL connection. See <a href="../devops/db-release-pipelines/oracle-database-setup/choose-connection-method/ssl-oracle-wallet.htm" rel="nofollow">Using Oracle Wallet for SSL Connections to Oracle Databases</a>.</td>
                </tr>
                <tr>
                    <td><strong>tnsName<br /><strong><em>Oracle only</em></strong><br /></strong>
                    </td>
                    <td>Directory that contains configuration files for Oracle Wallet.</td>
                </tr>
                <tr>
                    <td>
                        <p><strong>defaultSchemaName</strong>
                        </p>
                    </td>
                    <td>
                        <p>The name of the schema/catalog you wish to manage. Only used with single schema project configurations.</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>contexts</strong>
                        </p>
                    </td>
                    <td>
                        <p>A comma separated list of contexts to associate with the new dbDef.</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>labels</strong>
                        </p>
                    </td>
                    <td>
                        <p>A comma separated list of labels to associate with the new dbDef.</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>storageOptions</strong>
                        </p>
                    </td>
                    <td>
                        <p>A TRUE or FALSE value that determines if the Datical collects Storage Options.</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>dbDefType</strong>
                        </p>
                    </td>
                    <td>
                        <p>Set to <code>standard</code> for managed database. Set to <code>dmcdb</code> for a Deployment Monitoring Console database.<br /><strong>NOTE:</strong> If specifying a <code>dmcdb</code> in your project,&#160;<code>project_creator.groovy</code> will attempt to register the project with the <code>dmcdb</code>.</p>
                    </td>
                </tr>
                <tr>
                    <td><strong>scriptExecutionTimeout</strong>
                    </td>
                    <td>Limit the time to wait for a script to execute, in seconds. Default value is 0, which means there is no limit.</td>
                </tr>
            </tbody>
        </table>
        <table>
            <tbody>
                <tr>
                    <td colspan="2">
                        <p><strong>&lt;project_name&gt;.pipelines.tsv.txt</strong>
                        </p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>Field Headers</strong> (case-sensitive)</p>
                    </td>
                    <td>
                        <p><strong>Description</strong>
                        </p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>pipeline</strong>
                        </p>
                    </td>
                    <td>
                        <p>Name of the pipeline</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>description</strong>
                        </p>
                    </td>
                    <td>
                        <p>Decription for the pipeline</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>dbDef</strong>
                        </p>
                    </td>
                    <td>
                        <p>Name of a dbDef from <code>&lt;project_name&gt;.dbdefs.tsv.txt</code></p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>visible</strong>
                        </p>
                    </td>
                    <td>
                        <p><code>TRUE</code>/<code>FALSE</code> value â€“ is this step visible in the pipeline</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h2>Example: Running the Script</h2>
        <h3>Windows</h3><pre>% hammer groovy project_creator.groovy "F:\drivers\jdbc_drivers" "F:\provisioning_files" "C:\Users\TestUser1\datical" "new_project" testConnections</pre>
        <h3>Linux</h3><pre>% hammer groovy project_creator.groovy ignore /opt/datical/provisioning_files /opt/datical/workspace "new_project" testConnections</pre>
        <h2>Results</h2>
        <p>A <code>&lt;project_name&gt;</code> directory is placed in your <code>datical</code> workspace containing a datical.project file.</p>
    </body>
</html>