<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
	<head><title><MadCap:variable name="Heading.Level1" /></title>
		<link rel="canonical" href="https://docs.liquibase.com/enterprise/how-to-guides/leverage-metadata-properties" /><meta name="description" content="Use the metadata.properties file to specify behavior during packaging." />
	</head>
    <body>
        <h1>How To: Leverage the "metadata.properties" file</h1>
        <p>
            <MadCap:snippetText src="../../Z_Resources/Snippets/images/icon-enterprise-top.flsnp" />
        </p>
        <p>Use the <code>metadata.properties</code> file to specify behavior during packaging.
		A sample <code>metadata.properties</code> file is installed with <MadCap:variable name="General.LBEnterprise" /> in <code>&lt;install-dir&gt;/repl/scripts</code>.</p>
        <p>The <code>metadata.properties</code> file applies to all files and subdirectories in the directory where it is found, including the root directory for SQL scripts. Additional <code>metadata.properties</code> files can be used in the subdirectories. A property set in a subdirectory overrides the same property set in a parent directory.</p>
        <MadCap:snippetBlock src="../../Z_Resources/Snippets/enterprise/text/packaging-metadata-properties.flsnp" />
        <h2>Examples:</h2>
        <p>Let us work with an example. Assume that this is the directory structure within your sql_code directory:</p>
        <p><img class="confluence-embedded-image confluence-content-image-border" height="218" width="170" loading="lazy" src="https://datical-cs.atlassian.net/wiki/download/thumbnails/1021086/image2017-8-1_15-33-17.png?version=1&amp;modificationDate=1501615998895&amp;cacheVersion=1&amp;api=v2&amp;width=170&amp;height=218" srcset="https://datical-cs.atlassian.net/wiki/download/thumbnails/1021086/image2017-8-1_15-33-17.png?version=1&amp;modificationDate=1501615998895&amp;cacheVersion=1&amp;api=v2&amp;width=170&amp;height=218 2x, https://datical-cs.atlassian.net/wiki/download/thumbnails/1021086/image2017-8-1_15-33-17.png?version=1&amp;modificationDate=1501615998895&amp;cacheVersion=1&amp;api=v2&amp;width=170&amp;height=218 1x" />
        </p>
        <h3>Using Labels</h3>
        <h4>Use-case: Apply "hotfix" label to certain ddl scripts</h4>
        <ol>
            <li>Create a "hotfix" subdirectory in the ddl directory</li>
            <li>
                <p>Create a "metadata.properties" file in the "hotfix" subdirectory.</p>
                <p><img class="confluence-embedded-image confluence-content-image-border" height="247" width="384" loading="lazy" src="https://datical-cs.atlassian.net/wiki/download/thumbnails/1021086/image2017-8-1_15-36-1.png?version=1&amp;modificationDate=1501616163018&amp;cacheVersion=1&amp;api=v2&amp;width=384&amp;height=247" srcset="https://datical-cs.atlassian.net/wiki/download/thumbnails/1021086/image2017-8-1_15-36-1.png?version=1&amp;modificationDate=1501616163018&amp;cacheVersion=1&amp;api=v2&amp;width=384&amp;height=247 2x, https://datical-cs.atlassian.net/wiki/download/thumbnails/1021086/image2017-8-1_15-36-1.png?version=1&amp;modificationDate=1501616163018&amp;cacheVersion=1&amp;api=v2&amp;width=384&amp;height=247 1x" />
                </p>
            </li>
            <li>
                <p>Add the following line in the metadata.properties file:</p><pre>labels=hotfix</pre>
            </li>
            <li>
                <p>Now, when Deployment Packager packages any script from the "hotfix" subdirectory, those changes will automatically receive the "hotfix" label (because the label is defined in "metadata.properties" file in the hotfix subdirectory)</p>
                <ul>
                    <li>Lets say "table_user_session_fix1.sql" script is dropped into sql_code/ddl/hotfix directory and it is committed into SCM.</li>
                    <li>When packager runs, it will pick up this script and realize that there is a metadata.properties file located in the same directory and it contains labels=hotfix. Therefore, packager will apply this label ("hotfix") to all changesets generated from this sql script.</li>
                    <li>Note that in addition to applying the "hotfix" label, other labels are also applied:
						<ul><li>The script name is a label</li><li>The label passed into the Deployment Packager when packager was invoked (via "hammer groovy deployPackager.groovy --label=&lt;comma_separated_list_of_labels&gt;")</li></ul></li>
                    <li><img class="confluence-embedded-image confluence-content-image-border" height="181" width="1180" loading="lazy" src="https://datical-cs.atlassian.net/wiki/download/thumbnails/1021086/image2017-8-2_9-15-23.png?version=1&amp;modificationDate=1501679726813&amp;cacheVersion=1&amp;api=v2&amp;width=1180&amp;height=181" srcset="https://datical-cs.atlassian.net/wiki/download/thumbnails/1021086/image2017-8-2_9-15-23.png?version=1&amp;modificationDate=1501679726813&amp;cacheVersion=1&amp;api=v2&amp;width=1180&amp;height=181 2x, https://datical-cs.atlassian.net/wiki/download/thumbnails/1021086/image2017-8-2_9-15-23.png?version=1&amp;modificationDate=1501679726813&amp;cacheVersion=1&amp;api=v2&amp;width=1180&amp;height=181 1x" />
                    </li>
                </ul>
            </li>
        </ol>
        <h3>Using Contexts</h3>
        <h4>Use case: Changes need to be deployed to specific Dev environments</h4>
        <p>Certain projects have requirements where they have multiple DEV databases (e.g., DEV1, DEV2, DEV3, etc.). Each DEV environment is given to a specific team or designated for a specific feature. As such, scripts get deployed to a specific DEV database (instead of deploying to all DEV databases).Once scripts are ready for QA, then all scripts are deployed into a single QA environment. Here is a high level diagram to show typical deployment path:</p>
        <p><img class="confluence-embedded-image confluence-content-image-border" height="451" width="824" loading="lazy" src="https://datical-cs.atlassian.net/wiki/download/thumbnails/1021086/image2017-8-2_10-14-31.png?version=1&amp;modificationDate=1501683273389&amp;cacheVersion=1&amp;api=v2&amp;width=824&amp;height=451" srcset="https://datical-cs.atlassian.net/wiki/download/thumbnails/1021086/image2017-8-2_10-14-31.png?version=1&amp;modificationDate=1501683273389&amp;cacheVersion=1&amp;api=v2&amp;width=824&amp;height=451 2x, https://datical-cs.atlassian.net/wiki/download/thumbnails/1021086/image2017-8-2_10-14-31.png?version=1&amp;modificationDate=1501683273389&amp;cacheVersion=1&amp;api=v2&amp;width=824&amp;height=451 1x" />
        </p>
        <p>This can be achieved using Datical's "context". Similar to labels, a context refers to a specific database (or databases) in the pipeline. When a Datical pipeline is configured, each connection to database is given a context. This context can be used to perform deployments.</p>
        <h4>Where do you specify context for a database environment in Datical project?</h4>
        <ol>
            <li>In <MadCap:variable name="General.LBEnterprise" /> GUI, click on "Edit Connection" link for each database in the project:</li>
            <li><img class="confluence-embedded-image confluence-content-image-border" width="275" loading="lazy" src="https://datical-cs.atlassian.net/wiki/download/thumbnails/1021086/image2017-8-2_11-9-42.png?version=1&amp;modificationDate=1501686584370&amp;cacheVersion=1&amp;api=v2&amp;width=275&amp;height=342" srcset="https://datical-cs.atlassian.net/wiki/download/thumbnails/1021086/image2017-8-2_11-9-42.png?version=1&amp;modificationDate=1501686584370&amp;cacheVersion=1&amp;api=v2&amp;width=326&amp;height=406 2x, https://datical-cs.atlassian.net/wiki/download/thumbnails/1021086/image2017-8-2_11-9-42.png?version=1&amp;modificationDate=1501686584370&amp;cacheVersion=1&amp;api=v2&amp;width=275&amp;height=342 1x" />
            </li>
            <li>Specify context here. If no context is provided, click on the "Configure" button on the right to type in the context</li>
            <li><img class="confluence-embedded-image confluence-content-image-border" height="466" width="440" loading="lazy" src="https://datical-cs.atlassian.net/wiki/download/thumbnails/1021086/image2017-8-2_11-11-47.png?version=1&amp;modificationDate=1501686708964&amp;cacheVersion=1&amp;api=v2&amp;width=440&amp;height=465" srcset="https://datical-cs.atlassian.net/wiki/download/thumbnails/1021086/image2017-8-2_11-11-47.png?version=1&amp;modificationDate=1501686708964&amp;cacheVersion=1&amp;api=v2&amp;width=614&amp;height=650 2x, https://datical-cs.atlassian.net/wiki/download/thumbnails/1021086/image2017-8-2_11-11-47.png?version=1&amp;modificationDate=1501686708964&amp;cacheVersion=1&amp;api=v2&amp;width=440&amp;height=465 1x" />&#160;â†’ <img class="confluence-embedded-image confluence-content-image-border" width="490" loading="lazy" src="https://datical-cs.atlassian.net/wiki/download/thumbnails/1021086/image2017-8-2_11-13-53.png?version=1&amp;modificationDate=1501686835092&amp;cacheVersion=1&amp;api=v2&amp;width=490&amp;height=318" srcset="https://datical-cs.atlassian.net/wiki/download/thumbnails/1021086/image2017-8-2_11-13-53.png?version=1&amp;modificationDate=1501686835092&amp;cacheVersion=1&amp;api=v2&amp;width=633&amp;height=412 2x, https://datical-cs.atlassian.net/wiki/download/thumbnails/1021086/image2017-8-2_11-13-53.png?version=1&amp;modificationDate=1501686835092&amp;cacheVersion=1&amp;api=v2&amp;width=490&amp;height=318 1x" /></li>
            <li>Click "OK".</li>
            <li>Repeat for all database environments in the project, including database environments in other pipelines that exist in the project.
				<ul><li>Your context can match your database name as shown in the table below:
						<ul><li><table><tbody><tr><th>Database name</th><th>Context</th></tr><tr><td>REF1</td><td>REF1</td></tr><tr><td>DEV1</td><td>DEV1</td></tr><tr><td>DEV2</td><td>DEV2</td></tr><tr><td>DEV3</td><td>DEV3</td></tr><tr><td>QA</td><td>QA</td></tr><tr><td>STAGE</td><td>STAGE</td></tr><tr><td>PROD</td><td>PROD</td></tr></tbody></table></li></ul></li></ul></li>
            <li>Finally, make sure to push the project into your SCM (e.g., Bitbucket).</li>
        </ol>
        <h4>Step-by-step guide</h4>
        <ol>
            <li>Setup directory structure such that there are DEV subdirectories in each of the sql_code directories
				<ul><li>For example, in data_dml directory, there would be three DEV directories - one for each DEV environment - DEV1, DEV2 and DEV3</li></ul></li>
            <li><img class="confluence-embedded-image confluence-content-image-border" width="400" loading="lazy" src="https://datical-cs.atlassian.net/wiki/download/thumbnails/1021086/image2017-8-2_10-30-35.png?version=1&amp;modificationDate=1501684238632&amp;cacheVersion=1&amp;api=v2&amp;width=400&amp;height=394" srcset="https://datical-cs.atlassian.net/wiki/download/thumbnails/1021086/image2017-8-2_10-30-35.png?version=1&amp;modificationDate=1501684238632&amp;cacheVersion=1&amp;api=v2&amp;width=470&amp;height=464 2x, https://datical-cs.atlassian.net/wiki/download/thumbnails/1021086/image2017-8-2_10-30-35.png?version=1&amp;modificationDate=1501684238632&amp;cacheVersion=1&amp;api=v2&amp;width=400&amp;height=394 1x" />
            </li>
            <li>In each DEV subdirectory, there would be a "metadata.properties" file which would contain "contexts" flag:
				<ul><li>In <u>DEV1</u> subdirectory, the "metadata.properties" file would contain "contexts=REF1,<span style="color: rgb(255,0,0);">DEV1,QA,STAGE,PROD"</li><li>In <u>DEV2</u> subdirectory, the "metadata.properties" file would contain "contexts=REF1,<span style="color: rgb(255,0,0);">DEV2,QA,STAGE,PROD"</li><li>In <u>DEV3</u> subdirectory, the "metadata.properties" file would contain "contexts=REF1,<span style="color: rgb(255,0,0);">DEV3,QA,STAGE,PROD"</li><li><b>metadata.properties - DEV1</b><pre>contexts=REF1,DEV1,QA,STAGE,PROD</pre></li></ul></li>
            <li>When packager picks up scripts from these subdirectories, it will automatically apply all context to resulting changesets.
				<ul><li>Lets say "shopping_cart_aug.sql" script is dropped into sql_code/ddl/DEV1 directory and it is committed into SCM.</li><li>When packager runs, it will pick up this script and realize that there is a metadata.properties file located in the same directory (ddl/DEV1) and it contains contexts=REF1,DEV1,QA,STAGE,PROD. Therefore, packager will apply these contexts to all changesets generated from this sql script.</li></ul></li>
            <li><img class="confluence-embedded-image confluence-content-image-border" height="208" width="935" loading="lazy" src="https://datical-cs.atlassian.net/wiki/download/thumbnails/1021086/image2017-8-2_11-2-4.png?version=1&amp;modificationDate=1501686126342&amp;cacheVersion=1&amp;api=v2&amp;width=935&amp;height=208" srcset="https://datical-cs.atlassian.net/wiki/download/thumbnails/1021086/image2017-8-2_11-2-4.png?version=1&amp;modificationDate=1501686126342&amp;cacheVersion=1&amp;api=v2&amp;width=935&amp;height=208 2x, https://datical-cs.atlassian.net/wiki/download/thumbnails/1021086/image2017-8-2_11-2-4.png?version=1&amp;modificationDate=1501686126342&amp;cacheVersion=1&amp;api=v2&amp;width=935&amp;height=208 1x" />
            </li>
            <li>Now, when you deploy your changes to DEV1 environment, these two changesets will be DEPLOYED.</li>
            <li>When you deploy your changes to DEV2 or DEV3 environments, these two changesets will be SKIPPED because the context for these changesets do not match with the database context as specified in the Datical project</li>
        </ol>
    </body>
</html>