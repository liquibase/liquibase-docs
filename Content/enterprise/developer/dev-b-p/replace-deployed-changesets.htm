<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/enterprise/developer/dev-b-p/replace-deployed-changesets.html" />
        <meta name="description" content="Use a replace script to replace a deployed changes with the desired changes." />
    </head>
    <body>
        <h1>Replacing Deployed Changesets: replace</h1>
        <MadCap:snippetText src="../../../Z_Resources/Snippets/images/icon-enterprise-top.flsnp" />
        <p>Use a replace script to replace a deployed changes with the desired changes.</p>
        <p>Sometimes database changes (changesets) need to be replaced after deployment. This can occur if a change fails testing in a later stage environment.</p>
        <p>The replace capability allows you to deploy a changeset that is specially marked for replacing prior changes. During processing, the original changeset gets the attribute <code>ignore=true</code> to prevent it from being deployed further.</p>
        <p>See Cleaning Up Deployed Changesets: cleanup.</p>
        <h2>Pairing a Replace Script with a Cleanup Script</h2>
        <p>You commonly need to deploy a cleanup script to undo the changes of the script you want to replace.</p>
        <p>A cleanup script and a replace script can be packaged in the same packaging run.</p>
        <h2>Types of Change Eligible for Replace Scripts</h2>
        <p>Replace scripts work for different types "non-rerunnable" changes:</p>
        <ul>
            <li><code>DDL</code> folder or <code>packageMethod=CONVERT</code></li>
            <li><code>DDL_DIRECT</code> folder or <code>packageMethod=DDL_DIRECT</code></li>
            <li><code>DATA_DML</code> folder or <code>packageMethod=DATA_DML</code></li>
            <li><code>SQL_DIRECT</code> folder or <code>packageMethod=DIRECT</code></li>
            <li><code>SQL</code> folder or <code>packageMethod=SQLFILE</code></li>
            <li><MadCap:variable name="General.Liquibase" />&#160;<MadCap:variable name="General.changelog" />s - replace the <MadCap:variable name="General.changeset" />s packaged from the original <MadCap:variable name="General.changelog" /> with <MadCap:variable name="General.changeset" />s from the replacement <MadCap:variable name="General.changelog" />.</li>
        </ul>
        <p>Cleanup and/or Replace are <strong>NOT</strong> recommended for stored logic (code: package, packagebody, procedure, function, trigger, view folders). Use the provided versioning capability with stored logic instead.</p>
        <h2>Replacing Changesets</h2>
        <p>For a file named<code>myscript.sql</code>, create a replace file that contains the code to replace what was deployed before. Use one of the following forms:</p>
        <p><code>myscript-replace.sql</code>
        </p>
        <p><code>myscript_replace.sql</code>
        </p>
        <p>The file may use any extension (e.g. .sql) or no extension.</p>
        <h2>Processing</h2>
        <p>Deployment Packager processes the -replace files during packaging, as follows:</p>
        <ol>
            <li>Searches the changelog for matching changesets based on filename. Packager will error if there are no matching changesets in the changelog that were previously packaged with the same filename in the same path relative to the root folder. Changesets must match these attributes:<ul><li><code>origFilePath</code></li><li><code>origFileName</code></li></ul></li>
            <li>Sets <code>ignore=true</code> attribute on all matching changesets (same orgFilePath and origFileName) that pertain to the most recent / highest version</li>
            <li>Produces new changeset(s) and positions them in the changelog.immediately following the most recent changeset(s)</li>
            <li>Archives the replace file as appropriate.</li>
        </ol>
    </body>
</html>