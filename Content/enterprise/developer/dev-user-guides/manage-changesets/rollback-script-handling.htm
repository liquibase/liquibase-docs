<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title><MadCap:variable name="Heading.Level1" /> | Enterprise Docs</title>
        <meta rel="canonical" href="https://docs.liquibase.com/enterprise/developer/dev-user-guides/manage-changesets/rollback-script-handling.html" />
        <meta name="description" content="Learn how to handle Rollback scripts." />
    </head>
    <body>
        <h1>Rollback Script Handling</h1>
        <MadCap:snippetText src="../../../../Z_Resources/Snippets/images/icon-enterprise-top.flsnp" />
        <p>If you have provided a custom rollback script for a <strong>non-DDL</strong> SQL script, then you normally do the following:
        </p>
        <ul>
            <li>Replace the original script: write a -replace or _replace script.
            </li>
            <li>Edit its existing custom rollback script.
            </li>
        </ul>
        <p>A non-DDL script is one that is not packaged in the ddl directory.
        </p>
        <p>Do not use a <code>-replace</code>/_replace script for a rollback script (<code>myscript-rollback-replace</code>). Packaging fails with an error if a script using <code>-rollback-replace</code> is found.</p>
        <p>Rollback scripts are always repackaged. When you change them, the version is incremented.</p>
        <p>See also <a href="../../../devops/move-changes-pipeline/roll-back-changes/rollback-changes.htm" rel="nofollow">Rolling Back Changes</a>.
        </p>
        <h2 id="RollbackScriptHandling-ExampleScripts">Example Scripts</h2>
        <p>The following scenarios start with an existing SQL script and a custom rollback script for it.
        </p>
        <ul>
            <li><code>myscript.sql</code>
            </li>
            <li><code>myscript-rollback.sql or myscript_rollback.sql</code>
            </li>
        </ul>
        <h2 id="RollbackScriptHandling-ExplicitReplacementofBothFiles">Explicit Replacement of Both Files</h2>
        <p>You want to replace the existing script and modify its rollback behavior. Write a replace script for the original script and update its custom rollback script. Package them in the same packaging run.
        </p>
        <ul>
            <li><code>myscript-replace.sql or myscript_replace.sql</code>
            </li>
            <li><code>myscript-rollback.sql or myscript_rollback.sql</code>
            </li>
        </ul>
        <h2 id="RollbackScriptHandling-ImplicitUsageofExistingRollbackScript">Implicit Usage of Existing Rollback Script</h2>
        <p>You want to replace the existing file but do not want to update its custom rollback script.
        </p>
        <ul>
            <li><code>myscript-replace.sql or myscript_replace.sql</code>
            </li>
        </ul>
        <p>In this case, <code>myscript-rollback.sql or myscript_rollback.sql</code> is replaced and the rollback script is repackaged for use with the replacement script. Its version is incremented.
        </p>
        <h2 id="RollbackScriptHandling-ReplacingOnlyaRollbackScript">Replacing Only a Rollback Script</h2>
        <p>You want to replace a rollback script. You can do this at any time, regardless of whether you are replacing the original script.
        </p>
        <ul>
            <li><code>myscript-rollback.sql or myscript_rollback.sql</code>
            </li>
        </ul>
        <p>In this case, edit<code>myscript-rollback.sql</code> or myscript_rollback.sql in place. During the packaging run it is repackaged and its version is incremented.</p>
        <h2 id="RollbackScriptHandling-CasesWhereRollbackScriptsAreNotAllowed">Cases Where Rollback Scripts Are Not Allowed</h2>
        <ul>
            <li>Liquibase changelogs. See <a href="../../../dba/package/package-sql-scripts-deployment/packaging-changelogs.htm">Packaging Liquibase Changelogs</a>.</li>
        </ul>
    </body>
</html>