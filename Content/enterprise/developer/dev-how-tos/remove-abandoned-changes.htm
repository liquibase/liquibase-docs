<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title><MadCap:variable name="Heading.Level1" /> | Enterprise Docs</title>
        <link rel="canonical" href="https://docs.liquibase.com/enterprise/developer/dev-how-tos/remove-abandoned-changes.html" />
        <meta name="description" content="This document describes how to permanently remove changes from Liquibase Enterprise and from lower environments that were abandoned." />
    </head>
    <body>
        <h1>How To: Remove abandoned changes
			<MadCap:snippetText src="../../../Z_Resources/Snippets/images/icon-enterprise-top.flsnp" /></h1>
        <p>This document describes how to permanently remove changes from <MadCap:variable name="General.LBEnterprise" /> and from lower environments that were abandoned.</p>
        <h2 id="HowTo:RemoveabandondedchangesfromDaticalandlowerenvironments-CleanLowerEnvironments">Clean Lower Environments</h2>
        <p>In order to remove abandoned changes from lower environments, you would need to apply the "fix" script to those environments. In order to control where to deploy your "fix" script, you can use "contexts" in <MadCap:variable name="General.LBEnterprise" />. Follow the steps described in <a href="remove-abandoned-changes.htm" rel="nofollow">How To: Abandon changes</a> in order to remove your changes. This would effectively clean your environments from abandoned changesets.</p>
        <h2 id="HowTo:RemoveabandondedchangesfromDaticalandlowerenvironments-WhereAreChangesetsReferenced?">Where Are Changesets Referenced?</h2>
        <p>Changesets that you label as "abandoned" reside in the <code>changelog.xml</code> file in your <MadCap:variable name="General.LBEnterprise" /> project.</p>
        <p>In general, these changesets are referenced in multiple places:</p>
        <ul>
            <li><MadCap:variable name="General.LBEnterprise" /> project repository in SCM
				<ul><li>Changelog directory (in changelog.xml) as indicated above</li><li>Resource directory (scripts associated with the changeset or referenced in the changeset)</li></ul></li>
            <li><code><span style="font-family: Arial, sans-serif;">SQL code repository in SCM (scripts originating in the "ddl", "ddl_direct", "data_dml", "sql", sql_direct" folders are referenced in the "archive" directory)</code>
            </li>
            <li>Tracking table (DATABASECHANGELOG) in each database environment where those changesets got deployed.</li>
            <li>Audit database</li>
        </ul>
        <h2 id="HowTo:RemoveabandondedchangesfromDaticalandlowerenvironments-PrimaryProcess">Primary Process</h2>
        <p><strong>Although abandoned changes can be removed (or fixed) from database environments, it should be noted that abandoned changesets SHOULD NOT BE removed from the <MadCap:variable name="General.LBEnterprise" /> project</strong>
			. Those changesets are safe to remain in the <MadCap:variable name="General.LBEnterprise" /> project. These changesets serve as evidence of changes that <MadCap:variable name="General.LBEnterprise" /> packaged, deployed and abandoned over time. As such, entries logged in tracking table (DATABASECHANGELOG) and audit database also serve to provide audit trail of such changes.</p>
        <h3 id="HowTo:RemoveabandondedchangesfromDaticalandlowerenvironments-WhatwillhappenifyoudeleteabandonedchangesetsfromyourDaticalproject">
			What will happen if you delete abandoned changesets from your <MadCap:variable name="General.LBEnterprise" /> project</h3>
        <p>As indicated above, there are multiple traces of abandoned changesets. If you delete those changesets from your <MadCap:variable name="General.LBEnterprise" /> project (from changelog.xml file), then because those changesets are still referenced in multiple places, <strong>your deleted changesets will continue to show when you Status your database environment</strong> (as ignored changesets).</p>
        <h2 id="HowTo:RemoveabandondedchangesfromDaticalandlowerenvironments-AlternateProcess">Alternate Process</h2>
        <p>In the event that a changeset must absolutely needs to be deleted from changelog.xml, this activity can only be done using <MadCap:variable name="General.LBEnterprise" /> GUI. As such, it should be noted that this would be a manual task and could impact release automation platform if not done correctly. Therefore, this path should be taken very rarely and with great caution. Typically, this task would be performed after a release has been pushed to PROD.</p>
        <p>You will need to make sure that your <MadCap:variable name="General.LBEnterprise" /> project is connected to your SCM and that you are working on the latest version of your project.</p>
        <ol>
            <li>In Datical GUI, get the latest version of the Datical project from SCM. E.g., "git pull"</li>
            <li>Click on the "Design" tab (near the bottom).
				<ul><li>&#160;<img src="../../../Z_Resources/Images/enterprise/remove-abandon-changes/1remove-change.png" />â†’ <img src="../../../Z_Resources/Images/enterprise/remove-abandon-changes/2remove-change.png" /></li></ul></li>
            <li>In the Design view, select the changeset you want to delete. Then right-click and select Remove.
				<ul><li><img src="../../../Z_Resources/Images/enterprise/remove-abandon-changes/3remove-change.png" /></li></ul></li>
            <li>VERY IMPORTANT: Your project is now in an unsaved state. This is indicated by the * in the view.&#160;<u>Save your project by going to the File menu and select "Save"</u>. Or you can use Ctrl+S shortcut key from your keyboard
				<ul><li><img src="../../../Z_Resources/Images/enterprise/remove-abandon-changes/4remove-change.png" /></li></ul></li>
            <li>Now, when you Status your database and look at what's deployed in your database, you will notice that the deleted changeset shows up in the Ignored view with comments "Not in Changelog"
				<ul><li><img src="../../../Z_Resources/Images/enterprise/remove-abandon-changes/5remove-change.png" /></li><li><img src="../../../Z_Resources/Images/enterprise/remove-abandon-changes/6remove-change.png" /></li></ul></li>
            <li>VERY IMPORTANT: Commit and push your Datical project back into SCM because your changelog.xml file has changed.
				<ol><li>For example, "git commit ..." followed by "git push".</li></ol></li>
        </ol>
        <h2 id="HowTo:RemoveabandondedchangesfromDaticalandlowerenvironments-Relatedarticles">Related articles</h2>
        <ul>
            <li><a href="#">How To: Remove abandonded changes from Datical and lower environments</a>
            </li>
            <li><a href="remove-abandoned-changes.htm">How To: Abandon changes</a>
            </li>
            <li><a href="remove-abandoned-changes.htm">How To: Negate changes</a>
            </li>
            <li><a href="remove-abandoned-changes.htm">How To: Abandon a Single Changeset from a Script</a>
            </li>
            <li><a href="remove-abandoned-changes.htm">How To: Deploy Changes to a Specific Environment</a>
            </li>
        </ul>
    </body>
</html>