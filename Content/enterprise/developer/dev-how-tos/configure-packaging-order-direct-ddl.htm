<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title><MadCap:variable name="Heading.Level1" /> | Enterprise Docs</title>
        <meta rel="canonical" href="https://docs.liquibase.com/enterprise/developer/dev-how-tos/configure-packaging-order-direct-ddl.html" />
        <meta name="description" content="Learn how to configure packaging order with a ddl Folder set to DIRECT or DDL_DIRECT." />
    </head>
    <body>
        <h1>How To: Configure Packaging Order with ddl Folder Set to DIRECT or DDL_DIRECT</h1>
        <MadCap:snippetText src="../../../Z_Resources/Snippets/images/icon-enterprise-top.flsnp" />
        <MadCap:snippetBlock src="../../../Z_Resources/Snippets/enterprise/text/packaging-ddl-methods-7.15.flsnp" />
        <p>The <code>ddl</code> folder now has the option of setting the packageMethod to <code>CONVERT</code> (the default), or <code>DIRECT</code>, or <code>DDL_DIRECT</code>. (Note that DDL_DIRECT is only available in Liquibase Enterprise version 7.15 and higher).</p>
        <p>To change any folder to use a different packageMethod than its default, you can set the packageMethod property in the metadata.properties file for that folder.</p>
        <p>For Oracle if you change your <code>ddl</code> folder to packageMethod <code>DIRECT</code> or <code>DDL_DIRECT</code>, you can enable the SQL Parser for Oracle project setting for forecasting.</p>
        <p class="tip" MadCap:autonum="&lt;b&gt;Tip: &lt;/b&gt;">When switching the <code>ddl</code> folder from its default <code>CONVERT</code> package method to the <code>DIRECT</code> package method, the packaging order will be changed. When switching the <code>ddl</code> folder from the default <code>CONVERT</code> package method to the new <code>DDL_DIRECT</code> package method, the packaging order will be the same.</p>
        <h3>Additional Documentation</h3>
        <p>For more information, please see:</p>
        <ul>
            <li><a href="configure-packaging-order-direct-ddl.htm">Flexible Folder Names</a>
            </li>
            <li><a href="configure-packaging-order-direct-ddl.htm">Using the metadata.properties file</a>
            </li>
            <li><a href="configure-packaging-order-direct-ddl.htm">Using SQL Parser</a>
            </li>
            <li><a href="configure-packaging-order-direct-ddl.htm" rel="nofollow">https://datical-cs.atlassian.net/wiki/spaces/DDKB/pages/1130660057/How+To+Choose+Between+CONVERT+ddl+and+DIRECT+sql+direct+Packaging+Methods</a>
            </li>
        </ul>
        <h2>Ordering Examples</h2>
        <h3>Packaging Order with ddl folder set to CONVERT</h3>
        <p>If the <code>ddl</code> folder has packageMethod=<code>CONVERT</code> set in its metadata.properties file, the packaging order is:</p>
        <ol>
            <li>Commit order</li>
            <li>Folder order - <strong>ddl (convert)</strong>, view, function, procedure, package, packagebody, trigger, sql_direct, data_dml</li>
            <li>Filename within each folder</li>
        </ol>
        <h3>Packaging Order with ddl folder set to DDL_DIRECT</h3>
        <p>If the <code>ddl</code> folder has packageMethod=<code>DDL_DIRECT</code> (available with version 7.15 and higher), the packaging order is:</p>
        <ol>
            <li>Commit order</li>
            <li>Folder order - <strong>ddl (ddl_direct)</strong>, view, function, procedure, package, packagebody, trigger, sql_direct, data_dml</li>
            <li>Filename within each folder</li>
        </ol>
        <h3>Packaging Order with ddl folder set to DIRECT</h3>
        <p>If the <code>ddl</code> folder has packageMethod=<code>DIRECT</code> set in its metadata.properties file:</p>
        <ol>
            <li>Commit order</li>
            <li>Folder order - view, function, procedure, package, packagebody, trigger, <strong>ddl (direct)</strong>, sql_direct, data_dml</li>
            <li>Filename within each folder</li>
        </ol>
        <h2>Alternate Method</h2>
        <h3>Using Folder Order to Control Packaging Order</h3>
        <p>There is an alternate method to handle the ordering. You can use the custom <code>folderOrder</code> setting to control the packaging order by folder. However, using the <code>folderOrder</code> setting means that the commit time order would no longer be considered when determining the packaging order.</p>
        <h3>Instructions</h3>
        <ul>
            <li>Create a metadata.properties file in the parent folder (this folder is usually called <code>sql</code> or <code>sql_code</code> folder):</li>
        </ul><span class="confluence-embedded-file-wrapper image-center-wrapper"><img class="confluence-embedded-image image-center" loading="lazy" src="https://datical-cs.atlassian.net/wiki/download/attachments/2847014932/image-20210712-221658.png?version=1&amp;modificationDate=1626128220600&amp;cacheVersion=1&amp;api=v2" />
        <ul>
            <li>Add a <code>folderOrder</code> parameter to the metadata.properties file:</li>
        </ul><pre>folderOrder=ddl, view, function, procedure, package, packagebody, trigger, sql_direct, data_dml</pre>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">Commit order will not be taken into consideration with the <code>folderOrder</code> setting.</p>
        <h3>Packaging Order with <code>folderOrder</code> (set as above)</h3>
        <ol>
            <li>Folder order - <strong>ddl</strong>, view, function, procedure, package, packagebody, trigger, sql_direct, data_dml</li>
            <li>Filename within each folder</li>
        </ol>
        <h3>Additional Documentation</h3>
        <p>More about <code>folderOrder</code> and other packager ordering options: <a href="configure-packaging-order-direct-ddl.htm">Custom Packaging Order</a></p>
    </body>
</html>