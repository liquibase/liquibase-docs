<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <meta rel="canonical" href="https://docs.liquibase.com/enterprise/troubleshoot/non-elevated-sql-server" />
        <meta name="description" content="This page covers how to set database-level permissions without SQL Server privileges for packaging." />
    </head>
    <body>
        <h1>Non-elevated user for SQL Server</h1>
        <MadCap:snippetText src="../../Z_Resources/Snippets/images/icon-enterprise-top.flsnp" />
        <p><MadCap:variable name="General.LBEnterprise" />'s Deployment Packager for SQL Server requires elevated permissions as documented here:
			<a href="../devops/db-release-pipelines/sql-setup/roles-permissions-sql-server.htm" rel="nofollow">SQL Server Roles and Permissions for <MadCap:variable name="General.LBEnterprise" /></a>
		. These roles include:</p>
        <ul>
            <li>dbcreator - server-level permission</li>
            <li>db_backupoperator - database-level permission</li>
        </ul>
        <p>With the new approach, those permissions are no longer needed. Instead, following database-level permissions are needed:</p>
        <ul>
            <li>db_datareader</li>
            <li>db_datawriter</li>
            <li>db_ddladmin</li>
            <li>db_securityadmin</li>
            <li>VIEW ANY DATABASE</li>
        </ul>
        <p>This document discusses another approach that does not requires above-mentioned SQL Server privileges for packaging.</p>
        <h2>Overview</h2>
        <p>This approach leverages <MadCap:variable name="General.LBEnterprise" />'s baseline to capture the state of the database (establish baseline before you do anything else - this will populate changelog.xml with initial change sets). Then use custom backup/restore script that doesn't use the native SQL Server backup/restore mechanism (and require the associated privileges).</p>
        <p>This script, as part of restoring the database, performs drop of all objects to clean out the database. By configuring to use "on_demand" backup mode,&#160;Deployment Packager will use the changelog instead of the backup file to restore the database.</p>
        <h2>Requirements</h2>
        <p>This approach requires the following setup:</p>
        <ul>
            <li>The database must be baselined so that all objects in the database have a corresponding change set in <MadCap:variable name="General.LBEnterprise" />'s changelog. The baseline (change sets) serve as backup of the database from which databases will be rebuilt in case restore operation needs to be performed.</li>
            <li>Deployment Packager must be configured with <code>databaseBackupMode=on_demand</code></li>
            <li>Use the attached groovy script for custom backup/restore method.
                <ul><li>Groovy script: <a href="https://datical-cs.atlassian.net/wiki/download/attachments/826737010/BackupRestoreSqlServerNoBackupFile-v5.4.groovy?version=1&amp;modificationDate=1555940986232&amp;cacheVersion=1&amp;api=v2">BackupRestoreSqlServerNoBackupFile-v5.4.groovy</a>.
                        <ul><li>This script would need to be added to "extensions" directory, which requires additional property to be set in Deployment Packager configuration:&#160;<code>extensionsPath=C://apps//DaticalDB//repl//scripts//extensions</code></li></ul></li><li>As such, Deployment Packager must be configured with <code>databaseBackupRestoreMethod=BackupRestoreSqlServerNoBackupFile</code></li></ul></li>
        </ul>
        <h2>Step-by-Step</h2>
        <p>DBA:</p>
        <ol>
            <li>Create a REF DB. This could be a blank database or generated from PROD (with no data). F</li>
            <li>Setup permissions on REF database as follows:
                <ol><li><b>Non-elevated permisssions</b><pre>USE [EPOD_CMS_REF]
GO
EXEC sp_addrolemember N'db_ddladmin', N'datical_user'
GO
EXEC sp_addrolemember N'db_datareader', N'datical_user'
GO
EXEC sp_addrolemember N'db_datawriter', N'datical_user'
GO
EXEC sp_addrolemember N'db_securityadmin', N'datical_user'
GO
GRANT VIEW DATABASE STATE to [datical_user]
GO</pre></li></ol></li>
        </ol>
        <p><MadCap:variable name="General.LBEnterprise" /> SME:</p>
        <ol>
            <li>Save the groovy script (<a href="https://datical-cs.atlassian.net/wiki/download/attachments/826737010/BackupRestoreSqlServerNoBackupFile-v5.4.groovy?version=1&amp;modificationDate=1555940986232&amp;cacheVersion=1&amp;api=v2">BackupRestoreSqlServerNoBackupFile-v5.4.groovy</a>) to a path within Datical install directory, e.g.,&#160;<code>C://apps//DaticalDB//repl//scripts//extensions</code>.
                <ol><li>Rename the file to <code>BackupRestoreSqlServerNoBackupFile.groovy</code></li><li>The script performs the following operations:
                        <ol><li>Backup: No backup is taken. This is configured in Step 3 where Datical project is configured for "<code>on_demand</code>" backup mode.</li><li>Restore: Performs a drop of all objects by executing SQL code (built into the groovy script) and then restores/rebuilds the database from change sets in the Datical project.</li></ol></li></ol></li>
            <li>Provide a mechanism to build REF DB using one of the following two approaches:
                <ol><li>If the REF DB is already populated, then create a baseline of your REF database using the command: <code>hammer groovy project_baseline.groovy</code></li><li>If the REF DB is a blank database, then DBAs will need to provide a DDL script of all objects from production instance. This script will need to be added to <code>sql_direct/ref_only</code> folder containing custom metadata.properties file that mentions <code>contexts=REF_ONLY</code></li></ol></li>
            <li>Update deployPackager.properties with these new lines:
                <ol><li><code>databaseBackupMode=on_demand</code></li><li><code>databaseBackupRestoreMethod=BackupRestoreSqlServerNoBackupFile</code></li><li><code>extensionsPath=C://apps//DaticalDB//repl//scripts//extensions</code></li></ol></li>
            <li>Ensure that REF DB has context set to REF_ONLY. This will allow load script from sql_direct/REF_ONLY</li>
        </ol>
        <p>You are now configured with non-elevated use that can run Deployment Packager. Start packager your SQL scripts.</p>
        <h2>Expected Behavior</h2>
        <p><strong>For packaging scripts using CONVERT packaging method (ddl):</strong> Deployment Packager will always perform a restore operation. This will manifest as following intermediate deploy operation during packaging job:</p>
        <p><img class="confluence-embedded-image confluence-content-image-border" height="250" width="851" loading="lazy" src="https://datical-cs.atlassian.net/wiki/download/thumbnails/826737010/Screen%20Shot%202019-05-14%20at%207.51.17%20PM.png?version=1&amp;modificationDate=1557881687554&amp;cacheVersion=1&amp;api=v2&amp;width=851&amp;height=249" srcset="https://datical-cs.atlassian.net/wiki/download/thumbnails/826737010/Screen%20Shot%202019-05-14%20at%207.51.17%20PM.png?version=1&amp;modificationDate=1557881687554&amp;cacheVersion=1&amp;api=v2&amp;width=1702&amp;height=498 2x, https://datical-cs.atlassian.net/wiki/download/thumbnails/826737010/Screen%20Shot%202019-05-14%20at%207.51.17%20PM.png?version=1&amp;modificationDate=1557881687554&amp;cacheVersion=1&amp;api=v2&amp;width=851&amp;height=249 1x" />
        </p>
        <p><strong>For packaging scripts using STOREDLOGIC, DDL_DIRECT, DATA_DML, SQLFILE, or DIRECT packaging methods:</strong> Deployment Packager may not always perform a restore operation. The restore operation will only be invoked when a failure is encountered during the packaging job.</p>
    </body>
</html>