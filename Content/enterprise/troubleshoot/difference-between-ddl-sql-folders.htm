<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/enterprise/troubleshoot/difference-between-ddl-sql-folders" />
		<meta name="description" content="When using these packaging folders, the sql scripts are moved into the Archive folder near the end of a successful packaging job." />
    </head>
    <body>
        <h1>What is the difference between "ddl" and "sql_direct"/"ddl_direct" folders?</h1>
        <MadCap:snippetText src="../../Z_Resources/Snippets/images/icon-enterprise-top.flsnp" />
        <p>When using these packaging folders, the sql scripts are moved into the Archive folder near the end of a successful packaging job.</p>
        <p><strong>Scripts in "DDL":</strong>
        </p>
        <p>Each script in "ddl" directory (when using the "convert" packaging method that is the default for the ddl folder) goes through a process during packaging called "convert SQL". The output of the "convert SQL" is XML changeset that defines EVERY change of the object derived from a script. The benefit of "convert SQL" is that <MadCap:variable name="General.LBEnterprise" /> can forecast these changes during forecast operation. Here is what a "convert SQL" generated changeset would look like. Notice that we identify creation of the table along with each column in the table.</p><b>changelog.xml (ddl)</b><pre>  &lt;changeSet appdba:scriptChecksum="10465378bdaf34aa6c432f0971dff485" author="jenkins (generated)" context="REF1, DEV, TEST, PROD" created="2018-07-02 14:34+0000" datical:origFileName="createAAA_TESTA1_new.sql" datical:origFilePath="ddl/NGT" datical:version="1" datical:versionStrategy="DEPLOY_ALL" id="7opf-1 (createTable tableName=AAA_TESTA1)" labels="sid-9090, 22, ddl, createaaa_testa1_new.sql" objectQuotingStrategy="QUOTE_ALL_OBJECTS"&gt;    &lt;createTable schemaName="NGT" tableName="AAA_TESTA1"&gt;      &lt;column name="ID" type="NUMBER(*, 0)"/&gt;      &lt;column name="FIRST_NAME" type="VARCHAR2(50 BYTE)"/&gt;      &lt;column name="MIDDLE_NAME" type="VARCHAR2(50 BYTE)"/&gt;      &lt;column name="LAST_NAME" type="VARCHAR2(50 BYTE)"/&gt;      &lt;appdba:storageOptions dbms="oracle" path="ngt/storage/AAA_TESTA1_tbl_1530542040659.sql"/&gt;    &lt;/createTable&gt;  &lt;/changeSet&gt;</pre>
        <p><strong>Scripts in "SQL_DIRECT" or "DDL_DIRECT":</strong>
        </p>
        <p>On the other hand, scripts in "sql_direct" and "ddl_direct" folders (and scripts in any folders using the "direct" or "ddl_direct" packaging methods receive a very different treatment. <MadCap:variable name="General.LBEnterprise" /> does not perform "convert SQL" operation on these scripts and as such the XML changeset simply references the SQL script instead of exact changes to the database. The downside here is that <MadCap:variable name="General.LBEnterprise" /> is unable to forecast changes from scripts in "sql_direct" folder. Here is what a "sql_direct" generated changeset would look like. Notice that XML simply references the script (see 'path="sql/2018080814545272_createAAA_TESTA6.sql" ') which is available to the changelog.xml via "resources" folder of the <MadCap:variable name="General.LBEnterprise" /> project.</p><b>changelog.xml (sql_direct)</b><pre>  &lt;changeSet appdba:scriptChecksum="50be173164ac75b6500a2ff963636a67" author="Adeel Malik" context="REF1, DEV, TEST, PROD" created="2018-08-08 14:54+0000" datical:origFileName="createAAA_TESTA6.sql" datical:origFilePath="sql_direct/NGT" datical:version="1" datical:versionStrategy="DEPLOY_ALL" id="2018080814545272_createAAA_TESTA6" labels="58,$all,createAAA_TESTA6.sql"&gt;    &lt;appdba:sqlplus enableRollbackOnError="true" path="sql/2018080814545272_createAAA_TESTA6.sql" removeSpools="First" schemaName="NGT"/&gt;    &lt;comment&gt;script6&lt;/comment&gt;  &lt;/changeSet&gt;</pre>
        <p>Related topics:</p>
        <p><a href="../developer/dev-how-tos/choose-btw-packaging.htm">How To: Choose Between CONVERT (ddl) and DDL_DIRECT (ddl_direct) Packaging Methods</a>
        </p>
        <p><a href="../developer/write-sql-scripts/home.htm">Writing SQL Scripts for <MadCap:variable name="General.LBEnterprise" />
				#CONVERT/ddlfolderversusDIRECT/sql_directfolder</a>
        </p>
        <p><a href="../dba/package/package-sql-scripts-deployment/overview-packaging/home.htm">Overview of Packaging</a>
        </p>
        <p><a href="../dba/package/package-sql-scripts-deployment/place-files-scm-repo/fixed-folder-names.htm">Fixed Folder Names#ProcessingChanges</a>
        </p>
        <p><a href="../dba/package/package-sql-scripts-deployment/place-files-scm-repo/flexible-folder-names.htm">Flexible Folder Names#ComplexandInterdependentDatabaseChanges</a>
        </p>
    </body>
</html>