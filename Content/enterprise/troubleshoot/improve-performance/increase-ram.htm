<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
	<head><title><MadCap:variable name="Heading.Level1" /></title>
		<link rel="canonical" href="https://docs.liquibase.com/enterprise/troubleshoot/improve-performance/increase-ram" />
		<meta name="description" content="When the changelog becomes large or you attempt to package/deploy a large number of files simultaneously or have extra large DML files, you may encounter RAM limitations. You might see java heap errors or other out of memory errors." />
	</head>
    <body>
        <h1>Increase the amount of RAM used by <MadCap:variable name="General.LBEnterprise" /></h1>
        <MadCap:snippetText src="../../../Z_Resources/Snippets/images/icon-enterprise-top.flsnp" />
        <p>When the changelog becomes large or you attempt to package/deploy a large number of files simultaneously or have extra large DML files, you may encounter RAM limitations. You might see java heap errors or other out of memory errors.</p>
        <p>The default Xmx setting for <MadCap:variable name="General.LBEnterprise" /> is 2048m. If your machine has more than 4096m of RAM, you can increase the Xmx setting for RAM allocation as follows.</p>
        <h2>Desktop Client (Eclipse GUI)</h2>
        <p>For the desktop client/Eclipse GUI, you can increase the Xmx setting in your datical.ini file in your <MadCap:variable name="General.LBEnterprise" /> installation directory:</p>
        <p>In <code>&lt;datical-install&gt;/datical.ini</code>, change line <strong>-Xmx2048m</strong> to -<strong>Xmx4096m</strong> or higher.</p>
        <h2>Command Line (CLI)</h2>
        <p>There are two methods of changing the Xmx setting for the CLI. The first method using a command line option is usually preferred, because the command line option will persist no matter which version of <MadCap:variable name="General.LBEnterprise" /> you are running. The second method of modifying Xmx in the bat or ini can be less desirable because you would need to edit the file again after each time you upgrade to a new <MadCap:variable name="General.LBEnterprise" /> version. You can use whichever method better fits with your process or automation tools:</p>
        <h3>1. Command Line Option (recommended method)</h3>
        <p>When running a command, add the<strong> --vmargs -Xmx<em>NNNN</em>m</strong> option to increase the RAM available. This method will persist after you upgrade to a new version of <MadCap:variable name="General.LBEnterprise" />. For example:</p><pre >hammer groovy deployPackager.groovy pipeline=&lt;pipeline&gt; scm=true --vmargs -Xmx4096m</pre><pre>hammer deploy &lt;dbDef&gt; --vmargs -Xmx4096m</pre>
        <h3>2. Editing .bat or .ini (alternate method)</h3>
        <p>Note that you would need to edit the file again after each time you upgrade to a new version of <MadCap:variable name="General.LBEnterprise" />. The instructions are different for Windows versus Linux:</p>
        <h4>Linux edit hammer-bin.ini</h4>
        <p>For Linux systems: In <code>&lt;datical-install&gt;/repl/hammer-bin.ini</code>, change line <strong>-Xmx2048m</strong> to -<strong>Xmx4096m</strong> or higher.</p>
        <h4>Windows edit hammer.bat</h4>
        <p>For Windows systems: In <code>&lt;datical-install&gt;/repl/hammer.bat</code>, change the <code>set __cmd</code> line to include RAM allocation in an -<strong>Xmx<em>NNNN</em>m</strong> option. Example:</p><pre>set __cmd="%JAVA_EXEC%" %VMARGS% -Xmx4096m -jar "%INSTALL_DIR%plugins/org.eclipse.equinox.launcher_1.2.0.v20110502.jar" %*</pre>
    </body>
</html>