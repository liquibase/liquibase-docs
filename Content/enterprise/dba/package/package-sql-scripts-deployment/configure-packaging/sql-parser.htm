<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title><MadCap:variable name="Heading.Level1" /> | Enterprise Docs</title>
        <meta rel="canonical" href="https://docs.liquibase.com/enterprise/dba/package/package-sql-scripts-deployment/configure-packaging/sql-parser.html" />
        <meta name="description" content="SQL Parser allows you to benefit from rules and forecast capabilities for Oracle SQL Scripts that are being packaged through the DIRECT, DDL_DIRECT, or SQLFILE package methods." />
    </head>
    <body>
        <h1>SQL Parser</h1>
        <MadCap:snippetBlock src="../../../../../Z_Resources/Snippets/images/icon-enterprise-top.flsnp" />
        <p>SQL Parser allows you to benefit from rules and forecast capabilities for Oracle SQL Scripts that are being packaged through the DIRECT, <span style="color: rgb(0,51,102);">DDL_DIRECT, or SQLFILE package methods.</p>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">Currently, the SQL Parser&#160;only supports Oracle SQL scripts.</p>
        <h2>Properties of the SQL Parser</h2>
        <ul>
            <li>SQL Parser only applies to changes that are:<ul><li>Packaged using the DIRECT, <span style="color: rgb(0,51,102);">DDL_DIRECT, or SQLFILE method</li><li>Created in the ChangeSet Wizard as 'Execute a SQL script file using JDBC'/'Custom SQL (External File)'. NOTE: Changes created as 'Custom SQL' will NOT be processed by SQL Parser.</li><li>Created in the ChangeSet Wizard as 'Execute with SQLPlus'</li></ul></li>
            <li>SQL Parser does not change how these scripts are ultimately executed during a Deploy operation. The following package methods all result in execution of a SQL script:<ul><li>DIRECT packaging method</li><li><span style="color: rgb(0,51,102);">DDL_DIRECT packaging method</li><li>SQLFILE packaging method</li><li>changes created as 'Execute a SQL script file using JDBC'/'Custom SQL (External File)'</li><li>changes created as 'Execute with SQLPlus'</li></ul></li>
            <li>SQL Parser does not validate SQL statements. Instead, SQL Parser simply parses provided SQL scripts and models them into Datical's object model for subsequent validation with rules and forecast.<ul><li>In the event the SQL Parser is unable to parse a statement that is included in a provided SQL script:<ul><li>The Forecast Report will include a warning for the statement(s) that cannot be parsed. The warning will read: "WARNING - Will not be forecast"</li><li>SQL Parser will continue parsing the provided SQL script and attempt to parse all other statements</li></ul></li><li>In the event the SQL Parser is unable to parse the provided SQL script file or otherwise encounters an error:<ul><li>The Forecast Report will include a warning that will read: `SQL Parser could not parse sql script file &lt;script&gt;`</li></ul></li></ul></li>
            <li>We recommend that you do <em>not</em> put large DML scripts with many insert or update statements in folders that have SQL Parser enabled.&#160;<ul><li>See&#160;<a href="../../../../troubleshoot/improve-performance/recommendations-large-dml-scripts.htm" rel="nofollow">Recommendations for Working with Large DML Scripts (SQL Parser forecasting)</a></li></ul></li>
        </ul>
        <div class="confluence-information-macro confluence-information-macro-warning conf-macro output-block">
            <div class="confluence-information-macro-body">
                <p>In rare cases, the SQL Parser may incorrectly model a statement found in a provided SQL script, which may lead to erroneous rules and forecast violations (or the erroneous lack thereof). If you encounter such behavior, please contact our Technical Support team so that the matter may be addressed.</p>
            </div>
        </div>
        <h2>Configuring Projects to Use SQL Parser</h2>
        <p>SQL Parser is a global setting that applies to the entire project. As a global setting, there is no way to selectively enable SQL Parser. Instead, SQL Parser can be selectively disabled for specific folders after the global setting has been enabled. To enable the SQL Parser:</p>
        <ul>
            <li>
                <p>There were fixes and improvements to SQL Parser for Oracle in Liquibase Enterprise/Datical DB version 7.12. Please upgrade to version 7.12 or higher if you are using SQL Parser.</p>
            </li>
            <li>
                <p>In the GUI, navigate to the <strong>Deployment Settings</strong> section of the project settings (<strong>Settings</strong> tab), then check the checkbox next to '<strong>Enable Parser</strong>'. NOTE: As a project-level setting, checking the checkbox for '<strong>Enable Parser</strong>' will enable SQL Parser globally for the entire project.<br /><br />The setting is represented in the&#160;&#160;<code>datical.project</code> file by <code>enableSqlParser=true.</code></p>
                <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
                    <div class="codeContent panelContent pdl"><pre>enableSqlParser=[true | false]</pre>
                    </div>
                </div>
            </li>
        </ul>
        <h2>Disabling SQL Parser</h2>
        <p>You can selectively disable the SQL Parser after it has been enabled, either at the folder level or on the change set level.</p>
        <h3>At the Folder level</h3>
        <p>You can disable SQL Parser at the folder level either temporarily or permanently in the metadata.properties file for that folder:</p>
        <p>Set <code>disableSqlParser=true&#160;</code>in the <code><a href="metadata-properties.htm" rel="nofollow">metadata.properties</a></code> file for any folders that you do not want SQL Parser to process.</p>
        <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
            <div class="codeContent panelContent pdl"><pre>disableSqlParser=[true | false]</pre>
            </div>
        </div>
        <h3>At the Change Set level</h3>
        <p>You can disable SQL Parser for a specific change set by manually editing the changelog.xml to add disableSqlParser="true":</p>
        <p>Add&#160;<code>disableSqlParser=true&#160;</code>in the <code>appdba:sqlplus</code>&#160;section of the change set for a specific change set you do not want SQL Parser to process.</p>
        <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
            <div class="codeContent panelContent pdl"><pre>&lt;changeSet appdba:scriptChecksum="9f8a11051d1478faf2752baacb76cf0e" author="J Doe" created="2020-08-10 18:37+0000" datical:origFileName="adding_test_new_001.sql" datical:origFilePath="scripts/sql_direct" datical:version="1" datical:versionStrategy="DEPLOY_ALL" id="20200810183704986_adding_test_new_001" labels="509,deploy-test1,deploy-test1,adding_test_new_001.sql"&gt;    &lt;appdba:sqlplus disableSqlParser="true" enableRollbackOnError="true" path="sql/20200810183704986_adding_test_new_001.sql" removeSpools="First" schemaName="SCHEMA1"/&gt;    &lt;comment&gt;Test script&lt;/comment&gt;</pre>
            </div>
        </div>
        <h3>Procedures for SQL Parser to work around Forecast failures</h3>
        <p>If a Forecast fails for a script, you may be able to temporarily turn off SQL Parser to work around it. Determine which script caused the failure first (Forecast Report). See which directory the script with the forecast failure is in (such as <code>sql_direct or sql or ddl_direct folder</code>).</p>
        <p>To work around the problem, turn off SQL Parser&#160;&#160;<em>temporarily</em> using <code>disableSqlParser=true</code>&#160;in <code><a href="metadata-properties.htm" rel="nofollow">metadata.properties</a></code>&#160;for the folder where the script failed, and then run deployPackager again.</p>
        <p><strong>IMPORTANT:</strong> You should reset <code>disableSqlParser=false</code>&#160;in <code>metadata.properties</code> after the script is packaged successfully.</p>
        <p>If you have a directory hierarchy for SQL scripts remember that <code><a href="metadata-properties.htm" rel="nofollow">metadata.properties</a></code>&#160;affects the directory it is in and all subdirectories. Set the property in the directory that is most local to the script that causes the packaging error. The directory hierarchy root is as follows:</p>
        <ul>
            <li>For fixed folders, the<code><span style="color: rgb(0,51,102);">ddl_direct,&#160;</code><code>sql_direct,&#160;</code>or&#160;<code>sql</code> folder</li>
            <li>For flexible folders, the highest directory that has the&#160;<code><span style="color: rgb(0,51,102);">packageMethod=DDL_DIRECT,&#160;</code><code>packageMethod=DIRECT, or packageMethod=SQLFILE&#160;</code></li>
        </ul>
        <p>Follow this procedure after you encounter the Forecast failure and identify the script causing the problem:</p>
        <ol>
            <li>Go to the directory that contains the script that causes the problem (such as the&#160;<code><span style="color: rgb(0,51,102);">ddl_direct,</code>  &#160;<code>sql_direct,</code>&#160;or&#160;<code>sql</code>&#160;folder).</li>
            <li>Set <code>disableSqlParser=true</code> in the <code>metadata.properties</code> file (create the file if it does not exist). Check it in.</li>
            <li>Run Deployment Packager again.</li>
            <li>Check that the file is packaged successfully.</li>
            <li>Set <code>disableSqlParser=false</code> in the <code>metadata.properties</code> file. Check it in.</li>
        </ol>
        <p>If the reason for the Forecast failure was that a statement earlier in the script was unable to be forecast and a statement later in the script depended on it, there may be a different work around possibility. If it is appropriate for this type of script, you may consider splitting the single script into multiple smaller scripts so the statement with the forecast failure is in a separate script from the other statements that depend on it.</p>
        <div class="confluence-information-macro confluence-information-macro-information conf-macro output-block">
            <div class="confluence-information-macro-body">
                <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">If a script is packaged into changesets with parser turned off, the changesets carry that setting forward as they are deployed to later steps in the pipeline.</p>
            </div>
        </div>
        <p>See&#160;<a href="metadata-properties.htm">Using the metadata.properties file</a>.&#160;<br /></p>
        <h2 class="auto-cursor-target" id="UsingSQLParser-ChangesetWizardandSQLParser">Changeset Wizard and SQL Parser</h2>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">Selectively disabling the SQL Parser using the <code>metadata.properties</code>&#160;file will only apply when packaging changes using the Packager. Selectively disabling the SQL Parser is not available with the ChangeSet Wizard.</p>
        <h2>Additional Files Produced</h2>
        <p>When SQL parsing is enabled, a file is produced after any of the following operations:</p>
        <ul>
            <li>Package</li>
            <li>Forecast</li>
            <li>Deploy</li>
        </ul>
        <p>The file contains the modeled changes produced by the SQL Parser. It can be used for debugging. The produced file&#160;is stored in the project in the following directory:</p>
        <p><code>Reports/&lt;year&gt;/&lt;date&gt;/&lt;dbdef&gt;/[forecast | deploy]/parser_output/&lt;filename&gt;_&lt;timestamp&gt;.xml</code>
        </p>
        <h2>Supported Databases</h2>
        <p>Using SQL Parser is available only for the following databases. See each section for additional information about object support and limitations.</p>
        <ul>
            <li>Oracle Database</li>
        </ul>
        <h2>Limitations of SQL Parser</h2>
        <h3>Syntax and Modeling Limitations:</h3>
        <ul>
            <li>
                <p>SQL Parser requires statement blocks to be separated by a forward slash&#160;"/". Expand for examples:</p>
                <div class="expand-container conf-macro output-block" id="expander-200477603">
                    <div id="expander-control-200477603" class="expand-control"><span class="expand-control-text">Click here to expand...
                    </div>
                    <div id="expander-content-200477603" class="expand-content expand-hidden">
                        <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
                            <div class="codeHeader panelHeader pdl" style="border-bottom-width: 1px;"><b>Single Block</b>
                            </div>
                            <div class="codeContent panelContent pdl"><pre>CREATE OR REPLACE PACKAGE
test_methods
IS
...
END test_methods;
CREATE OR REPLACE PACKAGE emp_mgmt AS 
...
END emp_mgmt; 
/ </pre>
                            </div>
                        </div>
                        <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
                            <div class="codeHeader panelHeader pdl" style="border-bottom-width: 1px;"><b>Multiple Blocks</b>
                            </div>
                            <div class="codeContent panelContent pdl"><pre>CREATE OR REPLACE PACKAGE
test_methods
IS
...
END test_methods;
/
CREATE OR REPLACE PACKAGE emp_mgmt AS 
...
END emp_mgmt; 
/ </pre>
                            </div>
                        </div>
                    </div>
                </div>
            </li>
            <li>
                <p>For constraints that require a unique index (such as addPrimaryKey or addUniqueConstraint), the SQL Parser does not model creating a unique index. Expand for example:</p>
                <div class="expand-container conf-macro output-block" id="expander-1783250839">
                    <div id="expander-control-1783250839" class="expand-control"><span class="expand-control-text">Click here to expand...
                    </div>
                    <div id="expander-content-1783250839" class="expand-content expand-hidden">
                        <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
                            <div class="codeHeader panelHeader pdl" style="border-bottom-width: 1px;"><b>Sample SQL Statement</b>
                            </div>
                            <div class="codeContent panelContent pdl"><pre>ALTER TABLE SCHEMA1.COUNTRIES 
  ADD CONSTRAINT COUNTRY_C_ID_PK PRIMARY KEY ( COUNTRY_ID ) ;</pre>
                            </div>
                        </div>
                        <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
                            <div class="codeHeader panelHeader pdl" style="border-bottom-width: 1px;"><b>SQL Parser Model (internal)</b>
                            </div>
                            <div class="codeContent panelContent pdl"><pre>&lt;addPrimaryKey columnNames="COUNTRY_ID" constraintName="COUNTRY_C_ID_PK" schemaName="SCHEMA1" tableName="COUNTRIES"/&gt;</pre>
                            </div>
                        </div>
                        <p>In this example, it might be the case that the unique index "COUNTRY_C_ID_PKX" had to be first created in schema "SCHEMA1" in table "COUNTRIES" before the primary key can be added. The limitation is that the unique index creation is not modeled by SQL Parser because that cannot be determined without first interacting with the target database and finding out whether the unique index already exists or not.</p>
                        <p>Same goes to the statements with&#160;<code>USING INDEX</code> with index name following it.</p>
                        <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
                            <div class="codeHeader panelHeader pdl" style="border-bottom-width: 1px;"><b>Sample SQL Statement</b>
                            </div>
                            <div class="codeContent panelContent pdl"><pre>ALTER TABLE "MYSCHEMA"."AWESOME_TABLE" ADD CONSTRAINT "AWESOME_TABLE_PK1" PRIMARY KEY ("AWESOME_TABLE_ID")
USING INDEX MY_NEW_IDX TABLESPACE TS1;</pre>
                            </div>
                        </div>
                        <p>is modeled to</p>
                        <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
                            <div class="codeHeader panelHeader pdl" style="border-bottom-width: 1px;"><b>SQL Parser Model (internal)</b>
                            </div>
                            <div class="codeContent panelContent pdl"><pre>&lt;addPrimaryKey columnNames="AWESOME_TABLE_ID" constraintName="AWESOME_TABLE_PK1" forIndexName="MY_NEW_IDX" schemaName="MYSCHEMA" tableName="AWESOME_TABLE" tablespace="TS1"/&gt;</pre>
                            </div>
                        </div>
                        <div class="confluence-information-macro confluence-information-macro-note conf-macro output-block">
                            <div class="confluence-information-macro-body">
                                <p>In this same example, if the statement makes explicit use of the <code>USING INDEX</code>  &#160;<strong>without</strong>&#160;the name of the index then the SQL Parser will model the index creation as well as the primary key.</p>
                                <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
                                    <div class="codeHeader panelHeader pdl" style="border-bottom-width: 1px;"><b>Sample SQL Statement</b>
                                    </div>
                                    <div class="codeContent panelContent pdl"><pre>ALTER TABLE "MYSCHEMA"."AWESOME_TABLE" ADD CONSTRAINT "AWESOME_TABLE_PK1" PRIMARY KEY ("AWESOME_TABLE_ID")
USING INDEX TABLESPACE TS1;</pre>
                                    </div>
                                </div>
                                <p>is modeled to</p>
                                <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
                                    <div class="codeHeader panelHeader pdl" style="border-bottom-width: 1px;"><b>SQL Parser Model (internal)</b>
                                    </div>
                                    <div class="codeContent panelContent pdl"><pre>&lt;createIndex indexName="AWESOME_TABLE_PK1" schemaName="MYSCHEMA" unique="true"&gt;&lt;column name="AWESOME_TABLE_ID"/&gt;&lt;appdba:storageOptions dbms="oracle"&gt;TABLESPACE TS1&lt;/appdba:storageOptions&gt;&lt;/createIndex&gt;&lt;addPrimaryKey columnNames="AWESOME_TABLE_ID" constraintName="AWESOME_TABLE_PK1" forIndexName="AWESOME_TABLE_PK1" forIndexSchemaName="MYSCHEMA" schemaName="MYSCHEMA" tableName="AWESOME_TABLE"/&gt;</pre>
                                    </div>
                                </div>
                                <p>
                                    <br />
                                </p>
                                <p>The exception to this is when the&#160;<code>USING INDEX</code> has a&#160;<code>CREATE INDEX</code> statement inline. These statements will NOT be modeled by SQL Parser and may cause Forecast errors as a result.</p>
                                <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
                                    <div class="codeHeader panelHeader pdl" style="border-bottom-width: 1px;"><b>Sample SQL Statement</b>
                                    </div>
                                    <div class="codeContent panelContent pdl"><pre>ALTER TABLE "MYSCHEMA"."AWESOME_TABLE" ADD CONSTRAINT "AWESOME_TABLE_PK1" PRIMARY KEY ("AWESOME_TABLE_ID")
USING INDEX (CREATE UNIQUE INDEX "MYSCHEMA"."AWESOME_TABLE_PK1" ON "MYSCHEMA"."AWESOME_TABLE" ("AWESOME_TABLE_ID")
TABLESPACE "SOME_TABLESPACE") ENABLE;</pre>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </li>
        </ul>
        <h2 id="UsingSQLParser-SQLStatementsNotModeled">SQL Statements Not Modeled</h2>
        <p>The following statements will not be modeled by the SQL Parser and will instead just be run as provided. Note that this list is applicable for Datical DB versions 6.15 and higher. (The list for Datical DB versions 6.14 and lower was somewhat different.)</p>
        <ul>
            <li>Anonymous SQL Block (BEGIN ... END)</li>
            <li>ALTER TABLE ENABLE CONSTRAINT</li>
            <li>ALTER TABLE DISABLE CONSTRAINT</li>
            <li>ALTER TABLE MODIFY PRIMARY KEY</li>
            <li>ALTER TABLE with inline create index statement after USING INDEX<br /><ul><li>This is illustrated in the Syntax and Modeling Limitations section</li></ul></li>
            <li>ALTER CLUSTER</li>
            <li>ALTER DATABASE</li>
            <li>ALTER DIMENSION</li>
            <li>ALTER DISKGROUP</li>
            <li>ALTER FLASHBACK ARCHIVE</li>
            <li>ALTER FUNCTION</li>
            <li>ALTER INDEXTYPE</li>
            <li>ALTER JAVA</li>
            <li>ALTER MATERIALIZED VIEW</li>
            <li>ALTER MATERIALIZED VIEW LOG</li>
            <li>ALTER OPERATOR</li>
            <li>ALTER OUTLINE</li>
            <li>ALTER PACKAGE</li>
            <li>ALTER PROFILE</li>
            <li>ALTER RESOURCE COST</li>
            <li>ALTER ROLE</li>
            <li>ALTER ROLLBACK SEGMENT</li>
            <li>ALTER TRIGGER</li>
            <li>ALTER SYSTEM</li>
            <li>ALTER TABLESPACE</li>
            <li>ALTER USER</li>
            <li>ALTER VIEW</li>
            <li>ANALYZE</li>
            <li>ASSOCIATE STATISTICS</li>
            <li>AUDIT</li>
            <li>CALL</li>
            <li>COMMIT</li>
            <li>CREATE CLUSTER</li>
            <li>CREATE CONTEXT</li>
            <li>CREATE CONTROLFILE</li>
            <li>CREATE DATABASE</li>
            <li>CREATE DATABASE LINK</li>
            <li>CREATE DIMENSION</li>
            <li>CREATE DIRECTORY</li>
            <li>CREATE DISKGROUP</li>
            <li>CREATE FLASHBACK ARCHIVE</li>
            <li>CREATE INDEXTYPE</li>
            <li>CREATE LIBRARY</li>
            <li>CREATE MATERIALIZED VIEW LOG</li>
            <li>CREATE OPERATOR</li>
            <li>CREATE OUTLINE</li>
            <li>CREATE PACKAGE</li>
            <li>CREATE PACKAGE BODY</li>
            <li>CREATE PFILE</li>
            <li>CREATE PROFILE</li>
            <li>CREATE RESTORE POINT</li>
            <li>CREATE ROLLBACK SEGMENT</li>
            <li>CREATE SCHEMA</li>
            <li>CREATE SPFILE</li>
            <li>CREATE TABLE of XMLTYPE</li>
            <li>CREATE TABLESPACE</li>
            <li>CREATE TYPE</li>
            <li>CREATE TYPE BODY</li>
            <li>CREATE USER</li>
            <li>DISASSOCIATE STATISTICS</li>
            <li>DROP CLUSTER</li>
            <li>DROP CONTEXT</li>
            <li>DROP DATABASE</li>
            <li>DROP DATABASE LINK</li>
            <li>DROP DIMENSION</li>
            <li>DROP DIRECTORY</li>
            <li>DROP DISKGROUP</li>
            <li>DROP FLASHBACK ARCHIVE</li>
            <li>DROP INDEXTYPE</li>
            <li>DROP JAVA</li>
            <li>DROP LIBRARY</li>
            <li>DROP MATERIALIZED VIEW LOG</li>
            <li>DROP OPERATOR</li>
            <li>DROP OUTLINE</li>
            <li>DROP PACKAGE</li>
            <li>DROP PACKAGE BODY</li>
            <li>DROP PROFILE</li>
            <li>DROP RESTORE POINT</li>
            <li>DROP ROLE</li>
            <li>DROP ROLLBACK SEGMENT</li>
            <li>DROP TABLESPACE</li>
            <li>DROP TYPE</li>
            <li>DROP TYPE BODY</li>
            <li>DROP USER</li>
            <li>EXPLAIN PLAN</li>
            <li>FLASHBACK DATABASE</li>
            <li>FLASHBACK TABLE</li>
            <li>GRANT</li>
            <li>INSERT</li>
            <li>LOCK TABLE</li>
            <li>MERGE</li>
            <li>NOAUDIT</li>
            <li>PURGE</li>
            <li>RENAME without object type (ambiguous Table, View, Sequence, Private Synonym)</li>
            <li>REVOKE</li>
            <li>ROLLBACK</li>
            <li>SAVEPOINT</li>
            <li>SELECT</li>
            <li>SET CONSTRAINT</li>
            <li>SET CONSTRAINTS</li>
            <li>SET ROLE</li>
            <li>SET TRANSACTION</li>
            <li>TRUNCATE CLUSTER</li>
            <li>TRUNCATE TABLE</li>
            <li>UPDATE</li>
        </ul>
        <h2 id="UsingSQLParser-SQLStatementstoAvoid">SQL Statements to Avoid</h2>
        <p>Do not use SQL Parser with the following statements.</p>
        <ul>
            <li>CREATE JAVA - produces unpredictable results, including incorrect forecasts and forecast failure</li>
        </ul>
        <p>
            <br />
        </p>
        <p>
            <br />
        </p>
        <p>
            <br />
        </p>
    </body>
</html>