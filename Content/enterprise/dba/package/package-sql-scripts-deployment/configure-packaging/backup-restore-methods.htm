<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <meta rel="canonical" href="https://docs.liquibase.com/enterprise/dba/package/package-sql-scripts-deployment/configure-packaging/backup-restore-methods.html" />
        <meta name="description" content="During packaging, the REF database is backed up and restored. Deployment Packager uses common backup and restore operations supported by each database." />
    </head>
    <body>
        <h1>Custom Backup and Restore Methods</h1>
        <MadCap:snippetBlock src="../../../../../Z_Resources/Snippets/images/icon-enterprise-top.flsnp" />
        <p>During packaging, the REF database is backed up and restored. Deployment Packager uses common backup and restore operations supported by each database.</p>
        <p>To use another method, you can write a custom backup and restore class in a Groovy script and configure Deployment Packager use it.</p>
        <h2>Overview</h2>
        <p>To implement a custom backup and restore class, do the following:</p>
        <ol>
            <li>
                <p>Write the class - Use the provided sample scripts as a starting point and write a custom script. In the script, write a class with methods for backup and restore. Place it in the default location or a custom location.</p>
                <div class="confluence-information-macro confluence-information-macro-information conf-macro output-block">
                    <p class="title">Note</p>
                    <div class="confluence-information-macro-body">
                        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">The Groovy script name and the class name should use the same name. Use the naming convention <code>BackupRestore&lt;dbname&gt;&lt;name&gt;.&#160;</code></p>
                        <p class="example" MadCap:autonum="&lt;b&gt;Example: &lt;/b&gt;"><code>BackupRestoreOracleCustom.groovy</code> should contain class <code>BackupRestoreOracleCustom</code>.</p>
                    </div>
                </div>
            </li>
            <li>Test the class - Use the provided test script to test the custom script outside of Deployment Packager.</li>
            <li>Configure Deployment Packager - Use new properties in <code>deployPackager.properties</code> to have Deployment Packager use the custom script.&#160;<ul><li style="margin-left: 0.0px;"><code>databaseBackupRestoreMethod</code></li><li style="margin-left: 0.0px;"><code>extensionsPath</code></li></ul></li>
            <li>Test the class again. Run Deployment Packager manually with test scripts.</li>
        </ol>
        <h2>Writing a Custom Script</h2>
        <p>To provide a custom backup and restore method to use, do the following:</p>
        <ol>
            <li>Implement a custom class inside a groovy script. Two example scripts are provided:<ul><li style="margin-left: 0.0px;"><code>BackupRestoreOracleCustom.groovy</code> - This script is a copy of the default backup and restore script that Deployment Packager uses for Oracle. It uses Oracle's&#160;<code>expdp</code> and <code>impdp</code> command-line tools.</li><li style="margin-left: 0.0px;"><code>BackupRestoreCustomStub.groovy</code> - A mostly-empty stub script with comments. It runs successfully in the test script but performs no actions.</li></ul></li>
            <li>Place the groovy script where you want it.<ul><li style="margin-left: 0.0px;">The default location for custom scripts is&#160;<code>&lt;datical-install&gt;/repl/scripts/extensions</code>.</li><li style="margin-left: 0.0px;"><span style="color: rgb(0,0,10);">If you place the custom script in another location, you&#160;<span style="color: rgb(0,0,10);">can set the property&#160;<span style="color: rgb(23,43,77);"><code>extensionsPath </code>in <code>deployPackager.properties</code>&#160;</li></ul></li>
        </ol>
        <h2>Testing a Custom Script</h2>
        <p>Use the provided test script to test your custom script without running Deployment Packager.</p>
        <p style="margin-left: 30.0px;"><code>&lt;datical-install&gt;/repl/scripts/database_backup_restore.groovy</code>
        </p>
        <p>To get help on the script, run it without any arguments.</p>
        <p>Specify a DbDef (for the database to work on) plus any other arguments that you have implemented.</p>
        <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
            <div class="codeContent panelContent pdl"><pre>hammer groovy database_backup_restore.groovy &lt;dbdef&gt; [backup | restore]</pre>
            </div>
        </div>
        <h3>Backup Test</h3>
        <p>The backup test follows these steps:</p>
        <ol>
            <li>Checks the settings&#160;<code>database</code><code>backupRestoreMethod</code>and<code>databaseBackupRestoreLocation</code>.</li>
            <li>Checks the DbDef</li>
            <li>Runs a backup and reports status (success, failure)</li>
            <li>Reports final status (success, failure)</li>
        </ol>
        <h3>Restore Test</h3>
        <p>The restore test requires a prior backup. It follows these steps:</p>
        <ol>
            <li>Checks the settings&#160;<code>database</code><code>backupRestoreMethod</code>and<code>databaseBackupRestoreLocation</code>.</li>
            <li>Checks the DbDef</li>
            <li>Runs a restore and reports status (success, failure)</li>
            <li>Reports final status (success, failure)</li>
        </ol>
        <h3>Customizing the Test Script</h3>
        <p>Copy and edit the provided test script. Add other tests to the script as you need.</p>
        <h2>Configuring Deployment Packager</h2>
        <p>See&#160;<a href="required-deploy-packager-properties.htm">Using the Required deployPackager.properties File</a>.</p>
        <p>Add properties to&#160;<code>&lt;project&gt;/deployPackager.properties</code>:</p>
        <ul>
            <li>
                <p>&#160;<code>databaseBackupRestoreMethod&#160;</code>- Required. The name of the custom class. It should match the Groovy script name (without the <code>.groovy</code> extension).</p>
                <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
                    <div class="codeContent panelContent pdl"><pre>databaseBackupRestoreMethod=BackupRestoreOracleMyCustom</pre>
                    </div>
                </div>
            </li>
            <li>
                <p><span style="color: rgb(0,0,10);"><code><span style="color: rgb(0,0,10);">extensionsPath&#160;</code>- Optional. If you place the custom Groovy script in a location other than the default &#160;<code>&lt;datical-install&gt;/repl/scripts/extensions</code>, then set this property.</p>
                <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
                    <div class="codeContent panelContent pdl"><pre>extensionsPath=C:\\Datical\\DaticalDB\\DaticalCustomExtensions</pre>
                    </div>
                </div>
            </li>
        </ul>
        <h2>Example Scripts</h2>
        <p>Example scripts are provided in&#160;<code><span style="color: rgb(0,0,10);">&lt;datical-install&gt;/repl/scripts/extensions</code></p>
        <ul>
            <li><span style="color: rgb(0,0,10);"><code>BackupRestoreCustomStub.groovy</code> is a stub that can be used as a starting point for a custom backup restore implementation. 
            </li>
            <li><span style="color: rgb(0,0,10);"><code>BackupRestoreOracleCustom.groovy</code> is an example of a working implementation.
            </li>
        </ul>
        <p>
            <br />
        </p>
    </body>
</html>