<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title><MadCap:variable name="Heading.Level1" /> | Enterprise Docs</title>
        <meta rel="canonical" href="https://docs.liquibase.com/enterprise/devops/best-practices/commit-svn.html" />
        <meta name="description" content="This page covers how to create the intial Enterprise Project commit into Subversion, or SVN." />
    </head>
    <body>
        <h1>Initial Commit of a <MadCap:variable name="General.LBEnterprise" /> Project into Subversion (SVN)</h1>
        <MadCap:snippetText src="../../../Z_Resources/Snippets/images/icon-enterprise-top.flsnp" />
        <p>The following document will help you commit your new <MadCap:variable name="General.LBEnterprise" /> project into a Subversion repository</p>
        <h2 id="ImplementationGuide:InitialCommitofDaticalDBProjectintoSubversion(SVN)-Prerequisites">Prerequisites</h2>
        <ol>
            <li>Setup a new Subversion repository. Initially, this will be an empty repository</li>
            <li>On the SVN server run the following command to ensure you run repos in v. 1.6 or earlier format (if not, you will get a packager error complaining about SVN format not being the expected range between 1-6):
				<pre>svnadmin create --pre-1.6-compatible &lt;FULL_PATH_AND_REPO_NAME&gt;</pre></li>
        </ol>
        <h2 id="ImplementationGuide:InitialCommitofDaticalDBProjectintoSubversion(SVN)-Steps:">Steps:</h2>
        <ol>
            <li>Using Terminal window (in Linux) or Command Line (in Windows), change to existing <MadCap:variable name="General.LBEnterprise" /> project directory:
				<ol><li><pre>cd &lt;existing_DaticalDB_project_directory&gt;</pre></li></ol></li>
            <li>Checkout local repository using command line.
				<ol><li><pre>svn checkout &lt;URL_FOR_SVN_REPO&gt;</pre></li></ol></li>
            <li>
                <p>We need to make sure to ignore a few files from going into SVN. These include log files, reports, etc. which are generated as part of running Forecast or Deploy operations in <MadCap:variable name="General.LBEnterprise" />. Use <a href="../configure-scm-repos/subversion-svn/add-project-subversion.htm">Implementation Guide: Create subversion ignore list In <MadCap:variable name="General.LBEnterprise" /> Project Directory</a>.</p>
            </li>
            <li>In <MadCap:variable name="General.LBEnterprise" /> GUI, <strong>right-click</strong> on the <MadCap:variable name="General.LBEnterprise" /> project → <strong>Team</strong> → <strong>Share Project</strong></li>
            <li>Select "SVN<strong>"</strong><ol><li><img src="../../../Z_Resources/Images/enterprise/commit-svn/1commit-svn.png" /></li></ol></li>
            <li>
                <p>Click Next.</p>
                <ol>
                    <li>
                        <img src="../../../Z_Resources/Images/enterprise/commit-svn/2commit-svn.png" />
                    </li>
                </ol>
            </li>
            <li>In the <strong>Configure Git Repository</strong> window, click the checkbox for "<strong>Use or create repository in parent folder of project</strong>"</li>
            <li>Select the <MadCap:variable name="General.LBEnterprise" /> project listed<br /><ul><img src="../../../Z_Resources/Images/enterprise/commit-svn/3commit-svn.png" /></ul></li>
            <li>Click <strong>Finish</strong></li>
            <li>
                <p>At this point, your <MadCap:variable name="General.LBEnterprise" /> project is configured for "Local" Git repository. You still need to configure a "Remote" repository in Git. That's why you will notice a "<strong>NO-HEAD</strong>" mentioned next to the project name.</p>
                <ol>
                    <li>Note: If your <MadCap:variable name="General.LBEnterprise" /> project does not indicate "NO-HEAD", then either "Refresh" the view (right-click on the <MadCap:variable name="General.LBEnterprise" /> project à Refresh; or collapse the project and expand again).
						<ul><li><img src="../../../Z_Resources/Images/enterprise/commit-svn/4commit-svn.png" /></li></ul></li>
                </ol>
            </li>
            <li>We are ready to commit our project. <strong>Right-click</strong> on the <MadCap:variable name="General.LBEnterprise" /> project name → <strong>Team → </strong><strong>Commit</strong><ul><li><img src="../../../Z_Resources/Images/enterprise/commit-svn/5commit-svn.png" /></li></ul></li>
            <li>Provide a commit message, usually "Initial commit" for the first commit.
				<ol><li>Notice that since we already have the ".gitignore" file in place, we see only a limited number of files to be committed.</li><li>Ensure that all files are checked for commit, i.e., they all have a checkbox next to their name
						<ul><li><p><img src="../../../Z_Resources/Images/enterprise/commit-svn/6-commit-svn.png" /></p></li></ul></li></ol></li>
            <li>After commit, your <MadCap:variable name="General.LBEnterprise" /> project will look like this:
				<ul><li><img src="../../../Z_Resources/Images/enterprise/commit-svn/7commit-svn.png" /></li></ul></li>
            <li>We still haven't setup the remote repository. Once your remote repository is setup, copy its URL (usually accessible via "clone" link) and apply the link in these commands
				<ol><li><p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">It may be necessary to setup SSH keys in your Git provider prior to this step. If that's the case, then log into your Git provider's web interface as project admin, go to settings and add your Access Keys. Read <a class="external-link" href="https://confluence.atlassian.com/bitbucketserver049/using-ssh-keys-to-secure-git-operations-852726351.html" rel="nofollow">this link for more information on using SSH keys</a>.</p></li><li><pre>cd &lt;existing_DaticalDB_project_directory&gt;git remote add origin &lt;paste_remote_repository_URL_here&gt;</pre></li></ol></li>
            <li>Now go back into <MadCap:variable name="General.LBEnterprise" /> GUI, <strong>right-click</strong> on the project à <strong>Team</strong>. Notice that now you have access to commands pertaining with remote Git repository: "<strong>Fetch from Upstream</strong>", "<strong>Push to Upstream</strong>"
				<ol><li><img src="../../../Z_Resources/Images/enterprise/commit-svn/8-commit-svn.png" /></li></ol></li>
        </ol>
    </body>
</html>