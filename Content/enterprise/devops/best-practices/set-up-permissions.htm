<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title><MadCap:variable name="Heading.Level1" /> | Enterprise Docs</title>
        <link rel="canonical" href="https://docs.liquibase.com/enterprise/devops/best-practices/set-up-permissions.html" />
        <meta name="description" content="Learn how to impleement database permissions." />
    </head>
    <body>
        <h1>Implementation Guide: Set Up Database Permissions</h1>
        <MadCap:snippetText src="../../../Z_Resources/Snippets/images/icon-enterprise-top.flsnp" />
        <h2 id="ImplementationGuide:SettingUpDatabasePermissions-CreatingDatabasePasswordsforDaticalUserCredentials">
			Creating Database Passwords for <MadCap:variable name="General.LBEnterprise" /> User Credentials</h2>
        <p>Available Characters for Database Passwords</p>
        <ul>
            <li>All alphabetic characters:<strong>a-z and A-Z</strong></li>
            <li>All numeric characters: <strong>0-9</strong></li>
            <li>The following special characters: <strong>~#$%*()-_+[]{}.?</strong></li>
        </ul>
        <p>Using any other characters (including spaces) will cause:</p>
        <ul>
            <li>Errors during packaging</li>
            <li>Errors when deploying any scripts packaged from the data_dml, ddl_direct, and sql_direct folders.</li>
            <li>Errors when deploying any scripts packaged with the data_dml, ddl_direct, and direct package methods.</li>
        </ul>
        <h2 id="ImplementationGuide:SettingUpDatabasePermissions-SuggestedRolesforDaticalUserAccounts">
			Suggested Roles for <MadCap:variable name="General.LBEnterprise" /> User Accounts</h2>
        <p><MadCap:variable name="General.LBEnterprise" /> recommends that clients create up to 4 database roles for use by the user accounts that are used to connect to the database using <MadCap:variable name="General.LBEnterprise" />.</p>
        <p><strong>DATICAL_ROLE</strong> - Used in all databases.</p>
        <p><strong>DATICAL_PACKAGER_ROLE</strong> - Used only in the reference / packaging database. Has additional permissions required to access the trace file and perform backup &amp; restore.</p>
        <p><strong>DATICAL_ROLE_SCHEMA_OWNER</strong> – (Oracle, single-schema only). Used for when connecting as the schema owner.</p>
        <p><strong>DATICAL_PACKAGER_SCHEMA_OWNER</strong> - (Oracle, single-schema only). Used only in the reference / packaging database. Used for when connecting as the schema owner.</p>
        <p><strong>DATICAL_TRACK_ROLE</strong> – Used in all databases to create and update the <MadCap:variable name="General.LBEnterprise" /> tracking tables.</p>
        <p><strong>DATICAL_AUDIT_ROLE</strong> – Used in the AuditDB to create and update the <MadCap:variable name="General.LBEnterprise" /> audit tables.</p>
        <h2 id="ImplementationGuide:SettingUpDatabasePermissions-Oracle">Oracle</h2>
        <p><a href="../db-release-pipelines/oracle-database-setup/oracle-roles-permissions/home.htm">Roles and Permissions for <MadCap:variable name="General.LBEnterprise" /> on Oracle Database</a>
        </p>
        <br />
        <h2 id="ImplementationGuide:SettingUpDatabasePermissions-SQLServer">SQL Server</h2>
        <h3 id="ImplementationGuide:SettingUpDatabasePermissions-CreateLoginUser(andensuretheuserhasaccesstoreadthemetadata)">Create Login User (and ensure the user has access to read the metadata)</h3><pre>USE [master]
GO
CREATE LOGIN [datical_login] WITH PASSWORD=N'password_goes_here', DEFAULT_DATABASE=[datical_db], CHECK_EXPIRATION=OFF, CHECK_POLICY=ON
GO
GRANT VIEW ANY DEFINITION TO datical_login
GO</pre>
        <h3 id="ImplementationGuide:SettingUpDatabasePermissions-CreateUser(datical_user)forDatabasesUnderDaticalDBManagement">
			Create User (datical_user) for Databases Under <MadCap:variable name="General.LBEnterprise" /> Management</h3>
        <table>
            <tbody>
                <tr>
                    <td>
                        <p><strong>db_ddladmin</strong>
                        </p>
                    </td>
                    <td>
                        <p>Members of the db_ddladmin fixed database role can run any Data Definition Language (DDL) command in a database.</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>db_datawriter</strong>
                        </p>
                    </td>
                    <td>
                        <p>Members of the db_datawriter fixed database role can add, delete, or change data in all user tables.</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p><strong>db_datareader</strong>
                        </p>
                    </td>
                    <td>
                        <p>Members of the db_datareader fixed database role can read all data from all user tables.</p>
                    </td>
                </tr>
                <tr>
                    <td><strong>db_securityadmin</strong>
                    </td>
                    <td>Members of the db_securityadmin fixed database role can perform grants to all objects in the database. This is required if grants are allowed in scripts.</td>
                </tr>
                <tr>
                    <td><strong>db_backupoperator</strong>
                    </td>
                    <td>
                        <p>Members of the db_backupoperator fixed database role can perform backups of the database.</p>
                        <p>This is required on the Reference Database if not connecting as the database owner.</p>
                    </td>
                </tr>
                <tr>
                    <td><strong>dbcreator</strong>
                    </td>
                    <td>
                        <p>Members of the dbcreator fixed server role can perform database restores.</p>
                        <p>This is required on the Reference Database Server.</p>
                    </td>
                </tr>
            </tbody>
        </table><b>DATICAL_USER</b><pre>USE [database_1]
GO
CREATE USER [datical_user] FOR LOGIN [datical_login]
GO
EXEC sp_addrolemember N'db_ddladmin', N'datical_user'
GO
EXEC sp_addrolemember N'db_datareader', N'datical_user'
GO
EXEC sp_addrolemember N'db_datawriter', N'datical_user'
GO
EXEC sp_addrolemember N'db_securityadmin', N'datical_user'
GO
EXEC sp_addrolemember N'db_backupoperator', N'datical_user'
GO
GRANT VIEW DATABASE STATE to [datical_user]
GO
ALTER SERVER ROLE [dbcreator] ADD MEMBER [datical_user]
GO</pre>
        <br />
        <h2 id="ImplementationGuide:SettingUpDatabasePermissions-DB2">DB2</h2>
        <h3 id="ImplementationGuide:SettingUpDatabasePermissions-OverviewofDaticalDBUser&amp;RoleConfigurationforDB2">
			Overview of <MadCap:variable name="General.LBEnterprise" /> User &amp; Role Configuration for DB2</h3>
        <p><MadCap:variable name="General.LBEnterprise" /> does not require special privileges above and beyond what is required to create, alter, and drop the most common database object types that support your database applications. There are two common implementation patterns for configuring <MadCap:variable name="General.LBEnterprise" /> access schemes in DB2: granting privileges to the <MadCap:variable name="General.LBEnterprise" /> Role and granting privileges to a single <MadCap:variable name="General.LBEnterprise" /> User.</p>
        <h3 id="ImplementationGuide:SettingUpDatabasePermissions-GrantingPrivilegestoaDaticalRole">
			Granting Privileges to a <MadCap:variable name="General.LBEnterprise" /> Role</h3>
        <p>Granting privileges to a <MadCap:variable name="General.LBEnterprise" /> Role is typically chosen in environments where individual team members will use unique credentials to access the database through <MadCap:variable name="General.LBEnterprise" />. This simplifies the privilege management process by centralizing where GRANTS &amp; REVOKES are performed. The role is then assigned to the user accounts that require database access with <MadCap:variable name="General.LBEnterprise" />.</p>
        <h3 id="ImplementationGuide:SettingUpDatabasePermissions-GrantingPrivilegestoaDedicatedDaticalUser">
			Granting Privileges to a Dedicated <MadCap:variable name="General.LBEnterprise" /> User</h3>
        <p>Granting Privileges to a dedicated <MadCap:variable name="General.LBEnterprise" /> User allows an organization to drastically reduce the number of individuals with access to the database password. Because the database password is encoded in <MadCap:variable name="General.LBEnterprise" />, an administrator may create the <MadCap:variable name="General.LBEnterprise" /> Deployment Plans and share them with <MadCap:variable name="General.LBEnterprise" /> users. The <MadCap:variable name="General.LBEnterprise" /> users can then perform database change tasks without having access to the database password. <em><strong>We strongly recommend to use runtime credentials because it is more secure than stored credentials (due to the possibility of the stored password being decoded)</strong></em>.</p>
        <h3 id="ImplementationGuide:SettingUpDatabasePermissions-RecommendedMinimumPrivilegesforDaticalDBRoles&amp;Users">
			Recommended Minimum Privileges for <MadCap:variable name="General.LBEnterprise" /> Roles &amp; Users</h3>
        <p>To validate and automate database deployments <MadCap:variable name="General.LBEnterprise" /> needs to be able to connect to a database and to perform routine CREATE, ALTER, &amp; DROP statements in the appropriate schema.</p>
        <ul>
            <li><strong>Database Privileges</strong>
                <ul>
                    <li>CONNECT
						<ul><li>Grants the authority to access the database.</li></ul></li>
                </ul>
            </li>
            <li><strong>Schema Privileges</strong> <em>(use "<strong>with grant option</strong>" if user/role needs to grant permissions to other users/roles)</em></li>
        </ul>
        <ul>
            <li>
                <ul>
                    <li>CREATEIN
						<ul><li>Grants the privilege to create objects in the schema. Other authorities or privileges required to create the object (such as CREATETAB) are still required. The owner of an explicitly created schema automatically receives CREATEIN privilege. An implicitly created schema has CREATEIN privilege automatically granted to PUBLIC.</li></ul></li>
                    <li>ALTERIN
						<ul><li>Grants the privilege to alter or comment on all objects in the schema. The owner of an explicitly created schema automatically receives ALTERIN privilege.</li></ul></li>
                    <li>DROPIN
						<ul><li>Grants the privilege to drop all objects in the schema. The owner of an explicitly created schema automatically receives DROPIN privilege.</li></ul></li>
                    <li>WITH GRANT OPTION
						<ul><li>Allows the specified&#160;<em>authorization-name</em>s to GRANT the privileges to others.</li></ul></li>
                </ul>
            </li>
            <li><strong>Data Privileges</strong>
                <ul>
                    <li>DATAACCESS
						<ul><li>Access and update data in user tables, views, and materialized query tables in a DB2 subsystem</li><li>Execute plans, packages, functions, and procedures.</li><li>Select privilege on all system catalog tables and views.</li></ul></li>
                </ul>
            </li>
            <li><strong>Tablespace Access</strong>
                <ul>
                    <li>GRANT USE OF TABLESPACE &lt;tablespace_name&gt; TO ROLE &lt;role_name&gt;
						<ul><li>Provides access to the desired tablespace</li></ul></li>
                </ul>
            </li>
        </ul>
        <h3 id="ImplementationGuide:SettingUpDatabasePermissions-AdditionalPermissionsNeededtoRunDaticalPackager">
			Additional Permissions Needed to Run <MadCap:variable name="General.LBEnterprise" /> Packager</h3>
        <p>You must have SYSADM, SYSCTRL, or SYSMAINT authority to use the backup utility which is required by the <MadCap:variable name="General.LBEnterprise" /> Packager.</p>
        <p>This permission is only needed on user accounts involved in packaging changes in the REF databases. It is not needed in any of the other databases in the environment.</p>
        <h3 id="ImplementationGuide:SettingUpDatabasePermissions-PermissionsneededtoperformGRANTS">Permissions needed to perform GRANTS</h3>
        <p>To perform grants - if you don't use the "WITH GRANT OPTIONS" on CREATIN/ALERIN/DROPIN, you will also need to grant ACCESSCTRL as documented in <a class="external-link" href="https://www.ibm.com/support/knowledgecenter/en/SSEPGG_10.1.0/com.ibm.db2.luw.admin.sec.doc/doc/c0053933.html" rel="nofollow">https://www.ibm.com/support/knowledgecenter/en/SSEPGG_10.1.0/com.ibm.db2.luw.admin.sec.doc/doc/c0053933.html</a>.</p>
        <h3 id="ImplementationGuide:SettingUpDatabasePermissions-SampleCommandstoEnableaDaticalDBRoleforaSchema">
			Sample Commands to Enable a <MadCap:variable name="General.LBEnterprise" /> Role for a Schema</h3><pre>-- Create the role 'DATDB_ROLE' and grant the 'CONNECT' privilege for the DB to be managed
CREATE ROLE DATDB_ROLE
GRANT CONNECT ON DATABASE TO ROLE DATDB_ROLE

-- Grant 'ALTERIN','CREATEIN' &amp; 'DROPIN' privileges to 'DATDB_ROLE' for the desired schema
--
-- "with grant option" can be optionally added to the following statements if the role needs
-- to grant permissions to other users/roles
GRANT ALTERIN ON SCHEMA MYAPPSCHEMA TO ROLE DATDB_ROLE WITH GRANT OPTION
GRANT CREATEIN ON SCHEMA MYAPPSCHEMA TO ROLE DATDB_ROLE WITH GRANT OPTION
GRANT DROPIN ON SCHEMA MYAPPSCHEMA TO ROLE DATDB_ROLE WITH GRANT OPTION

-- Grant data access on a database to a specific role
GRANT DATAACCESS ON DATABASE TO ROLE DATDB_ROLE

-- Grant tablespace access to role
GRANT USE OF TABLESPACE &lt;tablespace_name&gt; TO ROLE DATDB_ROLE

-- Grant the role 'DATDB_ROLE' to user 'DATDB_USER'
GRANT ROLE DATDB_ROLE TO USER DATDB_USER</pre>
        <h3 id="ImplementationGuide:SettingUpDatabasePermissions-SampleCommandstoEnableaDaticalDBUserforaSchema">
			Sample Commands to Enable a <MadCap:variable name="General.LBEnterprise" /> User for a Schema</h3><pre>-- Grant the 'CONNECT' privilege for the DB to be managed
GRANT CONNECT ON DATABASE TO USER DATDB_USER

-- Grant 'ALTERIN','CREATEIN' &amp; 'DROPIN' privileges to 'DATDB_ROLE' for the desired schema
--
-- "with grant option" can be optionally added to the following statements if the user needs
-- to grant permissions to other users/roles
GRANT ALTERIN ON SCHEMA MYAPPSCHEMA TO USER DATDB_USER WITH GRANT OPTION
GRANT CREATEIN ON SCHEMA MYAPPSCHEMA TO USER DATDB_USER WITH GRANT OPTION
GRANT DROPIN ON SCHEMA MYAPPSCHEMA TO USER DATDB_USER WITH GRANT OPTION

-- Grant data access on a database to a specific role
GRANT DATAACCESS ON DATABASE TO USER DATDB_USER

-- Grant tablespace access to role
GRANT USE OF TABLESPACE &lt;tablespace_name&gt; TO USER DATDB_USER</pre>
        <h3 id="ImplementationGuide:SettingUpDatabasePermissions-ViewingUserPermissions">Viewing User Permissions</h3><pre>-- Database permissions
select * from SYSCAT.DBAUTH  where GRANTEE = 'DATDB_USER'
-- Retrieve the privilege granted along with the object name, schema and type,
SELECT * FROM SYSIBMADM.PRIVILEGES WHERE AUTHIDTYPE = 'U' AND AUTHID = 'DATDB_USER'</pre>
        <h2 id="ImplementationGuide:SettingUpDatabasePermissions-Postgres">Postgres</h2>
        <p>You can either execute packaging and deployment as a SUPERUSER, or as a limited user account.</p>
        <p>If setting up a limited user account, you will need to do the following:</p>
        <ul>
            <li>Packaging (REF DBs) - The user account needs to be the <strong>database owner</strong> so it can backup and restore the database</li>
            <li>Deployment (All Other DBs) - The user account needs to have <strong>access to the database</strong> (schemas) <strong>but does not need to own it</strong> (them)</li>
        </ul>
        <p>Permissions for SUPERUSER</p><pre>ALTER USER myuser WITH SUPERUSER;</pre>
        <p>Permissions for non-superuser DATICAL_ROLE</p><pre>GRANT USAGE ON SCHEMA my_schema TO DATICAL_ROLE;
&lt;add list of all possible base schema permissions&gt;</pre>
        <p>Permissions for non-superuser DATICAL_PACKAGER_ROLE</p><pre>GRANT USAGE ON SCHEMA my_schema TO DATICAL_PACKAGER_ROLE;
&lt;add list of additional permissions needed for packaging&gt;</pre>
    </body>
</html>