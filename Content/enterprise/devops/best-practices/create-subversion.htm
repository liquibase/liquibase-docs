<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title><MadCap:variable name="Heading.Level1" /> | Enterprise Docs</title>
        <link rel="canonical" href="https://docs.liquibase.com/enterprise/devops/best-practices/create-subversion.html" />
        <meta name="description" content="This page covers how and why you should create a subversion ignore list in an Enterprise Project Directory." />
    </head>
    <body>
        <h1>Create a <code>.svnignore</code> file</h1>
        <MadCap:snippetText src="../../../Z_Resources/Snippets/images/icon-enterprise-top.flsnp" />
        <p class="tip" MadCap:autonum="&lt;b&gt;Tip: &lt;/b&gt;">In <MadCap:variable name="General.LBEnterprise" /> version 8.3 and later, ignore files are installed automatically, so you will not need to create one. It will already be available.</p><pre xml:space="preserve">
			<code>svn propset svn:ignore</code></pre>
        <p>While performing normal operations (Packager, Forecast, Deploy, etc.) <MadCap:variable name="General.LBEnterprise" /> will generate log files and reports that are not necessary to be checked into Subversion.</p>
        <p>This is implemented using the <code>svn propset svn:ignore</code> command. Therefore, files and directories generated as a result of running various <MadCap:variable name="General.LBEnterprise" /> tasks should be ignored. This document will help you setup a subversion to ignore those files in your <MadCap:variable name="General.LBEnterprise" /> project.</p>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">Some files generated as part of Datical operations, such as HTML reports, are important to be archived. However, SVN is your source code repository, not a means to archive reports. Consider archiving reports into a separate directory or use a different tool such as Artifactory.</p>
        <h2 id="ImplementationGuide:CreatesubversionignorelistInDaticalDBProjectDirectory-STEPS">STEPS 8.2 and Earlier</h2>
        <p class="tip" MadCap:autonum="&lt;b&gt;Tip: &lt;/b&gt;">These steps are for <MadCap:variable name="General.LBEnterprise" /> version 8.2 and earlier. <MadCap:variable name="General.LBEnterprise" /> 8.3 and later automatically adds a .svnignore file to the directory.</p>
        <ol>
            <li>Open the CLI.</li>
            <li>Navigate to your Datical Project Directory.</li>
            <li>
                <p>Enter the following command:</p><pre>svn propedit svn:ignore</pre>
            </li>
            <li>This will bring up an editor (if not, set your SVN_EDITOR and point it to vi or notepad depending on your OS)
				<ol><li><p>Put the following values in:</p><pre class="syntaxhighlighter-pre">daticaldb*.log
.classpath<br />Logs
Reports<br />Snapshots
Profiles<br />templates</pre></li></ol></li>
            <li>
                <p>Now, when you check-in your files, SVN will use the "svn:ignore" property to identify which files to prevent from checking in. Steps to check-in your code into SVN is described in this page: <br /><MadCap:xref href="initial-commit-git.htm">Implementation Guide: Initial Commit of [%=General.LBEnterprise%] Project into Git </MadCap:xref></p>
            </li>
        </ol>
        <h2 id="ImplementationGuide:CreatesubversionignorelistInDaticalDBProjectDirectory-STEPS">STEPS 8.3 and Later</h2>
        <p class="tip" MadCap:autonum="&lt;b&gt;Tip: &lt;/b&gt;"><MadCap:variable name="General.LBEnterprise" /> version 8.3 and later automatically adds a .svnignore file to the directory when a new project is created. These steps will </p>
        <ol>
            <li>Ensure that you have the ignore files that you need and delete the others. This works in the CLI, GUI, or a <code>project_creator groovy</code> script.
			<ul><li><p>Ignore files are automatically added for all supported SCM:</p><ul><li>git: .gitignore</li><li>team foundation: .tfignore</li><li>SVN: .svnignore</li></ul></li></ul></li>
            <li>
                <p>be aware that an extra step is needed for SVN to automatically ignore files. </p>
                <ul>
                    <li>
                        <p>Run: <code>svn propset .svnignore -F ignore</code> so SVN will ignore them successfully.</p>
                    </li>
                </ul>
                <p>When you check-in your files, SVN will use the <code>svn:ignore</code> property to identify which files to prevent from checking in. Steps to check-in your code into SVN is described in this page: <br /><MadCap:xref href="initial-commit-git.htm">Implementation Guide: Initial Commit of [%=General.LBEnterprise%] Project into Git </MadCap:xref></p>
            </li>
        </ol>
        <h2>Related links</h2>
        <ul>
            <li>
                <MadCap:xref href="deploy-packager-config.htm">Deployment Packager Configuration</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="initial-setup-deploy-packager.htm">Initial Setup of deployPackager.properties File</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="create-gitignore.htm">Create a .gitignore file</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="create-tfignore.htm">Create a .tfignore file</MadCap:xref>
            </li>
        </ul>
    </body>
</html>