<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title><MadCap:variable name="Heading.Level1" /> | Enterprise Docs</title>
        <link rel="canonical" href="https://docs.liquibase.com/enterprise/devops/install/security-components/secure-connection.html" />
        <meta name="description" content=" Enterprise employs JDBC to establish a connection to the database for both the packaging and deployment phases." />
    </head>
    <body>
        <h1>Secure the Database Connection</h1>
        <MadCap:snippetBlock src="../../../../Z_Resources/Snippets/images/icon-enterprise-top.flsnp" />
        <p><MadCap:variable name="General.LBEnterprise" /> employs JDBC to establish a connection to the database for both the packaging and deployment phases.</p>
        <h2>Database Connection Method</h2>
        <ul>
            <li>Uses standard JDBC Providers (database vendors)</li>
            <li>Username/hostname is defined in connection string</li>
            <li>Password is passed via database driver property method<em>(not as part of the connection string)</em></li>
            <li>Information on setup of SSL JDBC connections<ul><li>Oracle Wallet for SSL Connections - <a href="../../db-release-pipelines/oracle-database-setup/choose-connection-method/ssl-oracle-wallet.htm" rel="nofollow">SSL Connection to an Oracle Database through Oracle Wallet</a></li><li>SQL Server -<a class="external-link" href="https://msdn.microsoft.com/en-us/library/bb879935(v=sql.110).aspx" rel="nofollow">https://msdn.microsoft.com/en-us/library/bb879935(v=sql.110).aspx</a></li><li>DB2 -<a class="external-link" href="https://www.ibm.com/support/knowledgecenter/SSEPGG_9.5.0/com.ibm.db2.luw.admin.sec.doc/doc/c0005815.html" rel="nofollow">https://www.ibm.com/support/knowledgecenter/SSEPGG_9.5.0/com.ibm.db2.luw.admin.sec.doc/doc/c0005815.html</a></li></ul></li>
        </ul>
        <h2>Datical Database Connection Information</h2>
        <p><MadCap:variable name="General.LBEnterprise" /> obtains connection user/password information from one of these two methods below. <em><strong>We strongly recommend to use the first method (runtime credentials) because it is more secure</strong></em>. The third option (storing credentials in the datical.project file) is to be avoided because of the possibility of the encoded passwords being decoded.</p>
        <ul>
            <li><strong>Option 1: Runtime Credentials (more secure, best practice)</strong>
                <ul>
                    <li><em>This method is <strong>strongly recommended</strong> for securely passing database credentials to Datical in the GUI or in automation (using the Command Line)</em>
                    </li>
                    <li>For Automation/Command Line, the automation platform retrieves database credentials from the company's credential store (often a 3rd-party tool like CyberArk or the CI/CD platform's native credential store) and loads them into environment variables before calling the Datical CLI<ul><li>Credentials are passed to the CLI at runtime via environment variables</li><li>They are not persisted by Datical</li></ul></li>
                    <li>For GUI usage, the user is prompted for database credentials at run-time<ul><li>The Graphical User interface prompts users for information in real-time</li><li>They are not persisted by Datical</li></ul></li>
                </ul>
            </li>
            <li><strong>Option 2: Platform-Specific credential options (security depends on your configuration)</strong>
                <ul>
                    <li>For SQL Server, you can use Integrated Security:<ul><li><em>Passwords are NOT stored in datical.project with Integrated Security for SQL Server</em><ul><li><a href="../../db-release-pipelines/sql-setup/integrate-security-active.htm">Setting up Integrated Security for Active Directory</a></li></ul></li></ul></li>
                    <li>For Oracle, you can use EZCONNECT, TNSNAMES, LDAP, or SSL through Oracle Wallet:<ul><li><em>Passwords can optionally be stored in datical.project with these connections for Oracle depending on your configuration - we recommend configurations that do NOT store the password in datical.project file.</em><ul><li><a href="../../db-release-pipelines/oracle-database-setup/choose-connection-method/home.htm">Choosing a Database Connection Method for Oracle Databases</a><ul><li><a href="../../db-release-pipelines/oracle-database-setup/choose-connection-method/ezconnect.htm">EZCONNECT Connection to an Oracle Database</a></li><li><a href="../../db-release-pipelines/oracle-database-setup/choose-connection-method/tnsnames-oracle.htm">TNSNAMES Connection to an Oracle Database</a></li><li><a href="../../db-release-pipelines/oracle-database-setup/choose-connection-method/ldap-oracle.htm">LDAP Connection to an Oracle Database</a></li><li><a href="../../db-release-pipelines/oracle-database-setup/choose-connection-method/ssl-oracle-wallet.htm">SSL Connection to an Oracle Database Through Oracle Wallet</a></li></ul></li></ul></li></ul></li>
                </ul>
            </li>
            <li><strong>Option 3: Stored Credentials (least secure)</strong>
                <ul>
                    <li><em>This method is only for evaluations and single-user usage as the encoding method is not secure and could compromise passwords in a multi-user environment.</em>
                    </li>
                    <li>When using the Stored Credentials option, for both the GUI and CLI the database User and Password are stored and persisted in the datical.project file:<ul><li>Password is encoded (but not encrypted)</li><li>There may be potential risk of having the stored password be decoded</li><li>Limit who has access to the datical.project files on the machines running Datical</li><li>Limit who has access to the datical.project files stored in source control (Git, SVN, TFS)</li><li>We recommend that all customers use our hammer debug export "scrubber" to remove sensitive information from files before sending them in to Datical tech support. If you are using the less secure Stored Credentials option, then that is extra incentive be sure to "scrub" your Datical files with the hammer debug export command before sending files to tech support: <a href="../../../troubleshoot/assembling-data-support.htm">Assembling Data for Datical/Liquibase Support</a></li></ul></li>
                </ul>
            </li>
        </ul>
        <p>See also these related pages for additional Credential Management information:</p>
        <ul>
            <li><a href="../../cli-commands/database-credentials.htm" rel="nofollow">Database Credential Management</a>
                <ul>
                    <li><a href="../../../developer/define-release-pipeline/create-manage-projects/credential-management/choose-stored-runtime-credentials.htm">Choosing Stored or Runtime Database Credentials</a>
                        <br />
                        <ul>
                            <li><a href="../../../developer/define-release-pipeline/create-manage-projects/credential-management/provide-runtime-credentials.htm">Providing Runtime Credentials</a>
                            </li>
                            <li><a href="../../../developer/define-release-pipeline/create-manage-projects/credential-management/password-character-require.htm">Password Character Requirements</a>
                            </li>
                        </ul>
                    </li>
                </ul>
            </li>
        </ul>
    </body>
</html>