<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" xml:lang="en-us">
    <head><title><MadCap:variable name="Heading.Level1" /> | Enterprise Docs</title>
        <link rel="canonical" href="https://docs.liquibase.com/enterprise/devops/cli-commands/status.html" />
        <meta name="description" content="Show the deployment status of a database." />
    </head>
    <body>
        <h1>status</h1>
        <MadCap:snippetText src="../../../Z_Resources/Snippets/images/icon-enterprise-top.flsnp" />
        <p>Show the deployment status of a database.</p>
        <p><strong>USAGE</strong>
        </p><pre><span class="HTMLCode_1">status [dbdef]</pre>
        <p><strong>EXAMPLE</strong>
        </p><pre><span class="HTMLCode_1">status QAdb</pre><pre><span class="HTMLCode_1">hammer --daticalServer=dmc_server_url --daticalUsername=user_name status datical_project_name</pre>
        <p><strong>DATICAL SERVICE OPTIONS</strong>
        </p>
        <p>Use these options to access a project that is stored on <MadCap:variable name="General.LBEnterprise" /> Service.</p>
        <ul>
            <li>
                <p><code>--daticalServer=&lt;cluster-name&gt;</code> – The cluster name set for Datical Service. The cluster name is set during Datical Service installation.</p>
            </li>
            <li>
                <p><code>--daticalUsername=&lt;user&gt;</code> – User name, must be configured in Datical Service. Use the DATICAL_PASSWORD environment variable to provide the password.</p>
            </li>
            <li>
                <p>status - keyword that identifies this as a status command</p>
            </li>
            <li>
                <p><code>&lt;projectRef&gt;</code> – Project to use, specified <code>&lt;projectRef&gt;</code>, a project name or project key. The project key is defined in Datical Service only.</p>
            </li>
        </ul>
        <p><strong>OPTIONS</strong>
        </p>
        <ul>
            <li>
                <p><code>dbdef</code> – Name of a database definition in the project.</p>
            </li>
        </ul>
        <p><strong>OUTPUT</strong>
        </p>
        <p>For each dbdef, the status reported is one of the following.</p>
        <ul>
            <li>
                <p>Deployed - all changesets in REF are deployed on the dbdef (managed database)</p>
            </li>
            <li>
                <p>Undeployed - not all changesets in REF are deployed on the dbdef</p>
            </li>
            <li>
                <p>Error - cannot contact database, no JDBC found, others</p>
            </li>
        </ul>
        <p><strong>NOTES</strong>
        </p>
        <p>The status command reports on all dbdefs (databases) in the project unless you specify an individual dbdef.</p>
        <p>Status is determined by comparing the changesets in the REF database (the changelog) to the changesets listed in the tracking tables for each database.</p>
    </body>
</html>