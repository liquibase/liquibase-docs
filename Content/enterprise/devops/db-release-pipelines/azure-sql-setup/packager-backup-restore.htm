<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title><MadCap:variable name="Heading.Level1" /> | Enterprise Docs</title>
        <link rel="canonical" href="https://docs.liquibase.com/enterprise/devops/db-release-pipelines/azure-sql-setup/packager-backup-restore.html" />
        <meta name="description" content="You can package your SQL scripts on the Azure SQL Database environment using Deploy Packager." />
    </head>
    <body>
        <h1>Packager backup and restore process for Azure SQL Database and SQL Server</h1>
        <MadCap:snippetText src="../../../../Z_Resources/Snippets/images/icon-enterprise-top.flsnp" />
        <p class="tip" MadCap:autonum="&lt;b&gt;Tip: &lt;/b&gt;">Azure SQL Database support is available in 7.9 and later releases</p>
        <p>You can package your SQL scripts on the Azure SQL Database environment using <code>Deploy Packager</code>. There is a standard or ephemeral workflow based on the <code>Connection Type</code> to SQL Server. Using the standard workflow, the <code>Deploy Packager</code> performs the backup of the reference database as part of a standard operation. If packaging fails, the database is restored from that backup and you can start future <code>Deploy Packager</code> jobs from a known good state.</p>
        <p>For non-Azure Databases, the <code>Deploy Packager</code> uses your installation of <code>sqlcmd</code> to create a restore file for your <code>REFDB</code> during packaging. The files are stored on the database server.</p>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">The default location of a backup is stored in the <code>BackupDirectory</code> registry key under <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Microsoft SQL Server\MSSQL.n\MSSQLServer</code>. You can specify the path to your backup files with the<code>databaseBackupRestoreLocation</code>attribute.<MadCap:conditionalText MadCap:conditions="Default.FLAG">For more information, see<a href="../../../dba/package/package-sql-scripts-deployment/configure-packaging/database-backup-restore.htm">Managing Database Backup and Restore</a> and <a href="../../best-practices/deploy-packager-config.htm">Using the Required deployPackager.properties File</a>.</MadCap:conditionalText></p>
        <p>For Azure SQL Database, the <code>Deploy Packager</code> creates a copy of the database at the beginning of packaging. This ephemeral copy will be used to perform all packaging phases: adding new scripts, testing rollbacks, forecasting, and deploying changes.</p>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;"><code>Backup</code> creates a new instance of SQL Database (<code>REFDB_EPHEMERAL</code>) and <code>Restore</code> drops an existing instance of SQL Database (<code>REFDB_EPHEMERAL</code>).</p>
        <p>If everything is successful, the <code>REFDB</code> is updated and the copy created is dropped. If there are issues during packaging, the <code>REFDB</code> is not affected and the copy created is dropped.</p>
        <h3 id="PackagerbackupandrestoreprocessforAzureSQLDatabaseandSQLServer-StandardPackagingProcess">Standard Packaging Process</h3>
        <ul>
            <li>
                <p>All operations are performed on the <code>REFDB</code>.</p>
            </li>
            <li>
                <p>If the <code>Convert SQL</code> workflow is used, a restore occurs prior to the final <code>Forecast</code> and <code>Deploy</code>.</p>
            </li>
        </ul>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">When a script is packaged using the <code>Convert SQL</code>, the restore is required prior to the final <code>Forecast</code> and <code>Deploy</code>.</p>
        <ul>
            <li>
                <p>If Packager fails after performing any operation on <code>REFDB</code>, <code>REFDB</code> is restored to its original state using a backup.</p>
            </li>
        </ul>
        <h3 id="PackagerbackupandrestoreprocessforAzureSQLDatabaseandSQLServer-EphemeralPackagingProcess">Ephemeral Packaging Process</h3>
        <ul>
            <li>
                <p>All operations except for the final <code>Forecast</code> and <code>Deploy</code> are performed on a copy of the <code>REFDB</code>.</p>
            </li>
            <li>
                <p>If files were packaged using the <code>Convert SQL</code> workflow, a previous ephemeral copy is dropped and a new ephemeral copy is created to perform <code>Ephemeral Forecast</code> and <code>Deploy</code>.</p>
            </li>
        </ul>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">The <code>Convert SQL</code> process includes rollback validation and performs the final Forecast against REFDB. If the final Forecast is successful, then the final Deploy is performed.</p>
        <ul>
            <li>
                <p>If Packager fails after performing any operation on the ephemeral copy of <code>REFDB</code> and that ephemeral copy, which was created prior to it, is dropped, the project state is restored back to a known state.</p>
            </li>
            <li>
                <p>If Packager does not fail after performing any operation on the ephemeral copy of <code>REFDB</code>, the copy is dropped, Forecast is performed again, and changes are deployed to <code>REFDB</code>.</p>
            </li>
        </ul>
        <p>See also: The ephemeralConnectionRetryTimeout property for Azure SQL Database</p>
    </body>
</html>