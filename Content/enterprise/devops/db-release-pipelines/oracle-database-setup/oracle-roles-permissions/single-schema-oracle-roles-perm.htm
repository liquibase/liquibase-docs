<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
	<head><title><MadCap:variable name="Heading.Level1" /> | Enterprise Docs</title>
		<meta rel="canonical" href="https://docs.liquibase.com/enterprise/devops/db-release-pipelines/oracle-database-setup/oracle-roles-permissions/single-schema-oracle-roles-perm.html" />
		<meta name="description" content="Learn the roles and permissions needed for an Oracle single-schema project." />
	</head>
    <body>
        <h1>Single-Schema Projects - Oracle Roles and Permissions</h1>
        <MadCap:snippetBlock src="../../../../../Z_Resources/Snippets/images/icon-enterprise-top.flsnp" />
        <p>For single-schema projects the DATICAL_USER is the managed schema account. At runtime, <MadCap:variable name="General.LBEnterprise" /> will connect to the database as the owner of the managed schema to process and deploy code. The DATABASECHANGELOG and DATABASECHANGELOGLOCK tables used to track and manage database changes are deployed into the managed schema. The database schemas can be different across steps in the pipeline.</p>
        <p>Database permissions for <MadCap:variable name="General.LBEnterprise" /> are managed through Roles. Three <MadCap:variable name="General.LBEnterprise" /> Roles are needed:</p>
        <ul>
            <li>DATICAL_SCHEMA_OWNER_ROLE - Required on all databases in the project. Grants permissions to deploy objects.</li>
            <li>DATICAL_PACKAGER_SCHEMA_OWNER_ROLE - Required only on the REF database in the project. Grants additional permissions required to execute <MadCap:variable name="General.LBEnterprise" /> packaging operations.</li>
            <li>DATICAL_TRACK_ROLE - Required on all databases in the project. Grants permissions to manage the database change log.</li>
        </ul>
        <h2 id="Single-SchemaProjects-OracleRolesandPermissions-DATICAL_SCHEMA_OWNER_ROLE">DATICAL_SCHEMA_OWNER_ROLE</h2>
        <p>This role gives the <MadCap:variable name="General.LBEnterprise" /> user the required permissions on all managed database objects.</p><b>DATICAL_ROLE_SCHEMA_OWNER</b><pre>-- The following must be run as sysdba
-- SQL &gt; conn / as sysdba

CREATE ROLE DATICAL_SCHEMA_OWNER_ROLE NOT IDENTIFIED;

GRANT CREATE SESSION TO DATICAL_SCHEMA_OWNER_ROLE;

-- Standard Object Permissions
GRANT CREATE TRIGGER TO DATICAL_SCHEMA_OWNER_ROLE;
GRANT CREATE TABLESPACE TO DATICAL_SCHEMA_OWNER_ROLE;
GRANT CREATE SEQUENCE TO DATICAL_SCHEMA_OWNER_ROLE;
GRANT CREATE TABLE TO DATICAL_SCHEMA_OWNER_ROLE;
GRANT CREATE PROCEDURE TO DATICAL_SCHEMA_OWNER_ROLE;
GRANT CREATE SYNONYM TO DATICAL_SCHEMA_OWNER_ROLE;
GRANT CREATE VIEW TO DATICAL_SCHEMA_OWNER_ROLE;
GRANT CREATE TYPE TO DATICAL_SCHEMA_OWNER_ROLE;
GRANT CREATE MATERIALIZED VIEW TO DATICAL_SCHEMA_OWNER_ROLE;
GRANT CREATE DATABASE LINK TO DATICAL_SCHEMA_OWNER_ROLE;
 
-- Other, less common Object Permissions
GRANT CREATE ASSEMBLY TO DATICAL_SCHEMA_OWNER_ROLE;
GRANT CREATE OPERATOR TO DATICAL_SCHEMA_OWNER_ROLE;
GRANT CREATE EXTERNAL JOB TO DATICAL_SCHEMA_OWNER_ROLE;
GRANT CREATE LIBRARY TO DATICAL_SCHEMA_OWNER_ROLE;
GRANT CREATE JOB TO DATICAL_SCHEMA_OWNER_ROLE;
GRANT CREATE CLUSTER TO DATICAL_SCHEMA_OWNER_ROLE;
GRANT CREATE EVALUATION CONTEXT TO DATICAL_SCHEMA_OWNER_ROLE;
GRANT CREATE RULE TO DATICAL_SCHEMA_OWNER_ROLE;
GRANT CREATE RULE SET TO DATICAL_SCHEMA_OWNER_ROLE;
GRANT CREATE DIMENSION TO DATICAL_SCHEMA_OWNER_ROLE;
GRANT CREATE ROLLBACK SEGMENT TO DATICAL_SCHEMA_OWNER_ROLE;
GRANT CREATE CUBE TO DATICAL_SCHEMA_OWNER_ROLE;
GRANT CREATE CUBE DIMENSION TO DATICAL_SCHEMA_OWNER_ROLE;
GRANT CREATE CUBE BUILD PROCESS TO DATICAL_SCHEMA_OWNER_ROLE;
GRANT CREATE MEASURE FOLDER TO DATICAL_SCHEMA_OWNER_ROLE;
GRANT CREATE MINING MODEL TO DATICAL_SCHEMA_OWNER_ROLE;
GRANT CREATE INDEXTYPE TO DATICAL_SCHEMA_OWNER_ROLE;
GRANT CREATE PROFILE TO DATICAL_SCHEMA_OWNER_ROLE;
  
-- Permissions for working with EDITIONING VIEWS 
-- Use ALTER &lt;user&gt; ENABLE EDITIONS on the user to enable editioning
GRANT CREATE ANY EDITION TO DATICAL_SCHEMA_OWNER_ROLE;
GRANT DROP ANY EDITION TO DATICAL_SCHEMA_OWNER_ROLE;

-- Permissions That Are Not Recommended
-- GRANT CREATE PUBLIC SYNONYM TO DATICAL_SCHEMA_OWNER_ROLE;
-- GRANT CREATE PUBLIC DATABASE LINK TO DATICAL_SCHEMA_OWNER_ROLE;
 
-- Permissions required to run the AUTO GENERATED PERMISSIONS feature
GRANT SELECT ANY DICTIONARY TO DATICAL_SCHEMA_OWNER_ROLE;
 
-- Alternatively, this should be the more restrictive set of GRANTs that are needed for AUTO GENERATED PERMISSIONS:
-- GRANT SELECT ON DBA_SYS_PRIVS TO DATICAL_SCHEMA_OWNER_ROLE;
-- GRANT SELECT ON DBA_ROLE_PRIVS TO DATICAL_SCHEMA_OWNER_ROLE;
-- GRANT SELECT ON DBA_COL_PRIVS TO DATICAL_SCHEMA_OWNER_ROLE;
 
-- Gather metadata (forecast/snapshot/diff)
-- If we change the code to use the "USER" instead of the "DBA" views for snapshots in single user schema owner mode, then this permission could go away.
GRANT SELECT_CATALOG_ROLE TO DATICAL_SCHEMA_OWNER_ROLE;
 
-- OPTIONAL 
-- Permission so <MadCap:variable name="General.LBEnterprise" /> can check if the database is 12c but is running in 11g compatible mode
-- This needs to be executed as SYSDBA
GRANT SELECT ON V_$PARAMETER TO DATICAL_SCHEMA_OWNER_ROLE;
 
-- Permissions needed to capture storage options
GRANT EXECUTE ON SYS.UTL_FILE TO DATICAL_SCHEMA_OWNER_ROLE;</pre>
        <h2>DATICAL_PACKAGER_SCHEMA_OWNER_ROLE</h2>
        <p>This role adds permissions needed to perform packaging. Use it only for the REF database (project step).</p><b>DATICAL_PACKAGER_SCHEMA_OWNER</b><pre>CREATE ROLE DATICAL_PACKAGER_SCHEMA_OWNER_ROLE NOT IDENTIFIED;

-- When using the tracefileLocation=REMOTE, you will need to setup the following permissions.
-- Note: These permissions are only required on schemas running the Convert SQL Scripts command. This is only needed on the packaging / reference database.
GRANT ALTER SESSION TO DATICAL_PACKAGER_SCHEMA_OWNER_ROLE;

-- The following permissions are needed for backing up and restoring the database. This is only needed on the packaging / reference database.
GRANT EXP_FULL_DATABASE TO DATICAL_PACKAGER_SCHEMA_OWNER_ROLE;
GRANT IMP_FULL_DATABASE TO DATICAL_PACKAGER_SCHEMA_OWNER_ROLE;

-- The following permission is required if you you have Data Vault installed. This is only needed on the packaging / reference database.
GRANT BECOME USER TO DATICAL_PACKAGER_SCHEMA_OWNER_ROLE;</pre>
        <h2>DATICAL_TRACK_ROLE</h2>
        <p>This role should be managed separately. There are some overlaps with permissions in the DATICAL_SCHEMA_OWNER_ROLE.</p><b>DATICAL_TRACK_ROLE</b><pre>CREATE ROLE DATICAL_TRACK_ROLE NOT IDENTIFIED;

-- will create 2 tables - DATABASECHANGELOG and DATABASECHANGELOGLOCK
-- will insert records
grant create session,
  create procedure, create sequence, create table, create trigger, create type,
  create synonym, create view,
  create cluster, create indextype, create operator
to DATICAL_TRACK_ROLE;</pre>
        <h2>DATICAL_DATAPUMP_DIR Creation</h2>
        <p><MadCap:variable name="General.LBEnterprise" /> uses datapump as the default mechanism to backup and restore database schemas during Packaging. The DATICAL_DATAPUMP_DIR is only needed on the REF databases. Edit the script to set the path for the DATICAL_DATAPUMP_DIR to an appropriate location on the database server.</p><b>DATICAL_DATAPUMP_DIR</b><pre>-- Modify this to set the appropriate directory path.
CREATE OR REPLACE DIRECTORY DATICAL_DATAPUMP_DIR AS '&amp;PathToDatapumpDir';</pre>
        <p class="tip" MadCap:autonum="&lt;b&gt;Tip: &lt;/b&gt;">To use Data Pump in an Oracle RAC configuration, you must ensure that the directory object path (DATICAL_DATAPUMP_DIR by default) is on a cluster-wide file system. The directory object must point to shared physical storage that is visible to, and accessible from, all instances where Data Pump and/or external tables processes may run.</p>
        <h2>TRACE_FILE_DIR Creation</h2>
        <p>When using the tracefileLocation=remote option, the following directory object must be created. It is needed on the REF database only.</p><b>TRACE_FILE_DIR</b><pre>-- Modify this to set the appropriate directory path.
CREATE OR REPLACE DIRECTORY TRACE_FILE_DIR AS '&amp;PathToTracefileDir';</pre>
        <h3>Granting Roles and Permissions</h3>
        <p>Grant the roles to the managed schema account. Modify the script to grant the schema owner unlimited tablespace based upon your company policy and tablespace configuration.</p><b>REF Database Roles and Permissions</b><pre>-- Permissions for REF databases.
-- Modify this to set the appropriate account name for your SchemaOwner account.
GRANT DATICAL_SCHEMA_OWNER_ROLE TO &amp;SchemaOwner;
GRANT DATICAL_PACKAGER_SCHEMA_OWNER ROLE to &amp;SchemaOwner:

-- Directory permissions cannot be granted by a ROLE because the directory is checked through the utl_file.file_exists function.
GRANT READ, WRITE ON DIRECTORY DATICAL_DATAPUMP_DIR TO &amp;SchemaOwner;
GRANT ALL ON DIRECTORY TRACE_FILE_DIR TO &amp;SchemaOwner;

GRANT DATICAL_TRACK_ROLE TO &amp;SchemaOwner;

-- Unlimited tablespace access
-- GRANT UNLIMITED TABLESPACE TO &amp;SchemaOwner;
 -- –or-
-- Grant access to one or more specified tablespaces
-- ALTER USER &amp;SchemaOwner QUOTA UNLIMITED ON &amp;TablespaceName;</pre><b>non-REF Database Roles and Permissions</b><pre>-- Permissions for non-REF databases.
-- Modify this to set the appropriate account name for your SchemaOwner account.
GRANT DATICAL_SCHEMA_OWNER_ROLE TO &amp;SchemaOwner;
GRANT DATICAL_TRACK_ROLE TO &amp;SchemaOwner;

-- Unlimited tablespace access
-- GRANT UNLIMITED TABLESPACE TO &amp;SchemaOwner;
 -- –or–
-- Grant access to one or more specified tablespaces
-- ALTER USER &amp;SchemaOwner QUOTA UNLIMITED ON &amp;SchemaOwner;</pre>
        <p class="tip" MadCap:autonum="&lt;b&gt;Tip: &lt;/b&gt;">The roles granted to SchemaOwner must be DEFAULT roles. Be sure to validate that the accounts have all the required DEFAULT roles.</p><b>Validate Default Roles</b><pre>-- Verify permissions.
-- Modify this to set the appropriate account name for your SchemaOwner accounts.

select grantee, granted_role, default_role from dba_role_privs where grantee = '&amp;SchemaOwner' order by 1;

-- If DEFAULT_ROLE is not YES.  Execute the following.
alter user &amp;SchemaOwner default role DATICAL_ROLE;
alter user &amp;SchemaOwner default role DATICAL_PACKAGER_ROLE;  /* REF database only */
alter user &amp;SchemaOwner default role DATICAL_TRACK_ROLE;

-- Verify READ/WRITE permissions exist on the DATICAL_DATAPUMP_DIR (REF database only).
select table_name, privilege from DBA_TAB_PRIVS where grantee = '&amp;SchemaOwner';</pre>
        <h2 id="Single-SchemaProjects-OracleRolesandPermissions-PackagingRequirementforExclusiveConnection">Packaging Requirement for Exclusive Connection</h2>
        <p>Packaging requires that no other schema-owner users are connected to the database.</p>
        <ul>
            <li>Deployment Packager checks for connections to the REF database at the beginning of a packaging operation. Packaging stops and reports an error if there are other active connections.</li>
            <li>During packaging, if a schema-owner user attempts to connect to the database, packager warns and may stop.</li>
        </ul>
        <p>Deployment packager drops all objects in the SchemaOwner account before doing a restore. If there are other connections to the SchemaOwner, they may interfere with the process.</p>
    </body>
</html>