<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title><MadCap:variable name="Heading.Level1" /> | Enterprise Docs</title>
        <link rel="canonical" href="https://docs.liquibase.com/enterprise/devops/db-release-pipelines/alternate-methods-release-pipeline/manually-load-data/csv-files.html" />
        <meta name="description" content="Learn how to load data with a CSV file." />
    </head>
    <body>
        <h1><MadCap:variable name="General.LBEnterprise" /> and CSV Files</h1>
        <MadCap:snippetText src="../../../../../Z_Resources/Snippets/images/icon-enterprise-top.flsnp" />
        <h2>Loading Data With a CSV File</h2>
        <h3>Date and Datetime</h3>
        <p>Date and datetime must be in one of the following ISO formats:</p>
        <ul>
            <li><code>yyyy-MM-dd'T'HH:mm:ss</code>
            </li>
            <li><code>yyyy-MM-dd HH:mm:ss</code>
            </li>
            <li><code>yyyy-MM-dd'T'HH:mm:ss.S</code>
            </li>
        </ul>
        <h3>Path</h3>
        <p>If the CSV file is stored in the project resources directory - <code>{DaticalDBWorkspace}/{DaticalDBProjectName}/Resources</code>, then you can use a relative path to reference the file.</p>
        <ul>
            <li>Full Path: <code>/home/kevin/datical/ecomm/Resources/data/contacts.csv</code></li>
            <li>Relative Path:<code>data/contacts.csv</code></li>
        </ul>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">It is a good practice to create a <code>data</code> subdirectory in the <code>Resources</code> directory and keep your CSV files there.</p>
        <h3>Valid Data Types</h3>
        <p>When specifying columns in the <code>loadData</code> refactoring, you may choose from the following generic data types.</p>
        <ul>
            <li><code>BOOLEAN</code>
            </li>
            <li><code>NUMERIC</code>
            </li>
            <li><code>DATE</code>
            </li>
            <li><code>DATETIME</code>
            </li>
            <li><code>STRING</code>
            </li>
            <li><code>COMPUTED</code>
            </li>
            <li><code>SKIP</code>
            </li>
        </ul>
        <h2>Loading Data with a CSV file</h2>
        <p>Create the CSV file that contains the data you wish to have loaded. As you would expect, the first line needs to be the list of columns to be loaded. <MadCap:variable name="General.LBEnterprise" /> will create the INSERTs with the columns and data listed in the file. The following examples are in an Oracle database:</p>
        <h3>Changeset</h3>
        <p>While specifying the columns in the loadData refactoring is not explicitly required, providing this information gives us the data types so the best possible SQL is generated.</p><pre>&lt;changeSet author="Kevin" id="2014-01-25-data-load-1"&gt;&lt;loadData encoding="UTF-8" file="data/contacts.csv" tableName="contacts"&gt;&lt;column header="id" name="id" type="NUMERIC"/&gt;&lt;column header="activeflag" name="activeflag" type="BOOLEAN"/&gt;&lt;column header="firstname" name="firstname" type="STRING"/&gt;&lt;column header="lastname" name="lastname" type="STRING"/&gt;&lt;column header="age" name="age" type="NUMERIC"/&gt;&lt;column header="lastcall" name="lastcall" type="DATETIME"/&gt;&lt;/loadData&gt;&lt;/changeSet&gt;</pre>
        <h3>CSV File Path</h3><pre>{DaticalDBWorkspace}/{DaticalDBProjectName}/Resources/data/contacts.csv</pre>
        <h3>CSV File</h3><pre>id,activeflag,firstname,lastname,age,lastcall
contacts_seq.nextval,0,Chris,Klackson,32,2012-07-04 12:33:27
contacts_seq.nextval,1,Samantha,Sallers,47,2012-07-15 01:01:16
contacts_seq.nextval,1,Pete,Prosser,50,2012-07-15 06:45:48
contacts_seq.nextval,0,Joeseph,Scala,70,2012-07-28 03:14:32
contacts_seq.nextval,0,Umbert,Klassen,31,2012-09-17 22:11:08
contacts_seq.nextval,1,Gary,Finer,35,2012-09-17 18:25:09</pre>
        <h3 id="DaticalDBandCSVFiles-GeneratedSQLCode">Generated SQL Code</h3>
        <p>The CSV file generates the following SQL code:</p><pre>INSERT INTO INTUSER.contacts (id, activeflag, firstname, lastname, age, lastcall) VALUES (contacts_seq.nextval, 0, 'Chris', 'Klackson', 32, to_date('2012-07-04 12:33:27', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO INTUSER.contacts (id, activeflag, firstname, lastname, age, lastcall) VALUES (contacts_seq.nextval, 0, 'Samantha', 'Sallers', 47, to_date('2012-07-15 01:01:16', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO INTUSER.contacts (id, activeflag, firstname, lastname, age, lastcall) VALUES (contacts_seq.nextval, 0, 'Pete', 'Prosser', 50, to_date('2012-07-15 06:45:48', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO INTUSER.contacts (id, activeflag, firstname, lastname, age, lastcall) VALUES (contacts_seq.nextval, 0, 'Joeseph', 'Scala', 70, to_date('2012-07-28 03:14:32', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO INTUSER.contacts (id, activeflag, firstname, lastname, age, lastcall) VALUES (contacts_seq.nextval, 0, 'Umbert', 'Klassen', 31, to_date('2012-09-17 22:11:08', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO INTUSER.contacts (id, activeflag, firstname, lastname, age, lastcall) VALUES (contacts_seq.nextval, 0, 'Gary', 'Finer', 35, to_date('2012-09-17 18:25:09', 'YYYY-MM-DD HH24:MI:SS'));</pre>
        <h2>Updating Data with a CSV file</h2>
        <p>The previous example works nicely when you're loading data for the first time. But, what do you do if you want to use a CSV file to update data? How would that work? In this case, you'll want to use the <code>loadUpdateData</code> refactoring. It's similar to using loadData with one exception â€“ you need to specify the primary key. Once specified, we generate the appropriate "INSERT or UPDATE" SQL to be applied to your database. The following examples are in an Oracle database:</p>
        <h3 id="DaticalDBandCSVFiles-Changeset.1">Changeset</h3>
        <p>Make sure to specify the primary key column.</p>
        <p>While specifying the columns in the <code>loadUpdateData</code> refactoring is not explicitly required, providing this information gives us the data types so the best possible SQL is generated.</p><pre>&lt;changeSet id="2014-01-26-contacts-data-update-1" author="Kevin" &gt;&lt;loadUpdateData 
		encoding="UTF-8"file="data/updated_contacts_1.csv"tableName="contacts"primaryKey="id"&gt;&lt;column name="id" header="id" type="NUMERIC"/&gt;&lt;column name="activeflag" header="activeflag" type="NUMERIC"/&gt;&lt;column name="firstname" header="firstname" type="STRING"/&gt;&lt;column name="lastname" header="lastname" type="STRING"/&gt;&lt;column name="age" header="age" type="NUMERIC"/&gt;&lt;column name="lastcall" header="lastcall" type="DATETIME"/&gt;&lt;/loadUpdateData&gt;&lt;/changeSet&gt;</pre>
        <h3 id="DaticalDBandCSVFiles-CSVFilePath.1">CSV File Path</h3><pre>{DaticalDBWorkspace}/{DaticalDBProjectName}/Resources/data/updated_contacts_1.csv</pre>
        <h3 id="DaticalDBandCSVFiles-CSVFile.1">CSV File</h3><pre>id,activeflag,firstname,lastname,age,lastcall
1,1,Chris,Klackson,32,2013-07-04 12:33:27
2,0,Samantha,Sallers,47,2013-07-15 01:01:16
3,1,Pete,Prosser,50,2013-07-15 06:45:48
4,0,Joeseph,Scala,71,2012-07-28 03:14:32
5,0,Umbert,Klassenmass,31,2012-09-17 22:11:08
6,1,Gary,Finer,36,2013-09-17 18:25:09</pre>
        <h3 id="DaticalDBandCSVFiles-GeneratedSQLFile">Generated SQL File</h3>
        <p>The CSV file generates the following SQL code:</p><pre>DECLARE
v_reccount NUMBER := 0;
BEGIN
SELECT COUNT INTO v_reccount FROM INTUSER.contacts WHERE id = 1;
IF v_reccount = 0 THEN
INSERT INTO INTUSER.contacts (id, activeflag, firstname, lastname, age, lastcall) VALUES (1, 1, 'Chris', 'Klackson', 32, to_date('2013-07-04 12:33:27', 'YYYY-MM-DD HH24:MI:SS'));
ELSIF v_reccount = 1 THEN
UPDATE INTUSER.contacts SET activeflag = 1, age = 32, firstname = 'Chris', lastcall = to_date('2013-07-04 12:33:27', 'YYYY-MM-DD HH24:MI:SS'), lastname = 'Klackson' WHERE id = 1;
END IF;
END;
/; 
DECLARE
v_reccount NUMBER := 0;
BEGIN
SELECT COUNT INTO v_reccount FROM INTUSER.contacts WHERE id = 2;
IF v_reccount = 0 THEN
INSERT INTO INTUSER.contacts (id, activeflag, firstname, lastname, age, lastcall) VALUES (2, 0, 'Samantha', 'Sallers', 47, to_date('2013-07-15 01:01:16', 'YYYY-MM-DD HH24:MI:SS'));
ELSIF v_reccount = 1 THEN
UPDATE INTUSER.contacts SET activeflag = 0, age = 47, firstname = 'Samantha', lastcall = to_date('2013-07-15 01:01:16', 'YYYY-MM-DD HH24:MI:SS'), lastname = 'Sallers' WHERE id = 2;
END IF;
END;
/; 
DECLARE
v_reccount NUMBER := 0;
BEGIN
SELECT COUNT INTO v_reccount FROM INTUSER.contacts WHERE id = 3;
IF v_reccount = 0 THEN
INSERT INTO INTUSER.contacts (id, activeflag, firstname, lastname, age, lastcall) VALUES (3, 1, 'Pete', 'Prosser', 50, to_date('2013-07-15 06:45:48', 'YYYY-MM-DD HH24:MI:SS'));
ELSIF v_reccount = 1 THEN
UPDATE INTUSER.contacts SET activeflag = 1, age = 50, firstname = 'Pete', lastcall = to_date('2013-07-15 06:45:48', 'YYYY-MM-DD HH24:MI:SS'), lastname = 'Prosser' WHERE id = 3;
END IF;
END;
/; 
DECLARE
v_reccount NUMBER := 0;
BEGIN
SELECT COUNT INTO v_reccount FROM INTUSER.contacts WHERE id = 4;
IF v_reccount = 0 THEN
INSERT INTO INTUSER.contacts (id, activeflag, firstname, lastname, age, lastcall) VALUES (4, 0, 'Joeseph', 'Scala', 71, to_date('2012-07-28 03:14:32', 'YYYY-MM-DD HH24:MI:SS'));
ELSIF v_reccount = 1 THEN
UPDATE INTUSER.contacts SET activeflag = 0, age = 71, firstname = 'Joeseph', lastcall = to_date('2012-07-28 03:14:32', 'YYYY-MM-DD HH24:MI:SS'), lastname = 'Scala' WHERE id = 4;
END IF;
END;
/; 
DECLARE
v_reccount NUMBER := 0;
BEGIN
SELECT COUNT INTO v_reccount FROM INTUSER.contacts WHERE id = 5;
IF v_reccount = 0 THEN
INSERT INTO INTUSER.contacts (id, activeflag, firstname, lastname, age, lastcall) VALUES (5, 0, 'Umbert', 'Klassenmass', 31, to_date('2012-09-17 22:11:08', 'YYYY-MM-DD HH24:MI:SS'));
ELSIF v_reccount = 1 THEN
UPDATE INTUSER.contacts SET activeflag = 0, age = 31, firstname = 'Umbert', lastcall = to_date('2012-09-17 22:11:08', 'YYYY-MM-DD HH24:MI:SS'), lastname = 'Klassenmass' WHERE id = 5;
END IF;
END;
/; 
DECLARE
v_reccount NUMBER := 0;
BEGIN
SELECT COUNT INTO v_reccount FROM INTUSER.contacts WHERE id = 6;
IF v_reccount = 0 THEN
INSERT INTO INTUSER.contacts (id, activeflag, firstname, lastname, age, lastcall) VALUES (6, 1, 'Gary', 'Finer', 36, to_date('2013-09-17 18:25:09', 'YYYY-MM-DD HH24:MI:SS'));
ELSIF v_reccount = 1 THEN
UPDATE INTUSER.contacts SET activeflag = 1, age = 36, firstname = 'Gary', lastcall = to_date('2013-09-17 18:25:09', 'YYYY-MM-DD HH24:MI:SS'), lastname = 'Finer' WHERE id = 6;
END IF;
END;
/;</pre>
    </body>
</html>