<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:searchable="False">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/liquibase-pro/remote-files/remote-file-path-rules.html" />
        <meta name="description" content="Learn the remote file path rules that apply to Liquibase using S3." />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
    </head>
    <body>
        <MadCap:snippetBlock src="../../Z_Resources/Snippets/images/icon-pro-top.flsnp" />
        <h1>Remote File Path Rules</h1>
        <p>Below are all of the remote file path rules that apply to Liquibase using remote files. Review the example use cases and instructions to ensure it is the right avenue for your project.</p>
        <h2>Reference files with Liquibase CLI commands</h2>
        <p>You can reference files with Liquibase CLI commands depending on the file type and location. For more information, see <MadCap:xref href="remote-file-commands.htm">Reference  files with [%=General.Liquibase%] Commands</MadCap:xref>.</p>
        <h3>Remote Files referencing other remote files</h3>
        <p> A file in one remote file can reference a file in a different remote filebucket. In this example, a Flow file is located in a S3 bucket named <code>myS3Bucket</code>.</p><pre xml:space="preserve"><code class="language-text">flow --flow-file=s3://myBucket/liquibase.s3.flowfile.yaml</code></pre>
        <p>Below, we see a snippet of Flow File action code, which references a nested flow file in a separate S3 bucket.</p>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">You could use the same example with Azure Blob Storage by replacing the flowfile cmdArgs with an Azure path. For example <code>flow --flow-file=az://myContainer/liquibase.flowfile.yaml</code></p>
        <MadCap:codeSnippet>
            <MadCap:codeSnippetCopyButton />
            <MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve" style="mc-code-lang: JavaScript;">endStage:
  actions:
    - type: liquibase
      command: flow
      cmdArgs: {flowfile: "s3://dbateam/resources/liquibase.endstage.flowfile.yaml"}</MadCap:codeSnippetBody>
        </MadCap:codeSnippet>
        <h3>Use multiple locations in the same command</h3>
        <p>Resources are often stored in different locations and Liquibase allows you to find those separate locations in one command.</p>
        <p>For example, Let's say the <code>checks-settings.conf</code> you need is in the DBA’s resources bucket and the <code>flowfile.yaml</code> is in the DevOps Orchestration Team’s bucket. Simultaneously, the <MadCap:variable name="General.changelog" /> is stored locally while you are in dev, but then is relocated to the deploy subdirectory of the DevOps team. You should put the direct full path on the <code><MadCap:variable name="General.liquiPropFile" /></code> file as shown below.</p>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">The file exceptions to this rule are <MadCap:variable name="General.changelog" /> files, snapshot files, or native executor configuration files which must be split over <a href="searchpath.htm">searchpath</a>.</p>
        <p>
        Example of multiple S3 locations called on in the same command:</p><pre><code class="language-text">liquibase --search-path=s3://devopsteam/deploy --changelog-file=mychangelog.sql flow --flow-file=s3://devopsteam/orchestration/liquibase.production.flowfile.yaml</code></pre>
        <p>
			Example of multiple Azure Blob Storage locations called on in the same command:</p>
        <p>liquibase --search-path=az://devopsteam/deploy --changelog-file=mychangelog.sql flow --flow-file=az://devopsteam/orchestration/liquibase.production.flowfile.yaml</p>
        <h3>Absolute path</h3>
        <p>An absolute path is set on a file's property in the CLI, <code><MadCap:variable name="General.liquiPropFile" /></code> file, or any standard method.  It must include the full, direct path to the S3 file to find the file successfully. Absolute paths can be set for any file type except <MadCap:variable name="General.changelog" /> files, snapshot files, or native executor configuration files. When an absolute path to a file  is provided, Liquibase uses the file specified in the absolute path without checking <code>search-path</code>.</p>
        <p>The absolute path to the flow file is located in the S3 bucket named <code>myBucket</code> or the Azure blob named myContainer.</p><pre><code class="language-text">liquibase flow --flow-file=s3:/myBucket/my.flowfile.yaml</code></pre><pre>liquibase flow --flow-file=az:/myContainer/my.flowfile.yaml</pre>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">Paths for <MadCap:variable name="General.changelog" /> files, snapshot files, and native executor configuration files must be split over a relative path using <MadCap:xref href="../../parameters/search-path.htm">search-path</MadCap:xref>.</p>
        <h3><b>Relative path</b>
        </h3>
        <p>Relative Path is enabled with a combination of setting <MadCap:xref href="../../parameters/search-path.htm">search-path</MadCap:xref> and a relative path on file’s property, which are combined to form the complete S3 path to the file. Relative Path is the only way to successfully find <MadCap:variable name="General.changelog" /> files, snapshot files, or native executor configuration files.</p>
        <p><b>In this example, </b><code style="font-weight: bold;">search-path</code><b> is set to an S3 bucket:</b>
        </p><pre xml:space="preserve"><code class="language-text">liquibase --search-path=s3://myBucket/demo update --changelog-file=example-changelog.sql</code></pre>
        <p>Liquibase will look in the <code>s3://myBucket/demo</code> folder for the file titled:<code>example-changelog.sql</code>.<br /><br /><b>In this example, </b><code style="font-weight: bold;">search-path</code><b> is set to an Azure blob:</b></p><pre xml:space="preserve"><code class="language-text">liquibase --search-path=az://<i style="font-weight: normal; font-style: normal;">myContainer</i>/demo update --changelog-file=example-changelog.sql</code></pre>
        <p>Liquibase will look in the <code>az://<i style="font-weight: normal; font-style: normal;">myContainer</i>/demo</code> folder for the file titled:<code>example-changelog.sql</code>.</p>
        <p>For more information, see <MadCap:xref href="../../concepts/changelogs/how-liquibase-finds-files.htm">How [%=General.Liquibase%] Finds Files: [%=General.Liquibase%] Search Path</MadCap:xref> and <MadCap:xref href="searchpath.htm">Use search-path</MadCap:xref>.<br /></p>
        <h3>Sync S3 files to use locally</h3>
        <p>You may need to work offline and with local docker databases with the same operational files located in your S3 bucket. To do this, you can  download S3 files to work with them locally. In some cases, you will need to download an entire directory or a single file. To learn how to download objects from S3, see <a href="https://awscli.amazonaws.com/v2/documentation/api/latest/reference/s3/sync.html">AWS:&#160;sync</a>. It is important to note that Liquibase will not automatically sync the local files with S3 files. To learn how to sync local files with S3, see <a href="https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-cli-command-reference-sam-sync.html">AWS:&#160;sam sync</a>. Files must be in the same directory structure as they are on S3 to use them locally.</p>
        <h2>Related videos</h2>
        <h3>Learn more about Flow in <MadCap:variable name="General.LBPro" /></h3><iframe width="420" height="315" src="https://www.youtube.com/embed/QKV_yiRMHjw" class="center"></iframe>
        <h3>Learn how to use Flow files with s3</h3><iframe width="420" height="315" src="https://www.youtube.com/embed/nOv2YK8rfqI" class="center"></iframe>
    </body>
</html>