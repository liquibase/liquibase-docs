<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
    </head>
    <body>
        <MadCap:snippetBlock src="../../../Z_Resources/Snippets/images/icon-pro-top.flsnp" />
        <h1>Custom&#160;Policy Check property substitution</h1>
        <p>Liquibase users who utilize Custom Policy Checks can use property substitution when they are setting the <code>SCRIPT_ARGS</code> during <a href="https://docs.liquibase.com/liquibase-pro/policy-checks/custom-policy-checks/create-check.html#:~:text=custom_check_no_tables.py.-,Set SCRIPT_ARGUMENT,-. This allows you">check creation</a>. You can reference properties such as environment variables, CLI arguments, or values from the defaults file using standard substitution syntax. This enables dynamic and context-aware scripting, such as configuring behavior based on runtime attributes like the current Git branch or target environment. </p>
        <div class="js-tabs">
            <ul class="js-tablist" data-hx="h3">
                <li class="js-tablist__item"><a href="#properties_example" id="label_properties_example" class="js-tablist__link">liquibase.properties example</a>
                </li>
                <li class="js-tablist__item"><a href="#yaml_example" id="label_yaml_example" class="js-tablist__link">YAML example</a>
                </li>
                <li class="js-tablist__item"><a href="#json_example" id="label_json_example" class="js-tablist__link">JSON example</a>
                </li>
                <li class="js-tablist__item"><a href="#xml_example" id="label_xml_example" class="js-tablist__link">XML example</a>
                </li>
            </ul>
            <div id="sql_example" class="js-tabcontent">
                <p>There is no implementation for the <code>sqlFile</code>&#160;<MadCap:variable name="General.changetypes" /> because you can just put SQL directly into a SQL formatted <MadCap:variable name="General.changelog" />.</p>
            </div>
            <div id="yaml_example" class="js-tabcontent"><pre xml:space="preserve"><code class="language-yaml">databaseChangeLog:
-  changeSet:
    id: sqlFile-example
    author: liquibase-docs
    changes:
    - sqlFile:
        dbms:  '!h2,  oracle,  mysql'
        endDelimiter:  \nGO
        splitStatements:  true
        path:  my/path/file.sql
        stripComments:  true
    - rollback:
        - sqlFile:
            path: my/path/rollback.sql</code></pre>
            </div>
            <div id="json_example" class="js-tabcontent"><pre xml:space="preserve"><code class="language-json">{
  "databaseChangeLog": [
    {
      "changeSet": {
        "id": "sqlFile-example",
        "author": "liquibase-docs",
        "changes": [
          {
            "sqlFile": {
              "dbms": "!h2,  oracle,  mysql",
              "endDelimiter": "\nGO",
              "splitStatements": true,
              "path": "my/path/file.sql",
              "stripComments": true
            }
          },
          {
            "rollback": {
              "sqlFile": {
                "path": "my/path/rollback.sql"
              }
            }
          }
        ]
      }
    }
  ]
}</code></pre>
            </div>
            <div id="xml_example" class="js-tabcontent"><pre xml:space="preserve"><code class="language-xml"><MadCap:snippetText src="../../../Z_Resources/Snippets/code/liquibase-xsd-xml-changelog-closed.flsnp" />

    &lt;changeSet author="liquibase-docs" id="sqlFile-example"&gt;
        &lt;sqlFile dbms="!h2, oracle, mysql"
            encoding="UTF-8"
            endDelimiter="\nGO"
            path="my/path/file.sql"
            relativeToChangelogFile="true"
            splitStatements="true"
            stripComments="true"/&gt;
        &lt;rollback&gt;
            &lt;sqlFile path="my/path/rollback.sql"/&gt;
        &lt;/rollback&gt;
    &lt;/changeSet&gt;

&lt;/databaseChangeLog&gt;</code></pre>
            </div>
        </div>
    </body>
</html>