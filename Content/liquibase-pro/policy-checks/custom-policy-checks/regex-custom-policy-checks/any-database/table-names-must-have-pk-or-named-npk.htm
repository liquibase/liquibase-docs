<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/liquibase-pro/policy-checks/custom-policy-checks/regex-custom-policy-checks/any-database/table-names-must-have-pk-or-named-pk.html" />
        <meta name="description" content="TablesMustHavePkOrBeNamedNpk is a custom policy check that finds tables that have a Primary Key AND contain NPK in their name." />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
    </head>
    <body>
        <MadCap:snippetBlock src="../../../../../Z_Resources/Snippets/images/icon-pro-top.flsnp" />
        <h1><code>TablesMustHavePkOrBeNamedNpk</code>
        </h1>
        <p><code>TablesMustHavePkOrBeNamedNpk</code> is a custom policy check that finds tables that have a Primary Key AND contain <code>NPK</code> in their name. </p>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>Liquibase Prerequisites</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <ul>
                    <li>Install Liquibase 4.29.0+</li>
                    <li>Configure a valid <a href="../../../../license-key.htm"><MadCap:variable name="General.LBPro" /> license key</a></li>
                    <li>Ensure the Liquibase Checks extension&#160;is installed. <b>In Liquibase 4.31.0+, it is already installed in the <code class="language-text">/liquibase/internal/lib</code> directory, so no action is needed.</b> If the checks JAR is not installed, <a href="https://mvnrepository.com/artifact/org.liquibase.ext/liquibase-checks">download <code class="language-text">liquibase-checks-&lt;version&gt;.jar</code></a> and put it in the <code class="language-text">liquibase/lib</code> directory. <ul><li><b>Maven users only:</b> Add this dependency to your <code class="language-text">pom.xml</code> file:</li></ul></li><pre xml:space="preserve"><code class="language-xml">&lt;dependency&gt;
    &lt;groupId&gt;org.liquibase.ext&lt;/groupId&gt;
    &lt;artifactId&gt;liquibase-checks&lt;/artifactId&gt;
    &lt;version&gt;<MadCap:variable name="software-versions.latest-liquibase-checks" />&lt;/version&gt;
&lt;/dependency&gt;</code></pre>
                    <li>Java Development Kit 17+
(available for Open JDK and Oracle JDK)</li>
                    <li>Linux, macOS, or Windows operating system</li>
                    <li>Familiarity with Liquibase concepts: <MadCap:xref href="../../../../../concepts/changelogs/home.html">Changelog</MadCap:xref>, <MadCap:xref href="../../../../../concepts/changelogs/changeset.html">Changeset</MadCap:xref>, <MadCap:xref href="../../../../../commands/policy-checks/commands/home.htm">Policy Checks Commands</MadCap:xref>, <MadCap:xref href="../../../../../commands/policy-checks/command-parameters/checks-scope.htm">checks-scope</MadCap:xref>, and <MadCap:xref href="../../../../../commands/inspection/snapshot.html">snapshot</MadCap:xref></li>
                </ul>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>Python prerequisites</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <p>Before creating a custom policy check with Python, we recommend being familiar with:</p>
                <ul>
                    <li><a href="https://docs.python.org/3/reference/index.html">Python 3.10.14+</a>. (See here for the <a href="https://docs.python.org/3/tutorial/index.html">official Python tutorial</a>)</li>
                    <li>Optional: General coding and Python best practices which will improve your check performance:</li>
                    <ul>
                        <li>Efficient handling of structured data objects</li>
                        <li>Effective and targeted parsing of text, objects, and SQL</li>
                        <li>Using regular expressions and other pattern-matching tools within Python</li>
                        <li>Using Python <a href="https://docs.python.org/3/tutorial/venv.html">virtual environments</a>. Liquibase comes with a built-in virtual environment for Liquibase Custom Policy Checks. The built-in environment includes Liquibase Python modules and some common external Python modules—no configuration needed. However, if you want to install additional modules, or if you want your IDE to recognize the Liquibase modules, you must <MadCap:xref href="../../python-virtual-environment.htm">Create a Python Virtual Environment</MadCap:xref> separately.</li>
                    </ul>
                </ul>
                <p class="tip" MadCap:autonum="&lt;b&gt;Tip: &lt;/b&gt;"><b>Downloading Python itself is not required to create custom checks</b> in the Liquibase checks framework, but it may be useful to test checks against Python 3.10.14+.</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <h2>Step-by-Step</h2>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">These steps describe how to create the custom policy check. It does not exist by default in <MadCap:variable name="General.LBPro" />. This check uses Check Chaining which requires Liquibase Pro 4.27.0+.</p>
        <ol>
            <li>Enter this command into the CLI:&#160;<br /><code>liquibase checks enable --check-name=ObjectNameMustNotMatch
</code><![CDATA[	]]></li>
            <li>Give your check a short name for easier identification. In this example we will title the check: <br /><code>TablenameContainsNPK</code></li>
            <li>
                <p>Set the Severity to return a code of 0-4 when triggered. <br />Options: <code>'INFO'=0, 'MINOR'=1, 'MAJOR'=2, 'CRITICAL'=3, 'BLOCKER'=4</code></p>
            </li>
            <li>
                <p>Set 'OPERATOR' (options: STARTS_WITH, ENDS_WITH, CONTAINS, REGEXP, EQUALS) [STARTS_WITH]:<br /><code>CONTAINS</code></p>
            </li>
            <li>
                <p>Set the SEARCH_STRING to this valid regular expression:<br /><code>npk</code></p>
            </li>
            <li>
                <p>Set 'OBJECT_TYPES' to check, separated by commas (options: TABLE, COLUMN, SEQUENCE, INDEX, SCHEMA):<br /><code>TABLE</code><br /></p>
            </li>
            <li>
                <p>Set 'CASE_SENSITIVE' to <code>true</code> or <code>false</code> depending on how narrow you want your search to be.<br />In this example, we will set it to <code>false</code>.</p>
            </li>
            <li>
                <p>Enter this command into the CLI:<br /><code>liquibase checks enable --check-name=ConstraintMustExist</code><br /></p>
            </li>
            <li>
                <p>Give your check a short name for easier identification (up to 64 alpha-numeric characters only) [ConstraintMustExist1]:<br />TablesMustHavePK</p>
            </li>
            <li>
                <p>Set the Severity to return a code of 0-4 when triggered. <br />Options: <code>'INFO'=0, 'MINOR'=1, 'MAJOR'=2, 'CRITICAL'=3, 'BLOCKER'=4</code></p>
            </li>
            <li>
                <p>Set 'CONSTRAINT_OPERATOR' (options: STARTS_WITH, ENDS_WITH, CONTAINS, REGEXP, ALL) [STARTS_WITH]:<br /><code>ALL</code></p>
            </li>
            <li>
                <p>Enter the required constraint(s), separated by commas (options: NOT_NULL, UNIQUE, PRIMARYKEY, FOREIGNKEY, DEFAULT) [PRIMARYKEY]:<br /><code>PRIMARYKEY</code></p>
            </li>
            <li>
                <p>Set 'CASE_SENSITIVE' to <code>true</code> or <code>false</code> depending on how narrow you want your search to be.<br />In this example, we will set it to <code>true</code>.</p>
            </li>
            <li>
                <p>Set 'MESSAGE' [A match for regular expression &lt;SEARCH_STRING&gt; was detected in Changeset .]:<br /><code>All tables must have primary key.</code></p>
            </li>
            <li>
                <p>Enter this command into the CLI:<br /><code>liquibase checks copy --check-name=ChainedChecksTemplate</code></p>
            </li>
            <li>Give your check a short name for easier identification. In this example we will title the check: <br /><code>TablesWithoutPKNamingStandard</code></li>
            <li>
                <p>Set the Severity to return a code of 0-4 when triggered. <br />Options: <code>'INFO'=0, 'MINOR'=1, 'MAJOR'=2, 'CRITICAL'=3, 'BLOCKER'=4</code></p>
            </li>
            <li>
                <p>Enter the shortname, logic conditional (using &amp;&amp;, ||, !), and optional (groupings) for your checks. Example: "(shortname1 &amp;&amp; shortname2) || shortname3":<br /></p>
                <p><code>TablesMustHavePK &amp;&amp; TablenameContainsNPK</code>
                </p>
            </li>
            <li>
                <p>Set 'MESSAGE' [A match for regular expression &lt;SEARCH_STRING&gt; was detected in Changeset .]:<br /><code>Tables without primary keys must have npk in the table name</code></p>
            </li>
        </ol>
        <h2>Sample Passing Tables</h2>
        <MadCap:codeSnippet>
            <MadCap:codeSnippetCopyButton />
            <MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve" style="mc-code-lang: Python;">CREATE TABLE `tablenpk` (
  `id` int(11) NOT NULL,
  `name` varchar(50) NOT NULL
);</MadCap:codeSnippetBody>
        </MadCap:codeSnippet>
        <MadCap:codeSnippet>
            <MadCap:codeSnippetCopyButton />
            <MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve" style="mc-code-lang: Python;">CREATE TABLE `tablewithpk` (
  `id` int(11) NOT NULL,
  `name` varchar(50) NOT NULL,
  PRIMARY KEY (`id`)
);</MadCap:codeSnippetBody>
        </MadCap:codeSnippet>
        <h2>Sample Failing Table</h2>
        <MadCap:codeSnippet>
            <MadCap:codeSnippetCopyButton />
            <MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve" style="mc-code-lang: Python;">CREATE TABLE `tablewithoutpk` (
  `id` int(11) NOT NULL,
  `name` varchar(50) NOT NULL
);</MadCap:codeSnippetBody>
        </MadCap:codeSnippet>
        <h2>Sample Error Message</h2>
        <MadCap:codeSnippet>
            <MadCap:codeSnippetCopyButton />
            <MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve" style="mc-code-lang: Python;">DATABASE CHECKS
----------------
Validation of the database snapshot found the following issues:

Check Name:         Chained checks template (TablesWithoutPKNamingStandard)
Object Type:        table
Object Name:        tablewithoutpk
Object Location:    horses.horses.tablewithoutpk
Check Severity:     MAJOR (Return code: 2)
Message:            Tables without primary keys must have npk in the table name</MadCap:codeSnippetBody>
        </MadCap:codeSnippet>
    </body>
</html>