<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/liquibase-pro/policy-checks/custom-policy-checks/regex-custom-policy-checks/any-database/enumeration-list-context.html" />
        <meta name="description" content="enumerationListContext is a custom policy check that tells Liquibase that IF a context is provided, the context value must match a specified pattern. .   " />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
    </head>
    <body>
        <MadCap:snippetBlock src="../../../../../Z_Resources/Snippets/images/icon-pro-top.flsnp" />
        <h1><code>enumerationListContext</code>
        </h1>
        <p><code>enumerationListContext</code> is a custom policy check that tells <MadCap:variable name="General.Liquibase" /> that <b>if</b> a context is provided, the context value must match a specified pattern. This is different from <code>UserDefinedContextCheck</code> because context is <b>not required</b> in this check. <br /></p>
        <table style="margin-left: auto; margin-right: auto;">
            <col style="width: 69px;" />
            <col />
            <thead>
                <tr>
                    <th>Scope</th>
                    <th>Database</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><code>changelog</code>
                    </td>
                    <td>Relational</td>
                </tr>
            </tbody>
        </table>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>Liquibase Prerequisites</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <ul>
                    <li>Install Liquibase 4.29.0+</li>
                    <li>Configure a valid <a href="../../../../license-key.htm"><MadCap:variable name="General.LBPro" /> license key</a></li>
                    <li>Ensure the Liquibase Checks extension&#160;is installed. <b>In Liquibase 4.31.0+, it is already installed in the <code class="language-text">/liquibase/internal/lib</code> directory, so no action is needed.</b> If the checks JAR is not installed, <a href="https://mvnrepository.com/artifact/org.liquibase.ext/liquibase-checks">download <code class="language-text">liquibase-checks-&lt;version&gt;.jar</code></a> and put it in the <code class="language-text">liquibase/lib</code> directory. <ul><li><b>Maven users only:</b> Add this dependency to your <code class="language-text">pom.xml</code> file:</li></ul></li><pre xml:space="preserve"><code class="language-xml">&lt;dependency&gt;
    &lt;groupId&gt;org.liquibase.ext&lt;/groupId&gt;
    &lt;artifactId&gt;liquibase-checks&lt;/artifactId&gt;
    &lt;version&gt;<MadCap:variable name="software-versions.latest-liquibase-checks" />&lt;/version&gt;
&lt;/dependency&gt;</code></pre>
                    <li>Java Development Kit 17+
(available for Open JDK and Oracle JDK)</li>
                    <li>Linux, macOS, or Windows operating system</li>
                    <li>Familiarity with Liquibase concepts: <MadCap:xref href="../../../../../concepts/changelogs/home.html">Changelog</MadCap:xref>, <MadCap:xref href="../../../../../concepts/changelogs/changeset.html">Changeset</MadCap:xref>, <MadCap:xref href="../../../../../commands/policy-checks/commands/home.htm">Policy Checks Commands</MadCap:xref>, <MadCap:xref href="../../../../../commands/policy-checks/command-parameters/checks-scope.htm">checks-scope</MadCap:xref>, and <MadCap:xref href="../../../../../commands/inspection/snapshot.html">snapshot</MadCap:xref></li>
                </ul>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>Python prerequisites</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <p>Before creating a custom policy check with Python, we recommend being familiar with:</p>
                <ul>
                    <li><a href="https://docs.python.org/3/reference/index.html">Python 3.10.14+</a>. (See here for the <a href="https://docs.python.org/3/tutorial/index.html">official Python tutorial</a>)</li>
                    <li>Optional: General coding and Python best practices which will improve your check performance:</li>
                    <ul>
                        <li>Efficient handling of structured data objects</li>
                        <li>Effective and targeted parsing of text, objects, and SQL</li>
                        <li>Using regular expressions and other pattern-matching tools within Python</li>
                        <li>Using Python <a href="https://docs.python.org/3/tutorial/venv.html">virtual environments</a>. Liquibase comes with a built-in virtual environment for Liquibase Custom Policy Checks. The built-in environment includes Liquibase Python modules and some common external Python modules—no configuration needed. However, if you want to install additional modules, or if you want your IDE to recognize the Liquibase modules, you must <MadCap:xref href="../../python-virtual-environment.htm">Create a Python Virtual Environment</MadCap:xref> separately.</li>
                    </ul>
                </ul>
                <p class="tip" MadCap:autonum="&lt;b&gt;Tip: &lt;/b&gt;"><b>Downloading Python itself is not required to create custom checks</b> in the Liquibase checks framework, but it may be useful to test checks against Python 3.10.14+.</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <h2>Step-by-step</h2>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">These steps describe how to create the custom policy check. It does not exist by default in <MadCap:variable name="General.LBPro" />. This check uses Check Chaining which requires Liquibase Pro 4.27.0+.
</p>
        <h3>Create a context value for <MadCap:variable name="General.CompanyName" /> to look for</h3>
        <ol>
            <li>First we must provide Liquibase with a context value. <br />Enter <code>liquibase checks copy --check-name=UserDefinedContextCheck</code> into the CLI.</li>
            <li>
                <p>Give your check a short name for easier identification (up to 64 alpha-numeric characters only) In this example we will use <code>ContextEnvironmentsDevUatProd</code></p>
            </li>
            <li>
                <p>Set the Severity to return a code of 0-4 when triggered. <br />(options: 'INFO'=0, 'MINOR'=1, 'MAJOR'=2, 'CRITICAL'=3, 'BLOCKER'=4)</p>
            </li>
            <li>
                <p>Set the OPERATOR to one of these options: STARTS_WITH, ENDS_WITH, CONTAINS, REGEXP, EQUALS) [STARTS_WITH].<br />In this example, since we are creating a regex check, we will set the operator to <code>REGEXP</code>.</p>
            </li>
            <li>
                <p>Set the SEARCH_STRING to  this valid regular expression:<br /><code>(?i:(|(|!)DEV|(|!)UAT|(|!)PROD))</code></p>
            </li>
        </ol>
        <h3>Create the EnumerationListContext</h3>
        <ol>
            <li>
                <p>Enter this into the CLI to create the EnumerationListContext:<br /><code>liquibase checks copy --check-name=ChainedChecksTemplate</code></p>
            </li>
            <li>
                <p>Enter the shortname, logic conditional (using <code>&amp;&amp;</code>, <code>||</code>, <code>!</code>), and optional groupings for your checks. <br />Formula Example: <code>(shortname1 &amp;&amp; shortname2) || shortname3</code><br />In this example we will enter this into the CLI:<br /><code>(!ChangesetContextCheck &amp;&amp; ContextEnvironmentsDevUatProd)</code></p>
            </li>
            <li>
                <p>Set 'MESSAGE' A match for regular expression &lt;SEARCH_STRING&gt; was detected in Changeset .]:<br />For this check, we will enter:&#160;<code>If context is provided, value must be DEV, UAT, or PROD.</code></p>
            </li>
        </ol>
        <p>The regex custom policy check is created successfully.<br /></p>
        <h2>Sample Passing Changesets</h2>
        <MadCap:codeSnippet>
            <MadCap:codeSnippetCopyButton />
            <MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve" style="mc-code-lang: Python;">--changeset ASmith:table01 context:PROD
create table table01 (
	id numeric not null,
	name varchar (255)
);</MadCap:codeSnippetBody>
        </MadCap:codeSnippet>
        <h2>Sample Failing Changeset</h2>
        <MadCap:codeSnippet>
            <MadCap:codeSnippetCopyButton />
            <MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve" style="mc-code-lang: Python;">--changeset ASmith:table01 context:INVALID_ENVIRONMENT
create table table01 (
	id numeric not null,
	name varchar (255)
);</MadCap:codeSnippetBody>
        </MadCap:codeSnippet>
        <h2>Sample Error Message</h2>
        <MadCap:codeSnippet>
            <MadCap:codeSnippetCopyButton />
            <MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve" style="mc-code-lang: Python;">DATABASE CHECKS
----------------
Checks completed validation of the changelog and found the following issues:

Check Name:         Chained checks template (EnumerationListContext)
Changeset ID:       table01
Changeset Filepath: changelogs/changelog.sql
Check Severity:     MAJOR (Return code: 2)
Message:            If context is provided, value must be DEV, UAT, or PROD.</MadCap:codeSnippetBody>
        </MadCap:codeSnippet>
    </body>
</html>