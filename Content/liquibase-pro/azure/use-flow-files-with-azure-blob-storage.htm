<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
    </head>
    <body>
        <h1>How to use Liquibase Flow files with Azure Blob Storage</h1>
        <p>Liquibase <a href="../flow/home.htm">Flow</a> files let you define multi-step operations in a single YAML file, making it easier to automate and manage tasks, such as generating <a href="../../commands/inspection/snapshot.html">snapshots</a> and <a href="../../commands/inspection/diff.htm">diffs</a>. With the Liquibase Azure extension, you can store output files from these operations directly in Azure Blob Storage using the <code>az://</code> path format.</p>
        <p>This guide shows you how to create and customize a Flow file, and run it to generate a snapshot file in Azure Blob Storage. You can use the same pattern to configure other commands like <code>diff</code> or <code>updateSQL</code>. </p>
        <h2>1. Create a sample Flow File</h2>
        <p style="font-weight: bold;"><span style="font-weight: normal;">Be sure you are in a directory where you'd like to create your Flow file, run the following command in the CLI, and select option <b>3</b> when prompted:</span>
        </p><pre><code class="language-text">liquibase flow</code></pre>
        <p>A Flow file will be created in the current directory.</p>
        <h2>2. Edit the Flow file</h2>
        <p>Open the created <code>liquibase.flowfile.yaml</code> file and replace its contents with the following example code.</p>
        <p>Before you run the example code, be sure to:</p>
        <ul>
            <li>Update <i>your_blob_container</i> with the name of your blob storage container in Azure where you would like to upload the file.
</li>
            <li>Replace <i>test-snapshot.json</i> with your preferred output file name, if desired.</li>
        </ul>
        <h5>Example Code</h5><pre><code class="language-text">globalVariables:
&#160;&#160;ENV: DEV
stages:
&#160;&#160;Snapshot:
&#160;&#160;&#160;&#160;actions:
&#160;&#160;&#160;&#160;&#160;&#160;- type: liquibase
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;command: snapshot
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cmdArgs: 
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{ snapshot-format: json }
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;globalArgs: 
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{ output-file: 'az://<i style="font-weight: bold;">your_blob_container</i>/<i>test-snapshot.json</i>' }
</code></pre>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">The <code>output-file</code> path uses the Azure Blob Storage az:// format and points to the container where the snapshot will be stored.</p>
        <h2>3. Run the Flow File</h2>
        <p>Run the flow file using the command example code.</p>
        <p>Be sure to set <code style="font-style: italic;">your_flowfile_path</code> to the file path to your flow file. </p>
        <p><code class="language-text">liquibase flow --flowfile=<i style="font-weight: bold;">your_flowfile_path</i></code>
        </p>
        <h2>4. Confirm the File was Uploaded in Azure</h2>
        <p>1. Go to the <a href="https://portal.azure.com/">Azure Portal</a>.</p>
        <p style="font-weight: normal;">2. Navigate to your <b>Storage Account</b>.</p>
        <p style="font-weight: normal;">3. Go to <b>Data Storage &gt;&#160;Containers</b>, then open your target container.</p>
        <p>4. Verify that your flow file appears in the container.</p>
        <h2>Related Topics</h2>
        <ul>
            <li><a href="load-and-execute-changelogs-flows-and-properties-from-azure-blog-storage.htm">Load and execute changelogs, flows, and properties from Azure Blob storage</a>
            </li>
            <li><a href="store-snapshots-diffs-and-sql-output-from-Liquibase-in-Azure-Blob-Storage.htm">Store Snapshots, Diffs, and SQL Output from Liquibase in Azure Blob Storage</a>
            </li>
        </ul>
    </body>
</html>