<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:searchable="False">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/liquibase-pro/native-executors/mongodb-mongosh.html" />
        <meta name="description" content="The page describes how to use the Mongosh integration and runWith attribute with Liquibase Pro and MongoDB Pro." />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
    </head>
    <body>
        <MadCap:snippetBlock src="../../Z_Resources/Snippets/images/icon-pro-top.flsnp" />
        <h1>Use Native Executors with MongoDB Pro</h1>
        <p>This page describes how to use Liquibase with the Mongosh native executor on a <a href="../../start/tutorials/mongodb-pro/home.htm">MongoDB Pro database</a>.</p>
        <h2>Prerequisites</h2>
        <ul>
            <li>Use Liquibase&#160;<MadCap:conditionalText MadCap:conditions="command-executors.mongosh">4.20.0</MadCap:conditionalText> or later.
            </li>
            <li>Add <MadCap:conditionalText MadCap:conditions="command-executors.mongosh">Mongosh</MadCap:conditionalText> to your <code>PATH</code> environment variable. Alternatively, pass its location in the <code>liquibase.<MadCap:conditionalText MadCap:conditions="command-executors.mongosh">mongosh</MadCap:conditionalText>.conf</code> file or from the command prompt during runtime. See <code>liquibase.<MadCap:conditionalText MadCap:conditions="command-executors.mongosh">mongosh</MadCap:conditionalText>.path</code> in the <MadCap:xref href="#SQL">arguments</MadCap:xref> section.</li>
        </ul>
        <h2>Setup</h2>
        <p>Liquibase searches the executor location in the following order: runtime arguments, <code>.conf</code> file values, and then your <code>PATH</code>.</p>
        <ol>
            <li>Add the <code><MadCap:xref href="../../concepts/changelogs/attributes/runwith.htm">runWith</MadCap:xref></code>&#160;<MadCap:variable name="General.Param/Attribute" /> to the needed changesets in the changelog:
            </li>
            <ul>
                <li><b>SQL:</b>&#160;<code>runWith:<MadCap:conditionalText MadCap:conditions="command-executors.mongosh">mongosh</MadCap:conditionalText></code></li>
                <li><b>XML:</b>&#160;<code>runWith="<MadCap:conditionalText MadCap:conditions="command-executors.mongosh">mongosh</MadCap:conditionalText>"</code></li>
                <li><b>YAML:</b>&#160;<code>runWith: <MadCap:conditionalText MadCap:conditions="command-executors.mongosh">mongosh</MadCap:conditionalText></code></li>
                <li><b>JSON:</b>&#160;<code>"runWith": "<MadCap:conditionalText MadCap:conditions="command-executors.mongosh">mongosh</MadCap:conditionalText>"</code></li>
            </ul>
            <li>Specify the <MadCap:xref href="#SQL">arguments</MadCap:xref> in one of the following ways:
            </li>
            <ul>
                <li>Pass the values at runtime on the command line</li>
                <li>Add the values to <code>liquibase.<MadCap:conditionalText MadCap:conditions="command-executors.mongosh">mongosh</MadCap:conditionalText>.conf</code> or the <a href="../../concepts/connections/creating-config-properties.html">Liquibase properties file</a>.</li>
                <li>Set the values as <a href="../../concepts/connections/liquibase-environment-variables.htm">environment variables</a></li>
                <li>Run the values as <a href="../../concepts/connections/java-opts-environment-variable.htm">Java system properties</a> (<code>JAVA_OPTS</code>) along with any command at the command prompt:</li>
                <MadCap:dropDown>
                    <MadCap:dropDownHead>
                        <MadCap:dropDownHotspot style="font-size: 12pt;">Windows</MadCap:dropDownHotspot>
                    </MadCap:dropDownHead>
                    <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-text">set JAVA_OPTS=-Dliquibase.<MadCap:conditionalText MadCap:conditions="command-executors.mongosh">mongosh</MadCap:conditionalText>.&lt;option&gt;=&lt;value&gt; &amp;&amp; liquibase &lt;command&gt; --changelog-file=my_script.<MadCap:conditionalText MadCap:conditions="command-executors.mongosh">js</MadCap:conditionalText></code></pre>
                    </MadCap:dropDownBody>
                </MadCap:dropDown>
                <MadCap:dropDown>
                    <MadCap:dropDownHead>
                        <MadCap:dropDownHotspot style="font-size: 12pt;">macOS/Linux</MadCap:dropDownHotspot>
                    </MadCap:dropDownHead>
                    <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-text">export JAVA_OPTS=-Dliquibase.<MadCap:conditionalText MadCap:conditions="command-executors.mongosh">mongosh</MadCap:conditionalText>.&lt;option&gt;=&lt;value&gt; &amp;&amp; liquibase &lt;command&gt; --changelog-file=my_script.<MadCap:conditionalText MadCap:conditions="command-executors.mongosh">js</MadCap:conditionalText></code></pre>
                    </MadCap:dropDownBody>
                </MadCap:dropDown>
            </ul>
            <li>Run a <MadCap:variable name="General.Liquibase" /> command:
            </li>
            <p class="example" MadCap:autonum="&lt;b&gt;Example: &lt;/b&gt;"><code>liquibase status --changelog-file=my_script.<MadCap:conditionalText MadCap:conditions="command-executors.mongosh">js</MadCap:conditionalText></code>
            </p>
            <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">If the command fails, you will receive an error message. However, if you add a property that is not used in Liquibase to the <code>liquibase.<MadCap:conditionalText MadCap:conditions="command-executors.mongosh">mongosh</MadCap:conditionalText>.conf</code> file, no error occurs. Liquibase only ignores it.</p>
        </ol>
        <h2>Using <code>runWith</code> in your changelogs</h2>
        <p>In Liquibase, you organize changes into one or more <a href="../../concepts/changelogs/home.html">changelogs</a>. Your changelogs contain individual changes to your database.</p>
        <MadCap:snippetBlock src="../../Z_Resources/Snippets/text/database-tutorials/database-mongodb-changelog-formats.flsnp" />
        <h2>Native MongoD Shell (<code>mongosh</code>) scripts</h2>
        <MadCap:snippetBlock src="../../Z_Resources/Snippets/text/database-tutorials/database-mongodb-native-mongosh.flsnp" />
        <h2><a name="runWith"></a><code>runWith</code> and <code>mongosh</code> examples</h2>
        <h3>Formatted Mongo changelogs</h3>
        <p>With Liquibase MongoDB Pro extension 1.3.0+, you can use a formatted Mongo changelog for MongoDB Pro, similar to a formatted SQL changelog. This lets you use mongosh scripts written in MongoDB Query Language (MQL) directly in Liquibase while also having access to all Liquibase features.</p>
        <p>All Liquibase formatted Mongo changelogs must use the file extension .JS or .js (JavaScript). They must also begin with a changelog header: // liquibase formatted mongodb. Your changesets must each specify runWith:mongosh. For example:</p>
        <MadCap:snippetBlock src="../../Z_Resources/Snippets/text/database-tutorials/database-mongodb-formatted-mongo.flsnp" />
        <h3>XML, YAML, and JSON changelogs</h3>
        <MadCap:snippetBlock src="../../Z_Resources/Snippets/text/database-tutorials/database-mongodb-modeled-changelogs.flsnp" />
        <h2><a name="SQL"></a>Mongosh integration arguments</h2>
        <div class="js-tabs">
            <ul class="js-tablist" data-existing-hx="h3">
                <li class="js-tablist__item"><a href="#cli" id="label_cli" class="js-tablist__link">CLI</a>
                </li>
                <li class="js-tablist__item"><a href="#flow" id="label_flow" class="js-tablist__link">Flow</a>
                </li>
                <li class="js-tablist__item"><a href="#properties_file" id="label_properties_file" class="js-tablist__link"><code>liquibase.properties</code></a>
                </li>
                <li class="js-tablist__item"><a href="#java_opts" id="label_java_opts" class="js-tablist__link"><code>JAVA_OPTS</code></a>
                </li>
                <li class="js-tablist__item"><a href="#envar" id="label_envar" class="js-tablist__link">Environment variable</a>
                </li>
            </ul>
            <div id="cli" class="js-tabcontent">
                <MadCap:snippetBlock src="../../Z_Resources/Snippets/text/command-parameters-global-cmd/param-lists/executor-mongodb-mongosh.flsnp" MadCap:conditionTagExpression="include[command-parameters-format.cli]" />
            </div>
            <div id="flow" class="js-tabcontent">
                <MadCap:snippetBlock src="../../Z_Resources/Snippets/text/command-parameters-global-cmd/param-lists/executor-mongodb-mongosh.flsnp" MadCap:conditionTagExpression="include[command-parameters-format.flow]" />
            </div>
            <div id="properties_file" class="js-tabcontent">
                <MadCap:snippetBlock src="../../Z_Resources/Snippets/text/command-parameters-global-cmd/param-lists/executor-mongodb-mongosh.flsnp" MadCap:conditionTagExpression="include[command-parameters-format.properties-file]" />
            </div>
            <div id="java_opts" class="js-tabcontent">
                <MadCap:snippetBlock src="../../Z_Resources/Snippets/text/command-parameters-global-cmd/param-lists/executor-mongodb-mongosh.flsnp" MadCap:conditionTagExpression="include[command-parameters-format.java-opts]" />
            </div>
            <div id="envar" class="js-tabcontent">
                <MadCap:snippetBlock src="../../Z_Resources/Snippets/text/command-parameters-global-cmd/param-lists/executor-mongodb-mongosh.flsnp" MadCap:conditionTagExpression="include[command-parameters-format.envar]" />
            </div>
        </div>
        <h2>Related links</h2>
        <ul>
            <li>
                <MadCap:xref href="../../start/tutorials/mongodb-pro/home.htm">Using [%=General.Liquibase%] with MongoDB Pro</MadCap:xref>
            </li>
        </ul>
    </body>
</html>