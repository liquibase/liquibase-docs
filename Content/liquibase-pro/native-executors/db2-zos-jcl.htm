<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
    </head>
    <body>
        <h1>Use native executors with DB2 z/OS</h1>
        <p>Liquibase supports the JCL native executor to integrate with DB2 z/OS&#160;mainframe operations into your Liquibase change management workflow. This allows you to submit JCL jobs and track them in the Liquibase changelog by using the <a href="../../concepts/changelogs/attributes/runwith.htm">runWith</a> attribute on <a href="../../concepts/changelogs/changeset.html">changesets</a> in the <a href="../../concepts/changelogs/home.html">changelog</a> that require JCL jobs.</p>
        <p>This article walks through how to add a column in the middle of a table on DB2 z/OS. Since DB2 does not support reordering columns directly, this operation requires unloading the table data, dropping the table, recreating it with the new column in the desired position, and then reloading the data.</p>
        <p>While this specific example focuses on adding a column, the broader goal is to demonstrate how you can use Liquibase’s native JCL executor to automate any operation on DB2 z/OS that requires mainframe utilities, such as UNLOAD, LOAD,  or any custom JCL-based task.</p>
        <p>By following this pattern, you can adapt the same changelog structure to perform more complex or organization-specific workflows that integrate JCL jobs into your deployment pipeline.</p>
        <h2>1. Configure your liquibase.properties file</h2>
        <p>To use the JCL executor with Liquibase on DB2 z/OS, you must set several required properties in your <code><a href="../../concepts/connections/creating-config-properties.html">liquibase.properties</a></code> file.</p>
        <p>Before using the example properties file below, be sure to:</p>
        <ul>
            <li>Replace <i>your_hostname</i>, <i>your_port</i>, and <i>your_db_name</i> in the connection url for your database </li>
            <li>Replace <i>your_username</i> and <i>your_password</i>
with the username and password for authenticating with the DB2 instance </li>
            <li>Replace <i>your_schema</i> with the name of the DB2 schema Liquibase should use.</li>
            <li style="font-style: normal;">Set <i>liquibase.jcl.create.logFile</i> to <i>true</i> if you would like Liquibase to create additional logs for JCL. Logs are updated for each change type.</li>
            <li>Replace <i>/logs</i> with your preferred output file path. If you do not specify a <code>liquibase.jcl.logFilePath</code>, logs will be written to your system’s temporary folder. However, temporary folders are not intended for long-term storage and files stored there may be automatically removed by the operating system at any time. We recommend setting <code>liquibase.jcl.logFilePath</code> to a specific, persistent location to ensure logs are retained as needed.</li>
            <li>Set <i>liquibase.jcl.overwrite.logFile</i> to <i>true</i> if you would like Liquibase to create a new file for each changeset. In this implementation, each JCL&#160;has its own log file. Log files are named based on their <i>changeset id</i> and <i>author</i>. If you have the changeset 
			<code>--changeset liquibase-deployer:unload-table-1 runWith:jcl</code>, the changset id will be <i>unload-table-1</i>. If the author is <i>liquibase-developer</i>, the output will be named <i>unload-table-1-liquibase-deployer.log</i>.<br /><br />This property is set to <i>false</i> by default and will append the existing log file each time unless you set it to <i>true</i>.</li>
        </ul>
        <h3>Example liquibase.properties file</h3><pre><code class="language-text">
driver: com.ibm.db2.jcc.DB2Driver
url: jdbc:db2://your_hostname:your_port/your_db_name
username: your_username
password: your_password
defaultSchemaName: your_schema

liquibase.jcl.create.logFile: true
liquibase.jcl.logFilePath: /logs
liquibase.jcl.overwrite.logFile: true
liquibase.reports.enabled: true

		</code></pre>
        <h2>2. Configure your changelog</h2>
        <p>The following changelog demonstrates how to add a column to the middle of a table on DB2 z/OS. Since DB2 doesn’t allow altering column order directly, you’ll need to:</p>
        <ol>
            <li>Unload the table's data
            </li>
            <li>Drop the table            </li>
            <li>Create the table with the new column
            </li>
            <li>Load the table's data</li>
        </ol>
        <p>Each of these steps is represented by a changeset in the changelog.</p>
        <p>Before using this changelog, make sure you’ve created the appropriate <code>.jcl</code> and <code>.sql</code> files for each step and saved them in the correct paths referenced by <code>--include</code> file. </p>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">We support <a href="../../concepts/changelogs/property-substitution.html">property substitution</a> in your JCL scripts.</p>
        <p>You can use these files if you'd like to use the example code:</p>
        <ul>
            <li><a href="../../Resources/Files/load.jcl" download="load.jcl">load.jcl</a>
            </li>
            <li><a href="../../Resources/Files/unload.jcl" download="unload.jcl">unload.jcl</a>
            </li>
            <li><a href="../../Resources/Files/create-alter.sql" download="create-alter.sql">create-alter.sql</a>
            </li>
            <li><a href="../../Resources/Files/drop.sql" download="drop.sql">drop.sql</a>
            </li>
        </ul>
        <h3>
            <br />Example Code</h3>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">While this example focuses on modifying table structure, the same pattern applies to any mainframe-native operation that you need to integrate into a Liquibase workflow. The <code>runWith:jcl</code> option enables Liquibase to submit and manage these operations natively on DB2 z/OS, so be sure to add this to any changesets that include jcl.</p>
        <div class="js-tabs" MadCap:conditions="database.default">
            <ul class="js-tablist" data-hx="h3">
                <li class="js-tablist__item"><a href="#sql_example" id="label_sql_example" class="js-tablist__link">SQL example</a>
                </li>
                <li class="js-tablist__item"><a href="#yaml_example" id="label_yaml_example" class="js-tablist__link">YAML example</a>
                </li>
                <li class="js-tablist__item"><a href="#json_example" id="label_json_example" class="js-tablist__link">JSON example</a>
                </li>
                <li class="js-tablist__item"><a href="#xml_example" id="label_xml_example" class="js-tablist__link">XML example</a>
                </li>
            </ul>
            <div id="sql_example" class="js-tabcontent"><pre xml:space="preserve"><code class="language-sql">--liquibase formatted sql

--changeset liquibase-deployer:unload-table-1 runWith:jcl
--comment: Unloading table data on DB2 z/OS
--file path:jcl/unload.jcl

--changeset liquibase-deployer:drop-objects-1
--comment Drop objects ahead of creation of table with new column in middle
--file path:sql/drop.sql 

--changeset liquibase-deployer:create-alter-objects-1
--comment: Creating new table with new column in middle
--file path:sql/create-alter.sql

--changeset liquibase-deployer:load-table-1 runWith:jcl
--comment: Loading table data on DB2 z/OS
--file path:jcl/load.jcl</code></pre>
            </div>
            <div id="yaml_example" class="js-tabcontent"><pre xml:space="preserve"><code class="language-yaml">databaseChangeLog:
<br />- changeSet:
	id: unload-table-1
	author: liquibase-deployer
	runWith: jcl
	changes:
	- sqlFile:
		path: jcl/unload.jcl
		relativeToChangelogFile: true

	- changeSet:
		id: drop-objects-1
		author: liquibase-deployer
		changes:
		- sqlFile:
			path: sql/drop.sql
			relativeToChangelogFile: true

	- changeSet:
		id: create-alter-objects-1
		author: liquibase-deployer
		changes:
		- sqlFile:
			path: sql/create-alter.sql
			relativeToChangelogFile: true

	- changeSet:
		id: load-table-1 
		author: liquibase-deployer
		runWith: jcl
		changes:
		- sqlFile:
			path: jcl/load.jcl
			relativeToChangelogFile: true</code></pre>
            </div>
            <div id="json_example" class="js-tabcontent"><pre xml:space="preserve"><code class="language-json">
{<br />&#160;&#160;"databaseChangeLog": [<br />&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;"changeSet": {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"id": "unload-table-1",<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"author": "liquibase-deployer",<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"runWith": "jcl",<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"changes": [<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"sqlFile": {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"path": "jcl/unload.jcl",<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"relativeToChangelogFile": "true"<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;]<br />&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;},<br />&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;"changeSet": {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"id": "drop-objects-1",<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"author": "liquibase-deployer",<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"changes": [<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"sqlFile": {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"path": "sql/drop.sql",<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"relativeToChangelogFile": "true"<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;]<br />&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;},<br />&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;"changeSet": {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"id": "create-alter-objects-1",<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"author": "liquibase-deployer",<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"changes": [<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"sqlFile": {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"path": "sql/create-alter.sql",<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"relativeToChangelogFile": "true"<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;]<br />&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;},<br />&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;"changeSet": {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"id": "load-objects-1",<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"author": "liquibase-deployer",<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"runWith": "jcl",<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"changes": [<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"sqlFile": {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"path": "jcl/load.jcl",<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"relativeToChangelogFile": "true"<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;]<br />&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;}<br />&#160;&#160;]<br />}
</code></pre>
            </div>
            <div id="xml_example" class="js-tabcontent"><pre xml:space="preserve"><code class="language-xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml&#160;version="1.1"&#160;encoding="UTF-8"&#160;standalone="no"?&gt;
&lt;databaseChangeLog&#160;<br />xmlns="http://www.liquibase.org/xml/ns/dbchangelog"&#160;<br />xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"&#160;<br />xmlns:pro="http://www.liquibase.org/xml/ns/pro"&#160;<br />xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&#160;<br />xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext&#160;http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd&#160;http://www.liquibase.org/xml/ns/pro&#160;http://www.liquibase.org/xml/ns/pro/liquibase-pro-latest.xsd&#160;http://www.liquibase.org/xml/ns/dbchangelog&#160;http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd"&gt;
&#160;&#160;&lt;property&#160;name="PORT"&#160;value="6432"/&gt;
&#160;&#160;&lt;changeSet&#160;author="wesley&#160;(generated)"&#160;id="1692462595665-1"&#160;runWith="jcl"&gt;
&#160;&#160;&#160;&#160;&lt;sqlFile&#160;path="jcl/unload.jcl"/&gt;
&#160;&#160;&lt;/changeSet&gt;
&#160;&#160;&lt;changeSet&#160;author="wesley&#160;(generated)"&#160;id="1692462595665-2"&gt;
&#160;&#160;&#160;&#160;&lt;sqlFile&#160;path="sql/drop.sql"/&gt;
&#160;&#160;&lt;/changeSet&gt;
&#160;&#160;&lt;changeSet&#160;author="wesley&#160;(generated)"&#160;id="1692462595665-3"&gt;
&#160;&#160;&#160;&#160;&lt;sqlFile&#160;path="sql/create-alter.sql"/&gt;
&#160;&#160;&lt;/changeSet&gt;
&#160;&#160;&lt;changeSet&#160;author="wesley&#160;(generated)"&#160;id="1692462595665-4"&#160;runWith="jcl"&gt;
&#160;&#160;&#160;&#160;&lt;sqlFile&#160;path="jcl/load.jcl"/&gt;
&#160;&#160;&lt;/changeSet&gt;
&lt;/databaseChangeLog&gt;		</code></pre>
            </div>
        </div>
        <h2>3. Run the workflow</h2>
        <p>Once you have your liquibase.properties set up and your changelog file created, you run your changelog file to test that your operations complete successfully. </p>
        <p style="font-style: normal;">Use the example code to apply the changelog. Be sure to update <i>your_changelog_file</i>.</p><pre><code class="language-text">liquibase update --changelog-file=your_changelog_file</code></pre>
        <p>If the command is successful, you'll see:</p><pre><code class="language-text">Liquibase command 'update' was executed successfully</code></pre>
        <p>If there is an error you'll see:</p><pre><code class="language-text">JOB FAILED - JCL ERROR</code></pre>
        <p>You should also see a Liquibase update report open in a browser window with the execution details including the JCL script and generated SQL that you can use to troubleshoot any issues.</p>
    </body>
</html>