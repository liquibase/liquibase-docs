<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:searchable="False" style="mc-template-page: url('../../../Z_Resources/MainPages/no-sidenav.flmsp');">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/commands/quality-checks/checks/lab-quality-checks.html" />
        <meta name="description" content="This page contains a list of all the commands available for Quality Checks and gives you more in-depth information on how to use them." />
    </head>
    <body>
        <h1> <MadCap:variable name="General.LBPro" /> Quality Checks Commands for Databases</h1>
        <MadCap:snippetText src="../../../Z_Resources/Snippets/images/icon-pro-top.flsnp" />
        <p>
            The Quality Checks for databases  are only available with a  <MadCap:variable name="General.LBPro" /> license. These checks allow you to confirm the presence of specific objects and conditions in the database to ensure the integrity of the database. To execute the new quality checks and improve the quality of your database changes, use the <code>quality checks</code> for databases listed below. To learn how to apply your checks to a specific scope, see the <a href="../command-arguments/checks-scope.htm"><code>checks-scope</code></a> parameter. For more information about using quality checks, see <MadCap:xref href="../home.htm">Quality Checks</MadCap:xref>.</p>
        <p>The new database checks are:</p>
        <ul>
            <li>
                <MadCap:xref href="constraint-must-exist.htm">ConstraintMustExist</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="table-comment-check.htm">TableCommentCheck</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="table-comment-pattern-check.htm">TableCommentPatternCheck</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="table-column-limit.htm">TableColumnLimit</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="object-name-must-match.htm">ObjectNameMustMatch</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="object-name-must-not-match.htm">ObjectNameMustNotMatch</MadCap:xref>
            </li>
        </ul>
        <h2><code>checks</code> command</h2>
        <p>The <code>liquibase checks</code> command is a command group that lets you show, customize, and run quality checks.  For more information, see <MadCap:xref href="../workflows/home.htm">Getting Started with the checks Command</MadCap:xref>. Many checks can (or must) be customized and the table below lists the different customization options.</p>
        <p>You can optionally enable the <code>--verbose</code> command while using the <code>checks run</code> command to expand the output to display a deeper level of detail about tables or other database objects checked. Outputs are listed below to show the difference between a <code>--verbose</code> output and a non <code>--verbose</code> output.</p>
        <h2><code>checks</code> names</h2>
        <h3>ConstraintMustExist</h3>
        <table>
            <col style="width: 100px;" />
            <col style="width: 500px;" />
            <tbody>
                <tr>
                    <td>Short name</td>
                    <td><code>ConstraintMustExist</code> </td>
                </tr>
                <tr>
                    <td>Description</td>
                    <td>The <code>ConstraintMustExist</code> check looks for and alerts you when the specified table does not contain the required Constraint(s).</td>
                </tr>
                <tr>
                    <td>Type </td>
                    <td>Dynamic</td>
                </tr>
                <tr>
                    <td>Enabled by default</td>
                    <td>No</td>
                </tr>
                <tr>
                    <td>Scope</td>
                    <td>Database</td>
                </tr>
            </tbody>
        </table>
        <h3>TableCommentPatternCheck</h3>
        <table>
            <col style="width: 100px;" />
            <col style="width: 500px;" />
            <tbody>
                <tr>
                    <td>Short name</td>
                    <td><code>TableCommentPatternCheck</code> </td>
                </tr>
                <tr>
                    <td>Description</td>
                    <td>The <code>TableCommentPatternCheck</code> check triggers when specific user-supplied patterns are found in  Table Comments.</td>
                </tr>
                <tr>
                    <td>Configurable Attributes</td>
                    <td>
                        <p>Attribute Name:&#160;ConstraintOperator </p>
                        <p>Type:&#160;String / enum</p>
                        <p>Description:&#160;The location to look for the provided Search String Value</p>
                        <p>Default Value:&#160;contains</p>
                        <p>Options:</p>
                    </td>
                </tr>
                <tr>
                    <td>Type </td>
                    <td>Dynamic</td>
                </tr>
                <tr>
                    <td>Enabled by default</td>
                    <td>No</td>
                </tr>
                <tr>
                    <td>Scope</td>
                    <td>Database</td>
                </tr>
            </tbody>
        </table>
        <h4><code>TableCommentPatternCheck</code> Configurable Attributes</h4>
        <p>The following table identifies attributes that are configurable by <code>TableCommentPatternCheck</code>.</p>
        <table>
            <col style="width: auto;" />
            <col style="width: auto;" />
            <col style="width: auto;" />
            <col style="width: auto;" />
            <col style="width: auto;" />
            <thead>
                <tr>
                    <th>Attribute Name</th>
                    <th>Type</th>
                    <th>Description</th>
                    <th>Options/ Validation</th>
                    <th>Default Value</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><code>Operator</code>
                    </td>
                    <td>String/enum</td>
                    <td>The location to look for the provided SearchString value</td>
                    <td>
                        <p>- startsWith - SearchString provided should be found at the beginning of the table.</p>
                        <p>- endsWith - SearchString provided should be found at the end of the table.</p>
                        <p>- contains - SearchString provided can be anywhere in the lable.</p>
                        <p>- regexp - SearchString provided is a regexp that should be matched.</p>
                    </td>
                    <td>contains</td>
                </tr>
                <tr>
                    <td><code>SearchString</code>
                    </td>
                    <td>String/enum</td>
                    <td>The substring or regular expression to match.</td>
                    <td>SearchString should be a valid regular expression.</td>
                </tr>
                <tr>
                    <td><code>Message</code>
                    </td>
                    <td>String/enum</td>
                    <td>The message you wish to print when the check detects a pattern match</td>
                    <td>none&#160;</td>
                    <td>A match for regular expression  {{SearchString}} value was detected in Changeset changeset id.</td>
                </tr>
                <tr>
                    <td><code>Severity</code>
                    </td>
                    <td>String/enum</td>
                    <td>Set CASE_SENSITIVE (options: true, false)</td>
                    <td>user entry of true or false is accepted case-insensitively</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td><code>Constraint</code>
                    </td>
                    <td>String/enum</td>
                    <td>Enter the required constraint(s), separate</td>
                    <td>NOT NULL, UNIQUE, PRIMARYKEY, FOREIGNKEY</td>
                    <td>PRIMARYKEY</td>
                </tr>
            </tbody>
        </table>
        <h3>TableCommentCheck</h3>
        <table>
            <col style="width: 100px;" />
            <col style="width: 500px;" />
            <tbody>
                <tr>
                    <td>Short name</td>
                    <td><code>TableCommentCheck</code> </td>
                </tr>
                <tr>
                    <td>Description</td>
                    <td>The <code>TableCommentCheck</code> database check flags any table which does not have a comment. (Note: This is not a check for a <MadCap:variable name="General.Liquibase" />&#160;changelog comment.)</td>
                </tr>
                <tr>
                    <td>Configurable Attributes</td>
                    <td>
                        <p>Attribute Name:&#160;ConstraintOperator </p>
                        <p>Type:&#160;String / enum</p>
                        <p>Description:&#160;The location to look for the provided Search String Value</p>
                        <p>Default Value:&#160;contains</p>
                        <p>Options:</p>
                    </td>
                </tr>
                <tr>
                    <td>Type </td>
                    <td>Dynamic</td>
                </tr>
                <tr>
                    <td>Enabled by default</td>
                    <td>No</td>
                </tr>
                <tr>
                    <td>Scope</td>
                    <td>Database</td>
                </tr>
            </tbody>
        </table>
        <h3>TableColumnLimit</h3>
        <table>
            <col style="width: 100px;" />
            <col style="width: 500px;" />
            <tbody>
                <tr>
                    <td>Short name</td>
                    <td><code>TableColumnLimit</code> </td>
                </tr>
                <tr>
                    <td>Description</td>
                    <td>The <code>TableColumnLimit</code> ensures that no table described in a changelog or existing in a database target has more than a threshold number of columns.</td>
                </tr>
                <tr>
                    <td>Configurable Attributes</td>
                    <td>
                        <p>Attribute Name:&#160;ConstraintOperator </p>
                        <p>Type:&#160;String / enum</p>
                        <p>Description:&#160;The location to look for the provided Search String Value</p>
                        <p>Default Value:&#160;contains</p>
                        <p>Options:</p>
                    </td>
                </tr>
                <tr>
                    <td>Type </td>
                    <td>Dynamic</td>
                </tr>
                <tr>
                    <td>Enabled by default</td>
                    <td>No</td>
                </tr>
                <tr>
                    <td>Scope</td>
                    <td>Changelog, Database</td>
                </tr>
            </tbody>
        </table>
        <h3>Object name checks</h3>
        <h4>ObjectNameMustMatch</h4>
        <table>
            <col style="width: 100px;" />
            <col style="width: 500px;" />
            <tbody>
                <tr>
                    <td>Short name</td>
                    <td><code>ObjectNameMustMatch</code> </td>
                </tr>
                <tr>
                    <td>Description</td>
                    <td>The <code>ObjectNameMustMatch</code> check confirms the listed object names conform to the supplied pattern</td>
                </tr>
                <tr>
                    <td>Configurable Attributes</td>
                    <td>
                        <p>Attribute Name:&#160;ConstraintOperator </p>
                        <p>Type:&#160;String / enum</p>
                        <p>Description:&#160;The location to look for the provided Search String Value</p>
                        <p>Default Value:&#160;contains</p>
                        <p>Options:</p>
                    </td>
                </tr>
                <tr>
                    <td>Type </td>
                    <td>Dynamic</td>
                </tr>
                <tr>
                    <td>Enabled by default</td>
                    <td>No</td>
                </tr>
                <tr>
                    <td>Scope</td>
                    <td>Changelog, Database</td>
                </tr>
            </tbody>
        </table>
        <h4>ObjectNameMustNotMatch</h4>
        <table>
            <col style="width: 100px;" />
            <col style="width: 500px;" />
            <tbody>
                <tr>
                    <td>Short name</td>
                    <td><code>ObjectNameMustNotMatch</code> </td>
                </tr>
                <tr>
                    <td>Description</td>
                    <td>The <code>ObjectNameMustNotMatch</code> check triggers when the object name includes the supplied pattern. It also ensures names do have the supplied string or regex.</td>
                </tr>
                <tr>
                    <td>Configurable Attributes</td>
                    <td>
                        <p>Attribute Name:&#160;ConstraintOperator </p>
                        <p>Type:&#160;String / enum</p>
                        <p>Description:&#160;The location to look for the provided Search String Value</p>
                        <p>Default Value:&#160;contains</p>
                        <p>Options:</p>
                    </td>
                </tr>
                <tr>
                    <td>Type </td>
                    <td>Dynamic</td>
                </tr>
                <tr>
                    <td>Enabled by default</td>
                    <td>No</td>
                </tr>
                <tr>
                    <td>Scope</td>
                    <td>Changelog, Database</td>
                </tr>
            </tbody>
        </table>
        <h3>Database Objects Validated Output example:</h3>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><code>liquibase checks run --checks-scope=database</code> </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-text">Starting Liquibase at 09:54:30 (version [Core: //DAT-9298/2516/e42617/2022-05-11 19:02+0000, Pro: DAT-9298/1208/56ac6a/2022-05-11T18:56:15Z] #2516 built at 2022-05-11 19:02+0000)
Liquibase Version: [Core: //DAT-9298/2516/e42617/2022-05-11 19:02+0000, Pro: DAT-9298/1208/56ac6a/2022-05-11T18:56:15Z]
Liquibase Empire [Core: //DAT-9298/2516/e42617/2022-05-11 19:02+0000, Pro: DAT-9298/1208/56ac6a/2022-05-11T18:56:15Z] by Liquibase licensed to Dev until Sat Dec 30 21:59:59 MST 2023
Executing Quality Checks against database jdbc:h2:tcp://localhost:9090/mem:dev

Executing all database checks because a valid license key was found!

INFO This command might not yet capture Liquibase Pro additional object types on h2 Database objects Validated:
Liquibase command 'checks run' was executed successfully.</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <h3>Database Objects Validated Output example:</h3>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><code>liquibase checks run --checks-scope=database --verbose</code>
                </MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-text">Database objects Validated:

Catalog &#160; &#160; &#160; &#160; &#160; &#160; : 1

DEV

Column&#160; &#160; &#160; &#160; &#160; &#160; &#160; : 55

DEV.PUBLIC.BONUSES.CHEESE

DEV.PUBLIC.BONUSES.ID

DEV.PUBLIC.BONUSES.INCHES

DEV.PUBLIC.BONUSES.RAINBOWS

DEV.PUBLIC.BONUSES.TOPPING

DEV.PUBLIC.CAFE.ADDRESS1

DEV.PUBLIC.CAFE.ADDRESS2

DEV.PUBLIC.CAFE.CITY

DEV.PUBLIC.CAFE.ID

DEV.PUBLIC.CAFE.NAME

DEV.PUBLIC.CAFETABLES.CHEESE

DEV.PUBLIC.CAFETABLES.ID

DEV.PUBLIC.CAFETABLES.INCHES

DEV.PUBLIC.CAFETABLES.RAINBOWS

DEV.PUBLIC.CAFETABLES.TOPPING

DEV.PUBLIC.CUSTOMERS.CHEESE

DEV.PUBLIC.CUSTOMERS.ID

DEV.PUBLIC.CUSTOMERS.INCHES

DEV.PUBLIC.CUSTOMERS.RAINBOWS

DEV.PUBLIC.CUSTOMERS.TOPPING

DEV.PUBLIC.DRINKS.CHEESE

DEV.PUBLIC.DRINKS.ID

DEV.PUBLIC.DRINKS.INCHES

DEV.PUBLIC.DRINKS.RAINBOWS

DEV.PUBLIC.DRINKS.TOPPING

DEV.PUBLIC.FED_TAXES.CHEESE
DEV.PUBLIC.FED_TAXES.ID
DEV.PUBLIC.FED_TAXES.INCHES
DEV.PUBLIC.FED_TAXES.RAINBOWS
DEV.PUBLIC.FED_TAXES.TOPPING
DEV.PUBLIC.FOODS.CHEESE
DEV.PUBLIC.FOODS.ID
DEV.PUBLIC.FOODS.INCHES

DEV.PUBLIC.FOODS.RAINBOWS

DEV.PUBLIC.FOODS.TOPPING

DEV.PUBLIC.STAFFERS.CHEESE

DEV.PUBLIC.STAFFERS.ID

DEV.PUBLIC.STAFFERS.INCHES

DEV.PUBLIC.STAFFERS.RAINBOWS

DEV.PUBLIC.STAFFERS.TOPPING

DEV.PUBLIC.STATE_TAXES.CHEESE

DEV.PUBLIC.STATE_TAXES.ID

DEV.PUBLIC.STATE_TAXES.INCHES

DEV.PUBLIC.STATE_TAXES.RAINBOWS

DEV.PUBLIC.STATE_TAXES.TOPPING

DEV.PUBLIC.STOOLS.ADDRESS1

DEV.PUBLIC.STOOLS.ADDRESS2

DEV.PUBLIC.STOOLS.CITY

DEV.PUBLIC.STOOLS.ID

DEV.PUBLIC.STOOLS.NAME

DEV.PUBLIC.VENDORS.CHEESE

DEV.PUBLIC.VENDORS.ID

DEV.PUBLIC.VENDORS.INCHES

DEV.PUBLIC.VENDORS.RAINBOWS

DEV.PUBLIC.VENDORS.TOPPING

Index &#160; &#160; &#160; &#160; &#160; &#160; &#160; : 11

DEV.PUBLIC.BONUSES.PRIMARY_KEY_2

DEV.PUBLIC.CAFE.PRIMARY_KEY_1

DEV.PUBLIC.CAFETABLES.PRIMARY_KEY_D1

DEV.PUBLIC.CUSTOMERS.PRIMARY_KEY_6

DEV.PUBLIC.DRINKS.PRIMARY_KEY_7

DEV.PUBLIC.FED_TAXES.PRIMARY_KEY_3E

DEV.PUBLIC.FOODS.PRIMARY_KEY_3

DEV.PUBLIC.STAFFERS.PRIMARY_KEY_7C

DEV.PUBLIC.STATE_TAXES.PRIMARY_KEY_12

DEV.PUBLIC.STOOLS.PRIMARY_KEY_9

DEV.PUBLIC.VENDORS.PRIMARY_KEY_3F

PrimaryKey&#160; &#160; &#160; &#160; &#160; : 11

DEV.PUBLIC.BONUSES.CONSTRAINT_2

DEV.PUBLIC.CAFE.CONSTRAINT_1

DEV.PUBLIC.CAFETABLES.CONSTRAINT_D

DEV.PUBLIC.CUSTOMERS.CONSTRAINT_6

DEV.PUBLIC.DRINKS.CONSTRAINT_7

DEV.PUBLIC.FED_TAXES.CONSTRAINT_3E

DEV.PUBLIC.FOODS.CONSTRAINT_3

DEV.PUBLIC.STAFFERS.CONSTRAINT_7C

DEV.PUBLIC.STATE_TAXES.CONSTRAINT_12

DEV.PUBLIC.STOOLS.CONSTRAINT_9

DEV.PUBLIC.VENDORS.CONSTRAINT_3F

Schema&#160; &#160; &#160; &#160; &#160; &#160; &#160; : 1

DEV.PUBLIC

Table &#160; &#160; &#160; &#160; &#160; &#160; &#160; : 11

DEV.PUBLIC.BONUSES

DEV.PUBLIC.CAFE

DEV.PUBLIC.CAFETABLES

DEV.PUBLIC.CUSTOMERS

DEV.PUBLIC.DRINKS

DEV.PUBLIC.FED_TAXES

DEV.PUBLIC.FOODS

DEV.PUBLIC.STAFFERS

DEV.PUBLIC.STATE_TAXES

DEV.PUBLIC.STOOLS

DEV.PUBLIC.VENDORS
						
Liquibase command 'checks run' was executed successfully.</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
    </body>
</html>