<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:searchable="False">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/commands/quality-checks/command-arguments/checks-scope.html" />
        <meta name="description" content="Reference information and use cases for the check-scope parameter. It can be applied to the checks run command which allows the user to check either the changelog or database against any enabled checks." />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
    </head>
    <body>
        <MadCap:snippetBlock src="../../../Z_Resources/Snippets/images/icon-pro-top.flsnp" />
        <h1><code>checks-scope</code>
        </h1>
        <p><code class="language-text">checks-scope</code> is a parameter that can be applied to the <code class="language-text">checks <MadCap:xref href="../subcommands/run.htm">run</MadCap:xref></code> subcommand. It allows the user to check either the <MadCap:variable name="General.changelog" /> or database against any enabled checks.</p>
        <p>For a list of checks sorted by their scope, see <MadCap:xref href="../checks/home.htm">List of Quality Checks</MadCap:xref>.</p>
        <h2 id="uses">Uses</h2>
        <p>When you run <code class="language-text">checks-scope=changelog</code>, <MadCap:variable name="General.Liquibase" /> checks each <MadCap:variable name="General.changeset" /> in the <MadCap:variable name="General.changelog" /> to see if any of those <MadCap:variable name="General.changeset" />s trigger any enabled checks.</p>
        <p>When you run <code class="language-text">checks-scope=database</code>, <MadCap:variable name="General.Liquibase" /> checks each database object to see if any of those objects trigger any enabled checks.</p>
        <p>Both the <MadCap:variable name="General.changelog" /> and database can be checked by themselves or at the same time. Users may choose between <code class="language-text">changelog</code>, <code class="language-text">database</code>, or <code class="language-text">database,changelog</code> to run the enabled checks against. If <code class="language-text">checks-scope</code> is not specified, <MadCap:variable name="General.Liquibase" /> defaults to running <MadCap:variable name="General.changelog" /> checks.</p>
        <h2>Syntax</h2>
        <p>A check can be one scope or dual-scoped. When executed, the command can be used in any of the following ways:</p><pre xml:space="preserve"><code class="lang-text">--checks-scope=changelog
--checks-scope=database
--checks-scope=changelog,database
--checks-scope=database,changelog</code></pre>
        <p>For example:</p><pre xml:space="preserve"><code class="language-text">liquibase checks run --checks-scope=changelog --changelog-file=&lt;example-changelog.xml&gt;</code></pre>
        <h2>Attributes</h2>
        <p>The following table identifies attributes that can be used with the <code class="language-text">checks-scope</code> parameter. Note that <code class="language-text">checks-scope</code> works on all <MadCap:variable name="General.changelog" /> types (SQL, XML, YAML, and JSON), but not all <a href="../checks/home.htm" title="Learn more about Quality Checks here">quality checks</a> work on all <MadCap:variable name="General.changelog" /> types. It is best practice to review which quality checks work on the <MadCap:variable name="General.changelog" /> type you are using.</p>
        <table>
            <col style="width: auto;" />
            <col style="width: auto;" />
            <col style="width: 202px;" />
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Syntax</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><code class="language-text"><MadCap:variable name="General.changelog" /></code>
                    </td>
                    <td>
                        <p>CLI:</p>
                        <p><code class="language-text">--checks-scope=changelog</code>
                        </p>
                        <p>Property:</p>
                        <p><code class="language-text">liquibase.command.checksscope=changelog</code>
                        </p>
                        <p>Environment Variable:</p>
                        <p><code class="language-text">LIQUIBASE_COMMAND_CHECKS_SCOPE="changelog"</code>
                        </p>
                    </td>
                    <td>Specifies the <MadCap:variable name="General.changelog" /> subset of checks  to run.</td>
                </tr>
                <tr>
                    <td><code class="language-text">database</code>
                    </td>
                    <td>
                        <p>CLI:</p>
                        <p><code class="language-text">--checks-scope=database</code>
                        </p>
                        <p>Property:</p>
                        <p><code class="language-text">liquibase.command.checksscope=database</code>
                        </p>
                        <p>Environment Variable:</p>
                        <p><code class="language-text">LIQUIBASE_COMMAND_CHECKS_SCOPE="database"</code>
                        </p>
                    </td>
                    <td>Specifies the database subset of checks  to run.</td>
                </tr>
            </tbody>
        </table>
        <h2><code>checks-scope=changelog</code> process<br /></h2>
        <p>This example covers how to run <code class="language-text">checks-scope</code> against a <MadCap:variable name="General.changelog" />. It begins with a <MadCap:variable name="General.changelog" /> that contains a <MadCap:xref href="../../../change-types/create-table.html">createTable</MadCap:xref> <MadCap:variable name="General.changeset" /> and no checks enabled. Once the process is complete, the resulting checks will display successfully.</p>
        <ul>
            <li>With a <MadCap:variable name="General.changelog" /> that has a <code class="language-text">createTable</code> <MadCap:variable name="General.changeset" /> with two columns, enable the <code class="language-text">TableColumnLimit</code> check in your command line:</li><pre><code class="language-text">liquibase checks enable --check-name=TableColumnLimit</code></pre>
            <li>Run the <code class="language-text">liquibase checks run --checks-scope=changelog</code> command.</li>
            <li>Run <code class="language-text">liquibase checks bulk-set --disable</code> to disable any enabled checks. <MadCap:variable name="General.Liquibase" /> will ask if you are sure you want to disable all checks.</li>
            <li>Type <code class="language-text">Y</code> to confirm you want to disable all checks.</li>
            <li>Run <code class="language-text">liquibase checks customize --check-name=TableColumnLimit</code>.</li>
            <li>Set the severity as desired.</li>
            <li>Set the Max Columns to 2.</li>
            <li>Enable the check.</li>
            <li>Run <code class="language-text">liquibase checks run --checks-scope=changelog --changelog-file=yourName-createTable-changelog.xml</code>.</li>
        </ul>
        <h2><code>checks-scope=database</code> process</h2>
        <p>Users can establish which database the checks will be run against by specifying the desired database in the <code class="language-text">url</code> parameter within the <code class="language-text"><MadCap:variable name="General.liquiPropFile" /></code> file or the environment variable equivalent. The database is typically a JDBC connection string. A <MadCap:xref href="../../inspection/snapshot.html?">snapshot</MadCap:xref>, which is a reference to a <MadCap:variable name="General.Liquibase" />-created file describing the database, is automatically created if a live JDBC URL is used and any database-scoped checks are enabled. A snapshot can also be created manually by establishing an offline database URL.</p>
        <p>Users should be aware that some data types and settings change when checks-scope database is performed. Some examples are listed below.<br /></p>
        <ul>
            <li>Integers may become Numeric</li>
            <li>Varchar(max) setting can become a clob setting</li>
        </ul>
        <h3>Automatically create a snapshot and run checks</h3>
        <p>Users can automatically create a snapshot of the database if they use a live database URL and enable a database-scoped check:</p>
        <ol>
            <li>Establish the <code class="language-text">url</code> and <code class="language-text">referenceUrl</code> in the <code class="language-text"><MadCap:variable name="General.liquiPropFile" /></code> file:</li><pre xml:space="preserve"><code class="language-text">liquibase.command.url: jdbc:h2:tcp://localhost:9090/mem:dev
liquibase.command.referenceUrl: jdbc:h2:tcp://localhost:9090/mem:integration</code></pre>
            <p>This establishes the automatic snapshot.</p>
            <li>Run the <code class="language-text">liquibase checks run --checks-scope=database</code> command.</li>
        </ol>
        <h3>Manually create a snapshot and run checks</h3>
        <p>Users can take a snapshot of their database manually and run checks against it if they prefer using an offline database URL. They must first establish a snapshot and then enter the offline location in their <code class="language-text"><MadCap:variable name="General.liquiPropFile" /></code> file to run the command successfully:</p>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">This snapshot is not permanently retained.</p>
        <ol>
            <li> Run <code class="language-text">liquibase --output-file=mySnapshot.json snapshot --snapshotFormat=json</code> to create a snapshot. Replace <code class="language-text">mySnapshot.json</code> and <code class="language-text">=json</code> with the desired snapshot file title and format.</li>
            <li>Add the offline snapshot URL to the <code class="language-text"><MadCap:variable name="General.liquiPropFile" /></code> file: </li><pre xml:space="preserve">liquibase.command.url: offline:DB_SHORTNAME?snapshot=mySnapshot.json</pre>
            <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">Replace <code class="language-text">DB_SHORTNAME</code> with the database type being used (SQL, XML, YAML, or JSON). Also replace  <code class="language-text">mySnapshot.json</code> with the desired snapshot file title and format.</p>
            <p>The type of database is determined from the <code class="language-text">url</code> property if at least one database scope check is enabled. If the database cannot be determined, <MadCap:variable name="General.Liquibase" /> automatically generates SQL to check against using H2.</p>
            <li>Run the <code class="language-text">checks-scope</code> command:</li><pre><code class="language-text">liquibase checks run --checks-scope=database --url=offline:oracle?snapshot=mySnapshot.json</code></pre>
        </ol>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>Output</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <h3><code class="language-text">checks-scope=changelog</code> example</h3><pre xml:space="preserve"><code class="language-text">Starting Liquibase at 16:35:11 (version [Core: //DAT-9298/2516/e42617/2022-05-11 19:02+0000, Pro: DAT-9298/1208/56ac6a/2022-05-11T18:56:15Z] #2516 built at 2022-05-11 19:02+0000)
Liquibase Version: [Core: //DAT-9298/2516/e42617/2022-05-11 19:02+0000, Pro: DAT-9298/1208/56ac6a/2022-05-11T18:56:15Z]
Liquibase Empire [Core: //DAT-9298/2516/e42617/2022-05-11 19:02+0000, Pro: DAT-9298/1208/56ac6a/2022-05-11T18:56:15Z] by Liquibase licensed to Dev until Sat Dec 30 21:59:59 MST 2023
Executing Quality Checks against amber-createTable-changelog.xml

Executing all changelog checks because a valid license key was found!

CHANGELOG CHECKS
----------------
Checks completed validation of the changelog and found the following issues:
Changeset ID:       1::createTableforSynonym-PROSCHEMA
Changeset Filepath: amber-createTable-changelog.xml
Check Name:         Check Table Column Count (TableColumnLimit)
Check Severity:     MINOR (Return code: 1)
Message:            Table must not have more than 2 columns.

Changesets Validated:
ID: 1::createTableforSynonym-PROSCHEMA; Author: Liquibase Pro User; File path: amber-createTable-changelog.xml
Checks run against each changeset:
Check Table Column Count

Liquibase command 'checks run' was executed successfully.</code></pre>
                <h3><code class="language-text">checks-scope=database</code> example</h3><pre xml:space="preserve"><code class="language-text">Starting Liquibase at 12:18:24 (version [Core: //DAT-9298/2516/e42617/2022-05-11 19:02+0000, Pro: DAT-9298/1208/56ac6a/2022-05-11T18:56:15Z] #2516 built at 2022-05-11 19:02+0000)
Liquibase Version: [Core: //DAT-9298/2516/e42617/2022-05-11 19:02+0000, Pro: DAT-9298/1208/56ac6a/2022-05-11T18:56:15Z]
Liquibase Empire [Core: //DAT-9298/2516/e42617/2022-05-11 19:02+0000, Pro: DAT-9298/1208/56ac6a/2022-05-11T18:56:15Z] by Liquibase licensed to Dev until Sat Dec 30 21:59:59 MST 2023
Executing Quality Checks against database jdbc:h2:tcp://localhost:9090/mem:dev

Executing all database checks because a valid license key was found!

INFO This command might not yet capture Liquibase Pro additional object types on h2
Database objects Validated:
Catalog             : 1
Schema              : 1

Checks run against database jdbc:h2:tcp://localhost:9090/mem:dev:
Check Table Column Count

Liquibase command 'checks run' was executed successfully.</code></pre>
                <h3><code class="language-text">checks-scope</code> with offline snapshot URL</h3><pre xml:space="preserve"><code class="language-text">
Liquibase Community 4.9.1 by Liquibase
Database snapshot for jdbc:h2:tcp://localhost:9090/mem:integration
-----------------------------------------------------------------
Database type: H2
Database version: 2.1.210 (2022-01-17)
Database user: DBUSER
Included types:
liquibase.structure.core.Catalog
liquibase.structure.core.Column
liquibase.structure.core.ForeignKey
liquibase.structure.core.Index
liquibase.structure.core.PrimaryKey
liquibase.structure.core.Schema
liquibase.structure.core.Sequence
liquibase.structure.core.Table
liquibase.structure.core.UniqueConstraint
liquibase.structure.core.View
Liquibase command 'snapshot-reference' was executed successfully.</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
    </body>
</html>